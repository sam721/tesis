{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","Components/SpeedBar.tsx","Components/ControlBar.tsx","Components/GraphArray.tsx","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/Graph.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","Components/InputHeapModal.tsx","utils/heap-utils.js","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","speed","xs","type","min","max","value","id","step","onChange","e","dispatch","payload","currentTarget","ControlBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","target","selection","weight","animation","prevProps","console","log","setState","test","changeWeight","parseInt","error","_this2","edgeWeightInput","weighted","placeholder","width","handleWeightChange","onClick","validateWeight","fluid","clearGraph","title","index_es","icon","faTrash","remove","faTimes","textAlign","run","faStopCircle","faPlayCircle","Components_SpeedBar","Element","borderStyle","borderWidth","class","GraphArray","cols","Array","fill","GraphArray_Element","array","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","gifshot","MediaRecorder","_gifBuffer","_takingGif","_interval","downloadGif","buffer","createGIF","images","gifWidth","gifHeight","frameDuration","obj","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","arguments","undefined","download","jpg","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","elements","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","data","readAsText","handleClose","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","showModal","layout","stop","nodeStyle","NODE","edgeStyle","EDGE","nodes","removeNode","node","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","position","refreshLayout","setTimeout","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","handleClickViewport","event","_event$position","x","y","createNode","showDialog","objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","initialize","action","loadingGraph","parse","add","group","z-index","border-width","font-size","_this3","Math","floor","random","source","_this4","edgeWeight","Components_UploadGraphModal","Components_GraphArray","Components_ControlBar","takeGif","takeJson","TreeBar","insert","handleValueChange","validateValue","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","HeapArray","HeapArray_Element","header","map","_x","InputHeapModal","setStepInputRef","validateArray","handleCancel","element","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","heap","popper","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","grabbable","pannable","src","lastValue","clear","stateValues","_this5","Components_InputHeapModal","Components_HeapArray","Components_TreeBar","v","output","parseHeap","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","update","nodePopper","_getChildren","_getChildren2","slicedToArray","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","prev","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","_this6","anc","newChild","inorderSuccessor","suc","mode","_this7","Components_InputAVLModal","testRotation","root","parseAVL","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","match","connectedEdges","t","col","w","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","bcolor","swap","InputArrayModal","handleAccept","currentValues","ref","Bubblesort","shape","center","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","_prevProps","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","NavLink","items","list","to","Sidebar_HashRouter","App","Components_Sidebar","src_Editor","Components_AlgorithmInfo","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","initialState","reducer","store","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.473e859a.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, lines} = this.props;\r\n    let codelines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {codelines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    \r\n}\r\nexport default actions;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport actions from '../Actions/actions'\r\n\r\nimport SpeedBar from './SpeedBar'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  changeWeight: (weight: number) => void,\r\n  speed: number,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  weight: string,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  })\r\n}\r\nclass ControlBar extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      weight: '',\r\n      animation: false,\r\n      speed: 0,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    console.log(this.props.selection);\r\n    if (this.props.selection && this.props.selection.type === 'edge') {\r\n      if (!prevProps.selection || prevProps.selection.id !== this.props.selection.id) {\r\n        this.setState({ weight: this.props.selection.weight });\r\n      }\r\n    }\r\n  }\r\n  validateWeight(weight: string) {\r\n    let regex = /^[0-9]*/;\r\n    if (weight && regex.test(weight)) {\r\n      this.props.changeWeight(parseInt(weight, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n  handleWeightChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ weight: e.currentTarget.value });\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.target.value,\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { selection } = this.props;\r\n    let edgeWeightInput = null;\r\n    if (selection && selection.type === 'edge' && this.props.weighted) {\r\n      edgeWeightInput = (\r\n        <Row>\r\n          <Col xs={6}>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              placeholder=\"peso\"\r\n              value={this.state.weight}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleWeightChange(e)} />\r\n          </Col>\r\n          <Col xs={6}>\r\n            <button onClick={() => this.validateWeight(this.state.weight)}>Cambiar</button>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.clearGraph} title=\"Limpiar grafo\">\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.remove} title=\"Eliminar elemento\">\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={6} style={{ textAlign: 'center' }}>\r\n            <button onClick={this.props.run} title=\"Reproducir\">\r\n              <FontAwesomeIcon icon={(this.props.animation ? faStopCircle : faPlayCircle)} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={2}> {edgeWeightInput}</Col>\r\n          <Col xs={2}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ControlBar);\r\n","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%', height: '30px'}} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GraphArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    if(array[i]) cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(array);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default GraphArray;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        }else{\r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    console.log('Taking picture');\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 600) _this._gifBuffer.push(image);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      console.log(this._gifBuffer.length);\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(pos === commands.length) return;\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tconsole.error('No node selected');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tconsole.log(this.props);\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tconsole.error('No element selected');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true) return;\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tshowDialog = () => {\r\n\t\tthis.setState({showModal: !this.state.showModal});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={this.showDialog}/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<GraphArray array={this.state.values}/>\r\n\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeJson(this.cy)}>Test json</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({showModal: true})}>Test input</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation) return;\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove() {\r\n\t\tif(this.props.animation) return;\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0) return;\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation) return;\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  remove() {\r\n    if(this.props.animation) return;\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <Row id=\"canvas\" />\r\n        <TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n        <button onClick = {() => this.testRotation(0)}>Test left rotation</button>\r\n        <button onClick = {() => this.testRotation(1)}>Test right rotation</button>\r\n        <button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n        <button onClick={() => this.setState({show: true})}>Test AVL input</button>\r\n        <button onClick={() => parseAVL(this.cy.getElementById(this.treeRoot))}>Test AVL output</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      let w = edge.data('weight');\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputArrayModal;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n    this.cy.center();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: parseInt(id, 10)*35,\r\n        y: 0,\r\n      }\r\n    });\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t<ControlBar\r\n\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t<button onClick={() => this.setState({show: true})}>Change array</button>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/2,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/2,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Change array</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","// @flow\nimport React from 'react';\nimport './views/css/App.css';\nimport './views/css/codeblock.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport AlgorithmInfo from './Components/AlgorithmInfo'\nimport Editor from './Editor';\nimport Sidebar from './Components/Sidebar';\nimport CodeBlock from './Components/CodeBlock';\nimport { connect } from 'react-redux';\nimport BFS from './resources/pseudocodes/BFS';\nimport BFS_table from './resources/value_tables/BFS_table';\n\nconst mapStateToProps = state => ({\n  algorithm: state.algorithm,\n})\n\nclass App extends React.Component {\n  /*\n  render() {\n    const props = {\n      color: ['Gris', 'Blanco', 'Gris', 'Negro', 'Gris'],\n      u: 0,\n      v: 3,\n      inicio: 1,\n    }\n    return (\n      <body>\n        <BFS_table props={props}/>\n      </body>\n    );\n  }\n  */\n  \n  render() {\n    return (\n      <body>\n        <div style={{display: 'table', width: '100%'}}>\n          <Container fluid={true}>\n            <Row>\n              <Col xs={2} className='sidebar'>\n                <Sidebar />\n              </Col>\n              <Col xs={7}>\n                <Editor algorithm={this.props.algorithm} />\n              </Col>\n              <Col xs={3}>\n                <AlgorithmInfo algorithm={this.props.algorithm} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import actions from '../Actions/actions'\r\n\r\nimport BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nconst initialState = {\r\n  algorithm: 'BFS',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: BFS,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: DFS,\r\n      }\r\n    \r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: dijkstra,\r\n      }\r\n    \r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: kruskal,\r\n      }\r\n      \r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: prim,\r\n      }\r\n    \r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        speed: 1.0,\r\n      }\r\n    \r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        speed: 1.0,\r\n      }\r\n    \r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: bubblesort,\r\n      }\r\n      \r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: mergesort,\r\n      }\r\n\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n    \r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n    \r\n    case actions.CLEAR_GRAPH:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: false,\r\n      }\r\n    \r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n    \r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n    \r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n\r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n    \r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 10,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}