{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Processing/graph-processing.ts","resources/names_and_routes/algorithm_names.js","Components/Graph.tsx","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Algorithms/DS/PriorityQueue.js","Processing/heap-processing.ts","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Processing/avl-proccesing.tsx","Components/AVL2.tsx","Algorithms/DS/LinkedListSimulator.js","Processing/list-processing.ts","Components/LinkedList2.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","resources/pseudocodes/list.jsx","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Processing/mergesort-processing.ts","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Components/LinkedList.tsx","resources/names_and_routes/algorithm_routes.js","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/Footer.tsx","Components/PhotoControl.tsx","Components/GIFControl.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","Object","objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","show","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","INITIAL","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECT_LINKED_LIST","SELECT_SINGLE_LINKED_LIST","SELECT_DOUBLE_LINKED_LIST","SELECT_QUEUE","SELECT_STACK","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_PAUSE","ANIMATION_CONTINUE","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","TOGGLE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_OPTIONS","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","INVALID_HEAP_ERROR","INVALID_AVL_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_LIST_WARNING","EMPTY_QUEUE_WARNING","EMPTY_STACK_WARNING","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_BFS_INFO","STARTING_DFS_INFO","STARTING_DIJKSTRA_INFO","STARTING_KRUSKAL_INFO","STARTING_PRIM_INFO","STARTING_BUBBLESORT_INFO","STARTING_MERGESORT_INFO","STARTING_BINARYSEARCH_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","STARTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","ARRAY_SORTED_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","elements","graph","JSON","stringify","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","data","readAsText","handleClose","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","min","max","ref","onChange","selection","weight","Styles","cytoscape","exportGraph","nodes","forEach","node","group","position","edges","edge","source","target","parse","processCommands","commands","headless","steps","lastLines","_loop","pos","_commands$pos","eles","distance","duration","inst","ele","prevStyle","NODE_POPPER","name","algorithmNames","BFS","DFS","Dijkstra","Kruskal","Prim","MinHeap","AVL","BubbleSort","MergeSort","BinarySearch","SingleLinkedList","DoubleLinkedList","Queue","Stack","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","undo","redo","options","step","animationTimeout","handleUndo","animation","currentElements","pop","loadGraph","handleRedo","handleRewind","clearTimeout","Math","_this$buffer$_this$st","handleForward","_this$buffer$_this$st2","handleRepeat","_this$buffer$_this$st3","handlePauseContinue","paused","Promise","resolve","then","clearGraph","pushState","removeNode","remove","removeNodePopper","removeEdge","executeAnimation","notification","background-color","color","graphProcessing","algoNames","runButton","removePoppers","autolock","createPopper","refreshLayout","reject","execute","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","x","y","createNode","weighted","EDGE_WEIGHTED","EDGE_DIRECTED","takeJson","initialize","action","photo","gif","rewind","forward","pause","repeat","loadingGraph","cancelGif","_this3","withPoppers","container","selector","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","pixelRatio","match","visibility","on","enabled","speed","makeLayout","add","withStyle","borderWidth","zIndex","lineColor","targetArrowShape","targetArrowColor","lineStyle","_this4","_this4$buffer","setTimeout","z-index","border-width","font-size","_this5","floor","random","_this6","Components_UploadGraphModal","Components_InputModal","w","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","PriorityQueue","_comp","_eq","_data","isEmpty","NODE_BLACK","classes","parent","NODE_CORRECT","NODE_WRONG","_ref","l","r","_ref2","_ref3","_ref4","HeapProcessor","vw","vh","layoutProcessing","prev","addNode","concat","sep","getHeight","setSep","nx","ny","prevPosition","popper","prevPopPosition","lastDuration","val","src","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heapProcessor","output","parseHeap","autoungrabify","grabbable","pannable","_this7","_this7$buffer","_this8","_this9","clear","_this10","Components_InputHeapModal","v","isLeaf","getChildren","lca","parseAVL","root","recursion","_getChildren","_getChildren2","slicedToArray","InputAVLModal","addEdge","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","treeRoot","showSearchModal","showRemoveModal","anc","newChild","inorderSuccessor","suc","catch","update","wheelSensitivity","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","getNext","stopAnimation","bsearch","_getChildren21","_getChildren22","mode","_this11","Components_InputAVLModal","AVLProcessor","pushStep","updateLayout","refresh","warnings","keep","_this6$buffer","_this$AVLProcessor$se","LinkedListSimulator","toConsumableArray","slow","newId","next","caseLines","ListProcessor","doubly","list","doublyLinked","mid","_ele$data","splice","unshift","shift","_ele$data2","_this2$list$_data","rest","apply","_ele$data3","_this2$list$_data2","_ele$data4","_ele$data5","push_front","push_back","pop_front","pop_back","where","insert_before","insert_after","delete_position","LinkedList","showDeleteModal","showPushBeforeModal","showPushBackModal","showPushFrontModal","showPushAfterModal","shape","popFront","popBack","EDGE_DOUBLE","pseudoset","pushFront","pushBack","_this12","_this13","insertBefore","insertAfter","_this14","param","level","q","NODE_GRAY","front","EDGE_TRAVERSE","class","EDGE_VISITED","visited","pq","dist","fill","_pq$top","top","NODE_RED","nextId","prevDistance","part_of_tree","EDGE_NO_MST","EDGE_MST","connectedEdges","t","nextStyle","DisjointSet","_parent","find","nodeX","nodeY","sorted","ds","connected","join","pseudocodes_list","singlySet","main","doublySet","queueSet","stackSet","properties","pseudocodes","bcolor","swap","InputArrayModal","currentValues","size","prevValues","valuesToGraph","Bubblesort","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","nofocus","shadows","rshadows","cmd","p","slice","li","ri","shadow","addShadow","Mergesort","Sort","defaultStyle","lo","hi","showInputModal","BinarySearchAlgo","_commands","_this$list$_data","_this$list$_data2","algorithmRoutes","HashRouter","Route","Editor","Switch","path","routes","render","Components_Graph","Components_Heap","AVL2","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","LinkedList2","NavLink","items","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","algoDict","showActions","control","md","title","index_es","icon","faPlay","faPause","faRedo","faBackward","faForward","span","offset","faUndo","Components_OptionsMenu","Components_SpeedBar","PhotoControl","handleClick","GIFControl","timeEllapsed","ss","ms","gifLength","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","Components_PhotoControl","Components_GIFControl","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","nextState","listPseudo","animationReducer","canvasReducer","selectionReducer","createNotification","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","SORTING_BINARY_SEARCH_INFO","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","line-color","curve-style","line-style","target-arrow-color","target-arrow-shape","source-arrow-color","source-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.dfa25316.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {(index<10?'\\u00A0': '')+index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code && this.props.show){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n\r\n    INITIAL: 'INITIAL',\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECT_LINKED_LIST: 'SELECT_LINKED_LIST',\r\n    SELECT_SINGLE_LINKED_LIST: 'SELECT_SINGLE_LINKED_LIST',\r\n    SELECT_DOUBLE_LINKED_LIST: 'SELECT_DOUBLE_LINKED_LIST',\r\n    SELECT_QUEUE: 'SELECT_QUEUE',\r\n    SELECT_STACK: 'SELECT_STACK',\r\n\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_PAUSE: 'ANIMATION_PAUSE',\r\n    ANIMATION_CONTINUE: 'ANIMATION_CONTINUE',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    TOGGLE_PSEUDO: 'TOGGLE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n    CHANGE_OPTIONS: 'CHANGE_OPTIONS',\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    INVALID_HEAP_ERROR: 'INVALID_HEAP_ERROR',\r\n    INVALID_AVL_ERROR: 'INVALID_AVL_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_LIST_WARNING: 'EMPTY_LIST_WARNING',\r\n    EMPTY_QUEUE_WARNING: 'EMPTY_QUEUE_WARNING',\r\n    EMPTY_STACK_WARNING: 'EMPTY_STACK_WARNING',\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_BFS_INFO: 'STARTING_BFS_INFO',\r\n    STARTING_DFS_INFO: 'STARTING_DFS_INFO',\r\n    STARTING_DIJKSTRA_INFO: 'STARTING_DIJKSTRA_INFO',\r\n    STARTING_KRUSKAL_INFO: 'STARTING_KRUSKAL_INFO',\r\n    STARTING_PRIM_INFO: 'STARTING_PRIM_INFO',\r\n    STARTING_BUBBLESORT_INFO: 'STARTING_BUBBLESORT_INFO',\r\n    STARTING_MERGESORT_INFO: 'STARTING_MERGESORT_INFO',\r\n    STARTING_BINARYSEARCH_INFO: 'STARTING_BINARYSEARCH_INFO',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    STARTING_BINARY_SEARCH_INFO: 'STARTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    ARRAY_SORTED_SUCCESS: 'ARRAY_SORTED_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 300, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(elements){\r\n   \r\n    const graph = JSON.stringify(elements); \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className='modal-header' closeButton>\r\n            <Modal.Title>Seleccione un archivo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>El archivo debe contener un grafo valido, previamente descargado </p>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if(this.props.currentValue) this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un numero entero</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El numero debe estar entre -999 y 999</p>\r\n          <input \r\n            id=\"IntInput\"\r\n            type=\"number\" \r\n            min={-999}\r\n            max={999}\r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nconst exportGraph = (cy: any) => {\r\n  const elements:Array<Object> = [];\r\n  cy.nodes().forEach((node:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'nodes',\r\n      data: {\r\n        id: node.id(),\r\n        value: node.data('value'),\r\n        style: node.data('style'),\r\n        position: node.data('position'),\r\n      },\r\n      position: node.data('position'),\r\n    })\r\n  });\r\n  cy.edges().forEach((edge:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'edges',\r\n      data: {\r\n        id: edge.id(),\r\n        source: edge.source().id(), target: edge.target().id(),\r\n        weight: edge.data('weight'),\r\n        style: edge.data('style'),\r\n        /*\r\n        style: {\r\n          lineColor: edge.style('line-color'),\r\n          targetArrowShape: edge.style('target-arrow-shape'),\r\n          targetArrowColor: edge.style('target-arrow-color'),\r\n          lineStyle: edge.style('line-style'),\r\n        }\r\n        */\r\n      }\r\n    })\r\n  });\r\n  //console.log(elements);\r\n  return JSON.parse(JSON.stringify(elements));\r\n}\r\n\r\n\r\nconst processCommands = (elements: Array<Object>, commands:Array<AnimationStep>) => {\r\n  \r\n  const cy = cytoscape({\r\n    elements: JSON.parse(JSON.stringify(elements)),\r\n    headless: true,\r\n  });\r\n\r\n  const steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n\r\n  let lastLines:Array<number> = [];\r\n  for(let pos = 0; pos < commands.length; pos++){\r\n    let { eles, distance, style, duration, inst, lines, data } = commands[pos];\r\n\r\n    if(duration == null) duration = 1000;\r\n    if(lines == null) lines = [];\r\n\r\n    steps.push({elements: exportGraph(cy), lines: lastLines, duration});\r\n    lastLines = lines;\r\n    if (eles) {\r\n      eles.forEach((ele, index) => {\r\n        let prevStyle = cy.getElementById(ele).data('style');\r\n        if(style) cy.getElementById(ele).data('style', {...prevStyle, ...style[index]});\r\n        if(data) cy.getElementById(ele).data('value', data[index].value);\r\n        if (distance !== undefined){\r\n          cy.getElementById(ele+'-popper').data('style', Styles.NODE_POPPER);\r\n          cy.getElementById(ele+'-popper').data('value', distance[index]);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(inst){\r\n      inst.forEach(ele => {\r\n        if(ele.name === 'update_level'){\r\n          const {data} = ele;\r\n          if(data){\r\n            const id = data.id, value = data.value;\r\n            if(id != null && value != null){\r\n              cy.getElementById(id+'-popper').data('style', Styles.NODE_POPPER);\r\n              cy.getElementById(id+'-popper').data('value', value);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  steps.push({elements: exportGraph(cy), lines: lastLines, duration: 0});\r\n\r\n  return steps;\r\n}\r\n\r\nexport default processCommands;","const algorithmNames = {\r\n  BFS: 'BFS',\r\n  DFS: 'DFS',\r\n  Dijkstra: 'Dijkstra',\r\n  Kruskal: 'Kruskal',\r\n  Prim: 'Prim',\r\n  MinHeap: 'MinHeap',\r\n  AVL: 'AVL',\r\n  BubbleSort: 'BubbleSort',\r\n  MergeSort: 'MergeSort',\r\n  BinarySearch: 'BusquedaBinaria',\r\n  SingleLinkedList: 'ListaEnlazada',\r\n  DoubleLinkedList: 'ListaDoblementeEnlazada',\r\n  Queue: 'Cola',\r\n  Stack: 'Pila',\r\n};\r\n\r\nexport default algorithmNames;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\nimport graphProcessing from '../Processing/graph-processing';\r\nimport algoNames from '../resources/names_and_routes/algorithm_names'\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\t\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t\tpaused: state.paused,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\t\r\n\toptions: Array<{name: string, run: () => void}>;\r\n\tcy = cytoscape();\r\n\r\n\tbuffer: Array<{elements: Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\r\n\tstep:number=0;\r\n\tanimationTimeout = 0;\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Eliminar',\r\n\t\t\t\trun: this.removeButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\trun: this.weightButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\trun: this.clearGraph,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\trun: () => this._mediaRecorder.takeJson(this.exportGraph()),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data);\r\n\t\t\tif(elements){\r\n\t\t\t\tthis.pushState();\r\n\t\t\t\tthis.loadGraph(elements);\r\n\t\t\t}\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{ name: 'Volver a edicion', run: this.runButton}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else if(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: this.options,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\r\n\tinitialize(elements: Array<Object>, withPoppers:boolean=false){\r\n\t\tconsole.log(elements);\r\n\t\t\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: JSON.parse(JSON.stringify(elements)),\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tif(!withPoppers) this.removePoppers();\r\n\t\telse{\r\n\t\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\t\tif(node.id().match('popper')) node.style({'visibility': 'hidden'});\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet elements = this.undo.pop();\r\n\t\tconsole.log(elements);\r\n\t\tthis.redo.push(currentElements);\r\n\t\t\r\n\t\tif(elements !== undefined) this.loadGraph(elements);\r\n\t\t\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tconst elements = this.redo.pop();\r\n\t\tthis.undo.push(currentElements);\r\n\t\tif(elements !== undefined) this.loadGraph(elements);\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconsole.log(this.step);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>, withPoppers:boolean = false){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t\tconsole.log(elements);\r\n\t\tfor(let i = 0; i < elements.length; i++) this.cy.add(elements[i]);\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t})\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t}\r\n\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t\tzIndex: node.style('z-index'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tlineColor: edge.style('line-color'),\r\n\t\t\t\t\t\ttargetArrowShape: edge.style('target-arrow-shape'),\r\n\t\t\t\t\t\ttargetArrowColor: edge.style('target-arrow-color'),\r\n\t\t\t\t\t\tlineStyle: edge.style('line-style'),\t\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\t\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tthis.pushState();\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\tanimation(){\r\n\t\tlet step = () => {\r\n\t\t\tif(!this._isMounted) return;\r\n\t\t\tif(this.step === this.buffer.length){\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t});\r\n\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tthis.loadGraph(elements, true);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\texecuteAnimation = (commands:Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.buffer = graphProcessing(this.exportGraph(true), commands);\r\n\t\tlet notification;\r\n\t\tif(this.props.algorithm === algoNames.BFS) notification = actions.STARTING_BFS_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.DFS) notification = actions.STARTING_DFS_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Dijkstra) notification = actions.STARTING_DIJKSTRA_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Kruskal) notification = actions.STARTING_KRUSKAL_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Prim) notification = actions.STARTING_PRIM_INFO;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: notification,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== algoNames.Kruskal && this.props.algorithm !== algoNames.Prim) {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands:Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands:Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pushState();\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\t\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tif(this.cy.getElementById(id).data('weight') === weight) return;\r\n\t\t\tthis.pushState();\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n  dispatch: (action:Object)=>void,\r\n\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }else{\r\n        this.props.dispatch({\r\n          type: actions.INVALID_HEAP_ERROR,\r\n        });\r\n      }\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_HEAP_ERROR,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un Heap valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputHeapModal);","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log('VALIDANDO', values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    console.log(values[i], left, right);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","const Styles = require('../../Styles/Styles')\r\nclass PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos]) || this._eq(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_CORRECT],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ((this._comp(l, r) || this._eq(l, r)) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if ((this._comp(r, l) || this._eq(r, l)) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nclass HeapProcessor{\r\n\theap = new PriorityQueue((x, y) => x < y, (x, y) => x === y);\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  constructor(vw: number, vh: number){\r\n    this.vh = vh; this.vw = vw; \r\n  }\r\n\r\n  loadGraph(elements:Array<Object>){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n\r\n    this.heap._data = [0];\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        this.heap._data[parseInt(node.id())] = node.data('value');\r\n        node.data('style', Styles.NODE);\r\n      }else{\r\n        node.data('style', Styles.NODE_POPPER);\r\n      }\r\n    });\r\n    console.log(this.heap._data);\r\n  }\r\n  \r\n\texportGraph = () => {\r\n    const elements:Array<Object> = [];\r\n    this.layoutProcessing();\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          id: node.id(),\r\n          value: node.data('value'),\r\n          style: node.data('style'),\r\n          position: node.data('position'),\r\n        },\r\n        position: prev,\r\n      })\r\n    });\r\n    this.cy.edges().forEach((edge:CytoscapeElement) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          id: edge.id(),\r\n          source: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n          /*\r\n          style: {\r\n            lineColor: edge.style('line-color'),\r\n            targetArrowShape: edge.style('target-arrow-shape'),\r\n            targetArrowColor: edge.style('target-arrow-color'),\r\n            lineStyle: edge.style('line-style'),\r\n          }\r\n          */\r\n        }\r\n      })\r\n    });\r\n    //console.log(elements);\r\n    return JSON.parse(JSON.stringify(elements));\r\n  }\r\n  \r\n  createPopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.data('position');\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {\r\n        id : nodeId+'-popper', \r\n        value,\r\n        style: Styles.NODE_POPPER,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y+30,\r\n        },\r\n      },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { \r\n          id: node.toString(), \r\n          value, \r\n          position: {x:position.x, y: position.y}\r\n        },\r\n        position: {x:position.x, y: position.y},\r\n      },\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n  }\r\n  \r\n  layoutProcessing() {\r\n    if(this.heap._data.length === 0) return;\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', prevPosition);\r\n      node.data('position', { x: nx, y: ny });\r\n      const popper = this.cy.getElementById(node.id() + '-popper');\r\n      const prevPopPosition = popper.data('position');\r\n      popper.data('prevPosition', prevPopPosition);\r\n\t\t\tpopper.data('position', { x: nx, y: ny + 30 });\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tsetSep(this.cy.getElementById(\"1\"), this.vw / 2, this.vh / 4, sep);\r\n\t\treturn true;\r\n  }\r\n  \r\n\tprocessCommands(commands: Array<AnimationStep>){\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n    })\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n    let lastLines:Array<number> = [];\r\n    let lastDuration = 0;\r\n    for(let pos = 0; pos < commands.length; pos++){\r\n      let { eles, style, duration, data, classes, lines} = commands[pos];\r\n      if(duration == null) duration = 1000;\r\n      if(lines == null) lines = [];\r\n\r\n      steps.push({elements: this.exportGraph(), lines: lastLines, duration: lastDuration});\r\n      lastLines = lines;\r\n      lastDuration = duration;\r\n      if (eles) {\r\n        eles.forEach((ele, index) => {\r\n          if(style){\r\n            const node = this.cy.getElementById(ele);\r\n            node.data('style', style[index]);\r\n          }\r\n          if(data != null){\r\n            this.cy.getElementById(ele).data(data[index]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    steps.push({elements: this.exportGraph(), lines: lastLines, duration: 1000});\r\n    return steps;\r\n  }\r\n\r\n\tinsert(val = 0) {\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n      this.addNode(\"1\", val);\r\n      steps.push({\r\n        elements: this.exportGraph(),\r\n        duration: 1000,\r\n        lines: [1,2,3,4]\r\n      });\r\n      const commands = this.heap.push(val, true);\r\n      steps = steps.concat(this.processCommands(commands));\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val, src.data('position'));\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n      )\r\n      steps.push({\r\n        elements: this.exportGraph(),\r\n        duration: 1000,\r\n        lines: [1,2,3,4]\r\n      });\r\n      const commands = this.heap.push(val, true);\r\n      steps = steps.concat(this.processCommands(commands));\r\n\t\t}\r\n\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }\r\n    });\r\n    steps.push({elements: this.exportGraph(), lines: [], duration: 0});\r\n    return steps;\r\n\t}\r\n\r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n  }\r\n  \r\n\tremove = () => {\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n    let commands:Array<AnimationStep>;\r\n\t\tcommands = this.heap.pop(true);\r\n\r\n\t\tif (n === 1) {\r\n\t\t\treturn [{ elements: this.exportGraph(), lines: [], duration: 1000}];\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).data('position');\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];    \r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n    steps = steps.concat({elements: this.exportGraph(), lines: [], duration: 1000});\r\n\r\n    steps = steps.concat(this.processCommands(commands));\r\n\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }\r\n    });\r\n    steps.push({elements: this.exportGraph(), lines: [], duration: 0});\r\n    return steps;\r\n\t}\r\n}\r\n\r\nexport default HeapProcessor;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport { insert, remove } from '../resources/pseudocodes/heap';\r\nimport HeapProcessor from '../Processing/heap-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: { [id: string]: { x: number, y: number } },\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n\theap: Array<number>,\r\n\telements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theapProcessor:any;\r\n\tbuffer: Array<{ elements: Array<Object>, lines: Array<number>, duration: number }> = [];\r\n\toptions: Array<{ name: string, run: () => void }>;\r\n\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Insertar',\r\n\t\t\t\trun: () => this.setState({ showInsertModal: true }),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\trun: this.remove,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\trun: () => { },\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\trun: () => this.setState({ show: true }),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\trun: () => { \r\n\t\t\t\t\tif(!this.props.animation) parseHeap(this.heapProcessor.heap._data)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\tinitialize() {\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif (node.id().match('-popper')) {\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout({ ...layoutOptions, animate: false });\r\n\t\tthis.layout.run();\r\n\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize();\r\n\t\tthis.heapProcessor = new HeapProcessor(this.cy.width(), this.cy.height());\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tlayoutOptions.animationDuration = 500 / this.props.speed;\r\n\r\n\t\tif (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n\t\t\t\t\t\t\t\tthis.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n\t\t\t\t\t\t\t\tthis.props.dispatch({ type: actions.ANIMATION_END })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif (this.undo.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\r\n\t\tlet state = this.undo.pop();\r\n\t\tif (state !== undefined) {\r\n\t\t\tthis.redo.push(currentElements);\r\n\t\t\tthis.loadGraph(state);\r\n\t\t\tthis.heapProcessor.loadGraph(state);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif (this.redo.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\r\n\t\tlet state = this.redo.pop();\r\n\t\tif (state !== undefined) {\r\n\t\t\tthis.undo.push(currentElements);\r\n\t\t\tthis.loadGraph(state);\r\n\t\t\tthis.heapProcessor.loadGraph(state);\r\n\t\t}\r\n\t}\r\n\r\n\tpushState() {\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\r\n\tloadGraph(elements: Array<Object>) {\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n\t\t\tconst position = node.data('position');\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\r\n\texportGraph() {\r\n\t\tconst elements: Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: {\r\n\t\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstyle: node.style(),\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string, value: number) {\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId + '-popper', value },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y + 30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: { x: number, y: number } = { x: 0, y: 0 }) {\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition: { x: position.x, y: position.y },\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\tanimation() {\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst { elements, lines, duration } = this.buffer[this.step++];\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif (lines) this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines } });\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration) / (this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n\texecuteAnimation = () => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif (!node.id().match('-popper')) {\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tnew Promise((resolve, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tresolve();\r\n\t\t}).then(() => {\r\n\t\t\tthis.step = 0;\r\n\t\t\tthis.animation();\r\n\t\t})\r\n\t}\r\n\r\n\trefreshLayout(animate: boolean = true) {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ ...layoutOptions, animate });\r\n\t\tthis.layout.run();\r\n\t}\r\n\t\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tnode.data('position', {x: nx, y: ny});\r\n\t\t\tconst popper = this.cy.getElementById(node.id() + '-popper');\r\n\t\t\tlayoutOptions.positions[popper.id()] = { x: nx, y: ny + 30 }\r\n\t\t\tpopper.data('position', {x: nx, y: ny+30});\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tinsert(val = 0) {\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.buffer = this.heapProcessor.insert(val);\r\n\t\tconsole.log(this.buffer);\r\n\t\tthis.executeAnimation();\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.buffer = this.heapProcessor.remove();\r\n\t\tconsole.log(this.buffer);\r\n\t\tthis.executeAnimation();\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>) {\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heapProcessor.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.addNode(i.toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: i.toString() + '-' + (2*i).toString(),\r\n\t\t\t\t\tsource: i.toString(),\r\n\t\t\t\t\ttarget: (2*i).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i+1 < values.length; i++){\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: i.toString() + '-' + (2*i+1).toString(),\r\n\t\t\t\t\tsource: i.toString(),\r\n\t\t\t\t\ttarget: (2*i+1).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.refreshLayout();\r\n\t\tthis.heapProcessor.loadGraph(this.exportGraph());\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal\r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray={(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose={() => this.setState({ show: false })}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal\r\n\t\t\t\t\tshow={this.state.showInsertModal}\r\n\t\t\t\t\thandleClose={() => this.setState({ showInsertModal: false })}\r\n\t\t\t\t\tcallback={(v: number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct' />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n  if(root.length === 0) return output;\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un arbol AVL valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  root: string,\r\n  elements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  undo:Array<stackState>=[];\r\n  redo:Array<stackState>=[];\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.initialize({ root: '', elements: []});\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n        gif: () => this._mediaRecorder.takeGif(this.cy),\r\n        undo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: () => this.setState({showRemoveModal: true}),\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  initialize(state: stackState){\r\n    const {root, elements} = state;    \r\n\t\tlet edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements,\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tif(node.id().match('-popper')){\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n    });\r\n    this.treeRoot = root;\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate: false});\r\n\t\tthis.layout.run();\r\n\r\n\t\tthis.refreshLayout();\r\n  }\r\n  \r\n  handleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.undo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.redo.push({ root: this.treeRoot, elements: currentElements});\r\n\t\t  this.initialize(state);\r\n    }\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.undo.push({ root: this.treeRoot, elements: currentElements});\r\n\t\t  this.initialize(state);\r\n    }\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n    console.log('pushed');\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push({root: this.treeRoot, elements: this.exportGraph()});\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = this.cy.nodes().length/2 + 1;\r\n    let newNode:CytoscapeElement;\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.pushState();\r\n              this.addNode(id.toString(), value, 0, 0, prev.position());\r\n              newNode = this.cy.getElementById(id.toString());\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.pushState();\r\n        this.addNode(id.toString(), value);\r\n        newNode = this.cy.getElementById(id.toString());\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number, stopAnimation: boolean = true){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload:{\r\n        pseudo: search,\r\n      }\r\n    })\r\n    let promise = new Promise((resolve: (node: CytoscapeElement) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [2]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [5,6]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [3,4]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n\r\n          if(stopAnimation){\r\n            this.props.dispatch({\r\n              type: actions.ANIMATION_END,\r\n            });\r\n          }\r\n\r\n          if(!found){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [1]},\r\n            });\r\n\r\n            setTimeout(reject, 1000/ this.props.speed);\r\n          }\r\n          setTimeout(resolve, 1000/this.props.speed, prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = (value: number) => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const searchPromise = this.search(value, false);\r\n    searchPromise.then((node?: CytoscapeElement) => {\r\n      if(node === undefined) return;\r\n      let anc = '';\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_PSEUDO,\r\n        payload: { pseudo: remove}\r\n      });\r\n\r\n      this.pushState();\r\n      if(isLeaf(node)){\r\n        this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n        if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n        if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        else this.props.dispatch({type: actions.ANIMATION_END});\r\n      }else if(node.outgoers('node').length === 1){\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n        if(node.id() === this.treeRoot){\r\n          this.treeRoot = node.outgoers('node')[0].id();\r\n          anc = this.treeRoot;\r\n          this.removeNode(node);\r\n          this.refreshLayout();\r\n        }else{\r\n          let prev = '';\r\n          prev = node.data('prev');\r\n          const newChild = node.outgoers('node')[0];\r\n          newChild.data(prev);\r\n          this.removeNode(node);\r\n          this.addEdge(prev, newChild.id());\r\n          anc = newChild.id();\r\n          this.refreshLayout();\r\n        }\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n      }else{\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n        let promise = this.inorderSuccessor(node);\r\n        promise.then((suc: CytoscapeElement) => {\r\n          this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n          node.data('value', suc.data('value'));\r\n          suc.data('value', value);\r\n          setTimeout(\r\n            () => {\r\n                if(!isLeaf(suc)){\r\n                  const right = getChildren(suc)[1];\r\n                  right.data('prev', suc.data('prev'));\r\n                  this.addEdge(suc.data('prev'), right.id());\r\n                }\r\n                anc = suc.data('prev');\r\n                this.removeNode(suc);\r\n                this.refreshLayout();\r\n                setTimeout(() => \r\n                  this.balance(this.cy.getElementById(anc)).then(() => {\r\n                    this.props.dispatch({type: actions.ANIMATION_END});\r\n                  }),\r\n                  1000/this.props.speed\r\n                );\r\n                node.style(Styles.NODE);\r\n              },\r\n              1000/this.props.speed);\r\n        });\r\n      }\r\n    }).catch(() => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_END,\r\n      });\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.pushState();\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v).catch(() => {})}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","import { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { getChildren, lca, getHeight, isLeaf } from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport {insert, remove, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  treeRoot: string,\r\n  refresh?: boolean,\r\n}\r\nclass AVLProcessor { \r\n\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  treeRoot:string=\"\";\r\n\r\n  buffer:Array<exportStep> = [];\r\n\r\n  pseudo:Array<Object> = [];\r\n  constructor(vw: number, vh: number){\r\n    this.vh = vh; this.vw = vw; \r\n  }\r\n\r\n  loadGraph(elements:Array<Object>, root: string){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }else{\r\n        node.data('style', Styles.NODE_POPPER);\r\n      }\r\n    });\r\n    this.treeRoot = root;\r\n  }\r\n  exportGraph(updateLayout=true){\r\n\t\tconst elements:Array<Object> = [];\r\n    if(updateLayout) this.layoutProcessing();\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n          position: node.data('position'),\r\n          style: node.data('style'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: prev,\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n\r\n  pushStep(lines:Array<number> = [], duration:number = 1000, refresh=true){\r\n    this.buffer.push({\r\n      elements: this.exportGraph(refresh),\r\n      lines,\r\n      duration,\r\n      treeRoot: this.treeRoot,\r\n      pseudo: this.pseudo,\r\n    })\r\n  }\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.data('position');\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {\r\n        id : nodeId+'-popper', \r\n        style: Styles.NODE_POPPER,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y+30,\r\n        },\r\n      },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n        position: { x: position.x, y: position.y },\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', prevPosition);\r\n      node.data('position', { x: node.data('X')*24 + nx, y: ny });\r\n      const popper = this.cy.getElementById(node.id() + '-popper');\r\n      const prevPopPosition = popper.data('position');\r\n      popper.data('prevPosition', prevPopPosition);\r\n\t\t\tpopper.data('position', {x: node.data('X')*24 + nx, y: ny + 30});\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.vw, vh = this.vh;\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  addEdge = (source: string, target: string) => {\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n  }\r\n\r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.pushStep([], 1000);\r\n  }\r\n\r\n rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n    this.pushStep();\r\n  }\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    */\r\n    //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    this.pseudo = balance;\r\n    this.pushStep();\r\n\r\n    const recursion = () => {\r\n      const [left, right] = getChildren(node);\r\n      const lh = getHeight(left), rh = getHeight(right);\r\n      node.data('height', Math.max(lh, rh)+1);\r\n      const bal = rh - lh;\r\n      node.data('balance', bal);\r\n      if(bal === 2){\r\n        if(right.data('balance') >= 0){\r\n          this.pushStep([2,3]);\r\n          //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n          this.rotateRight(node);\r\n        }else{\r\n          this.pushStep([6,7]);\r\n          //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n          this.rotateLeft(right);\r\n          this.rotateRight(node);\r\n        }\r\n      }else if(bal === -2){\r\n        if(left.data('balance') <= 0){\r\n          this.pushStep([4,5]);\r\n          this.rotateLeft(node);\r\n        }else{\r\n          this.pushStep([8,9]);\r\n          this.rotateRight(left);\r\n          this.rotateLeft(node);\r\n        }\r\n      }else{\r\n        this.pushStep([1]);\r\n      }\r\n      if(node.id() !== this.treeRoot){\r\n        node.data('style', Styles.NODE);\r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.data('style', {\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        recursion();\r\n      }\r\n    }  \r\n    this.pushStep([1]);\r\n    //this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n    \r\n    node.data('style', {\r\n      'background-color': 'red',\r\n      'color': 'black',\r\n    })\r\n    \r\n    //setTimeout(recursion, 1000/this.props.speed);\r\n    recursion();\r\n  }\r\n\r\n  insert(value: number) {\r\n    this.buffer = [];\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = this.cy.nodes().length/2 + 1;\r\n    let newNode:(CytoscapeElement | null) = null;\r\n    this.pseudo = insert;\r\n    this.pushStep();\r\n\r\n    if(n > 1){\r\n      let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        console.log(current);\r\n        \r\n        if(prev) prev.data('style',{\r\n          'color': 'black',\r\n          'background-color': 'white',\r\n        });\r\n        \r\n        if(current){\r\n          \r\n          current.data('style', {\r\n            'color': 'white',\r\n            'background-color': 'black',\r\n          });\r\n          \r\n          let [left, right] = getChildren(current);\r\n          if (value < current.data('value')) {\r\n            this.pushStep([3, 4]);\r\n            //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n            //setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            insertion(left, current);\r\n          } else {\r\n            this.pushStep([5, 6]);\r\n            //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n            //setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            insertion(right, current);\r\n          }\r\n        }else{\r\n          //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n          if(prev){\r\n            this.addNode(id.toString(), value, 0, 0, prev.data('position'));\r\n            newNode = this.cy.getElementById(id.toString());\r\n            if(newNode){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              newNode.data(\r\n                'prev', prev.id(),\r\n              );\r\n            }\r\n          }\r\n          this.pushStep([1,2]);\r\n          //this.refreshLayout();\r\n          //setTimeout(resolve, 1000/this.props.speed, null);\r\n        } \r\n      }\r\n      insertion(this.cy.getElementById(this.treeRoot), null);\r\n    }else{\r\n      this.addNode(id.toString(), value);\r\n      newNode = this.cy.getElementById(id.toString());\r\n      this.treeRoot = id.toString();\r\n      this.pushStep([1,2]);\r\n    }\r\n    if(newNode) this.balance(newNode);\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n    })\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  search(value: number){\r\n    this.buffer = [];\r\n    this.pseudo = search;\r\n    this.pushStep();\r\n\r\n    let found = false;\r\n    const bsearch = (node: CytoscapeElement | null, prev: CytoscapeElement | null) => {\r\n      if(prev){\r\n        prev.data('style',{\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n      }\r\n      if(node){\r\n        node.data('style', {\r\n          'background-color': 'black',\r\n          'color': 'white',\r\n        });\r\n        const [left, right] = getChildren(node);\r\n        if(node.data('value') === value){\r\n          node.data('style',{\r\n            'background-color': 'lightgreen',\r\n            'color': 'black',\r\n          });\r\n          found = true;\r\n          this.pushStep([2]);\r\n\r\n          //setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          bsearch(null, node);\r\n        }else if(node.data('value') < value){\r\n          this.pushStep([5,6]);\r\n          bsearch(right, node);\r\n        }else{\r\n          this.pushStep([3,4]);\r\n          bsearch(left, node);\r\n        }\r\n      }\r\n    }\r\n    bsearch(this.cy.getElementById(this.treeRoot), null);\r\n\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n    });\r\n\r\n    this.pushStep();\r\n    return {found, buffer: this.buffer}\r\n  }\r\n\r\n  inorderSuccessor(node: CytoscapeElement){\r\n    this.pushStep();\r\n    let suc = node;\r\n    const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n      if(prev){\r\n        prev.data('style', {\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        suc = prev;\r\n      }\r\n      if(node){\r\n        node.data('style', {\r\n          'background-color': 'red',\r\n          'color' : 'black',\r\n        });\r\n        const left = getChildren(node)[0];\r\n        this.pushStep();\r\n        getNext(left, node);\r\n      }\r\n    }\r\n    let right = getChildren(node)[1];\r\n    node = right;\r\n    getNext(node, null);\r\n    return suc;\r\n  }\r\n  \r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  remove = (value: number) => {\r\n    this.buffer = [];\r\n    this.search(value);\r\n    this.pseudo = remove;\r\n    let node = this.cy.getElementById(this.treeRoot);\r\n    let found = false;\r\n    this.cy.nodes().forEach((ele:CytoscapeElement) => {\r\n      if(!ele.id().match('popper') && ele.data('value') === value){\r\n        node = ele;\r\n        found = true;\r\n      }\r\n    });\r\n    if(!found) return this.buffer;\r\n    let anc = '';\r\n\r\n    this.pushStep();\r\n\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.pushStep([1]);\r\n      if(anc !== '') this.balance(this.cy.getElementById(anc));\r\n    }else if(node.outgoers('node').length === 1){\r\n      //this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.pushStep([3,4]);\r\n      }else{\r\n        let prev = '';\r\n        prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data(prev);\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.pushStep([3,4]);\r\n      }\r\n      this.balance(this.cy.getElementById(anc));\r\n    }else{\r\n      this.pushStep([6]);\r\n      const suc = this.inorderSuccessor(node);\r\n      console.log('NODE', node);\r\n      console.log('SUC', suc);\r\n      this.pushStep([7,8]);\r\n      node.data('value', suc.data('value'));\r\n      suc.data('value', value);\r\n      this.pushStep([7,8], 1000, false);\r\n\r\n      if(!isLeaf(suc)){\r\n        console.log(\"ERROR\");\r\n        console.log(getChildren(suc));\r\n        const right = getChildren(suc)[1];\r\n        right.data('prev', suc.data('prev'));\r\n        this.addEdge(suc.data('prev'), right.id());\r\n      }\r\n      anc = suc.data('prev');\r\n      this.removeNode(suc);\r\n      this.pushStep();\r\n      this.balance(this.cy.getElementById(anc))\r\n    }\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n    });\r\n\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n}\r\n\r\nexport default AVLProcessor;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nimport AVLProcessor from '../Processing/avl-proccesing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ncytoscape.warnings(false);\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  treeRoot: string,\r\n  refresh?: boolean,\r\n}\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n  paused: boolean,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  root: string,\r\n  elements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n  }\r\n  paused: boolean,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n    paused: state.paused,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  undo:Array<stackState>=[];\r\n  redo:Array<stackState>=[];\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  AVLProcessor:any;\r\n  cy = cytoscape();\r\n\r\n  buffer:Array<exportStep> = [];\r\n  options: Array<{ name: string, run: () => void }>;\r\n\r\n  step = 0;\r\n  animationTimeout = 0;\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n    this.options = [\r\n      {\r\n        name: 'Insertar',\r\n        run: () => this.setState({showInsertModal: true}),\r\n      },\r\n      {\r\n        name: 'Eliminar',\r\n        run: () => this.setState({showRemoveModal: true}),\r\n      },\r\n      {\r\n        name: 'Buscar',\r\n        run: () => this.setState({showSearchModal: true}),\r\n      },\r\n      {\r\n        name: 'Limpiar canvas',\r\n        run: this.clearGraph,\r\n      },\r\n      {\r\n        name: 'Subir AVL',\r\n        run: () => this.setState({show: true}),\r\n      },\r\n      {\r\n        name: 'Descargar AVL',\r\n        run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n      }\r\n    ];\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.initialize({ root: '', elements: []});\r\n    this.AVLProcessor = new AVLProcessor(this.cy.width(), this.cy.height());\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n        gif: () => this._mediaRecorder.takeGif(this.cy),\r\n        undo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        options: this.options,\r\n        rewind: this.handleRewind,\r\n        forward: this.handleForward,\r\n        pause: this.handlePauseContinue,\r\n        repeat: this.handleRepeat,\r\n      }\r\n    })\r\n  }\r\n\r\n  initialize(state: stackState){\r\n    const {root, elements} = state;    \r\n\t\tlet edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements,\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tif(node.id().match('-popper')){\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n    });\r\n    this.treeRoot = root;\r\n\t\t//this.cy.on('resize', () => { this.layoutProcessing(); this.refreshLayout(false)});\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate: false});\r\n\t\tthis.layout.run();\r\n\r\n    this.refreshLayout();\r\n  }\r\n  \r\n  handleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.undo.pop();\r\n\t\tif(state !== undefined){\r\n      this.redo.push({ root: this.treeRoot, elements: currentElements});\r\n      this.treeRoot = state.root;\r\n      this.loadGraph(state.elements);\r\n      this.AVLProcessor.loadGraph(state.elements, state.root);\r\n    }\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.undo.push({ root: this.treeRoot, elements: currentElements});\r\n      this.treeRoot = state.root;\r\n      this.loadGraph(state.elements);\r\n      this.AVLProcessor.loadGraph(state.elements, state.root);\r\n    }\r\n\t}\r\n\r\n  loadGraph(elements: Array<Object>, keep=false) {\r\n    const nodes = this.cy.nodes();\r\n    const positions:{[id:string]:{x:number,y:number}} = {};\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n      if(keep) positions[node.id()] = JSON.parse(JSON.stringify(node.data('position')));\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(JSON.parse(JSON.stringify(elements[i])));\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n      const position = node.data('position');\r\n      if(keep && positions[node.id()]) node.position({x:positions[node.id()].x, y:positions[node.id()].y});\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n    this.refreshLayout();\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n          style: node.style(),\r\n          position: { x: node.position().x, y: node.position().y }\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n    console.log('pushed');\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push({root: this.treeRoot, elements: this.exportGraph()});\r\n  }\r\n  \r\n  handleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = Math.max(this.step-1, 0);\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n    this.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = Math.min(this.step+1, this.buffer.length-1);\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = 0;\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    clearTimeout(this.animationTimeout);\r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(prevProps:Props){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\r\n    if (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n                this.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n                this.treeRoot = this.buffer[this.buffer.length-1].treeRoot;\r\n                this.props.dispatch({ type: actions.ANIMATION_END });\r\n                console.log(getChildren(this.cy.getElementById(this.treeRoot)));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_PAUSE,\r\n        })\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n      const { elements, lines, duration, pseudo, treeRoot, refresh} = this.buffer[this.step++];\r\n      if(this.props.paused) return;\r\n      this.loadGraph(elements, refresh);\r\n      if(pseudo) this.props.dispatch({ type: actions.CHANGE_PSEUDO, payload: { pseudo}});\r\n      if (lines) this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines } });\r\n      if(treeRoot != null) this.treeRoot = treeRoot;\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration) / (this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n  }\r\n\r\n  insert(value=0){\r\n    const nodes = this.cy.nodes();\r\n    for(let i = 0; i < nodes.length; i++){\r\n      if(nodes[i].id().match('popper')) continue;\r\n      if(nodes[i].data('value') === value){\r\n        this.props.dispatch({\r\n          type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n        })\r\n        return;\r\n      }\r\n    }\r\n    this.pushState();\r\n    this.buffer = this.AVLProcessor.insert(value);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  search(value=0){\r\n    let {found, buffer} = this.AVLProcessor.search(value);\r\n    this.buffer = buffer;\r\n    console.log(buffer);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  remove(value=0){ \r\n    this.pushState();\r\n    this.buffer = this.AVLProcessor.remove(value);\r\n    console.log(this.buffer);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.layoutProcessing();\r\n      this.refreshLayout();\r\n      this.AVLProcessor.loadGraph(this.exportGraph(), \"0\");\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.pushState();\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","import actions from \"../../Actions/actions\";\r\n\r\n// Simple array used to create commands for Linked List Animation\r\n\r\nclass LinkedListSimulator {\r\n  _data = [];\r\n\r\n  constructor(data = [], type = 'none'){\r\n    this._data = [...data];\r\n    this.type = type;\r\n  }\r\n  length(){\r\n    return this._data.length;\r\n  }\r\n\r\n  push_back(element, slow){\r\n    const {id, value} = element;\r\n    let source = undefined;\r\n    const commands = [];\r\n    let lines;\r\n    if(this.length() === 0){\r\n      commands.push({lines: [2,3]});\r\n    }else{\r\n      if(this.type === actions.SELECT_QUEUE){\r\n        lines = [4, 5, 6];\r\n      }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n        lines = [4, 5, 6, 7];\r\n      }\r\n    }\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines: [6, 7]},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    if(this.length()){\r\n      source = this._data[this.length()-1].id;\r\n    }\r\n\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [8];\r\n    commands.push({\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_back',\r\n        data: {\r\n          id, value, source,\r\n        }\r\n      }],\r\n      lines,\r\n    });\r\n    console.log(commands);\r\n    return commands;\r\n  }\r\n\r\n  pop_back(slow){\r\n    if(this.length() === 0) return [];\r\n    const commands = [];\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        let lines;\r\n        if(this.length() === 1) lines = [2, 3, 4, 5];\r\n        else lines = [7, 8, 9];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    const {id} = this._data[this.length()-1];\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST && this.length() > 1) lines = [10, 11];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], \r\n        style: [{'background-color': 'black', 'color':'white'}], \r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6,7];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_back',\r\n          data: { id, value: this.length()-1},\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    return commands;\r\n  }\r\n\r\n  push_front(element){\r\n    const {id, value} = element;\r\n    let target = undefined;\r\n    if(this.length()) target = this._data[0].id;\r\n    let lines;\r\n    if(this.length() === 0){\r\n      lines = [2,3];\r\n    }else{\r\n      if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [4,5,6];\r\n      else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST) lines = [4,5,6,7];\r\n      else if(this.type === actions.SELECT_STACK) lines = [4,5,6];\r\n    }\r\n    const commands = [{\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_front',\r\n        data: {\r\n          id, value, target,\r\n        }\r\n      }],\r\n      lines,\r\n    }]\r\n    return commands;\r\n  }\r\n\r\n  pop_front(){\r\n    if(this.length() === 0) return [{eles: [], style: []}];\r\n    const {id} = this._data[0];\r\n    let lines;\r\n    const commands = [];\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST || this.type === actions.SELECT_STACK) lines = [2,3,4];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6, 7];\r\n    }else{\r\n      if(this.length() === 1) lines = [3,4];\r\n      else lines = [5,6];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_front',\r\n          data: { id },\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    //this._data.shift();\r\n    return commands;\r\n  }\r\n\r\n  search(value){\r\n    const n = this.length();\r\n    const commands = [];\r\n    for(let i = 0; i < n; i++){\r\n      //Animations steps here\r\n      const id = this._data[i].id;\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{ 'background-color': 'black', 'color': 'white'}],\r\n      });\r\n\r\n      if(this._data[i].value === value){\r\n        commands.push({\r\n          eles: [id],\r\n          style: [{'background-color': 'lightgreen', 'color': 'black'}],\r\n        })\r\n        return true;\r\n      }\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{'background-color': 'white', 'color': 'black'}],\r\n        duration: 10,\r\n      })\r\n    }\r\n    return commands;\r\n  }\r\n\r\n  insert_before(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(nodeId === id) break;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            lines: [7, 8],\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      \r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let prev = '', next = nodeId;\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [2, 3, 4];\r\n      else lines = [9, 10];\r\n    }else{\r\n      if(pos === 0) lines = [5, 6];\r\n      else lines = [7, 8];\r\n    }\r\n    if(pos - 1 >= 0){\r\n      prev = this._data[pos-1].id;\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next}\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : undefined),\r\n        duration: 500,\r\n      });\r\n    }\r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node_before',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n  insert_after(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 500,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n\r\n    const pos = i;\r\n    let prev = nodeId, next = '';\r\n    if(pos + 1 < this.length()) next = this._data[pos+1].id;\r\n    if(pos + 1 < this.length()){\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next},\r\n            duration: 500,\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : [2, 3]),\r\n      });\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      lines = (pos === this.length() - 1 ? [5, 6] : [7, 8]);\r\n    }else lines = [4];\r\n    \r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n  delete_position(nodeId, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        let lines;\r\n        if(nodeId === id && i === 0) lines = [1, 2];\r\n        else lines = [6, 7, 8];\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 1000,\r\n            lines,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let source, target;\r\n    if(pos > 0 && pos + 1 < this.length()){\r\n      source = this._data[pos-1].id;\r\n      target = this._data[pos+1].id;\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [3];\r\n      else lines = [9, 10];\r\n    }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      let caseLines;\r\n      if(this.length() === 1) caseLines = [2, 3];\r\n      else if(pos === 0) caseLines = [4, 5];\r\n      else if(pos === this.length() - 1) caseLines = [6, 7];\r\n      else caseLines = [8, 9];\r\n      commands.push({\r\n        eles: [nodeId], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: caseLines,\r\n      });\r\n\r\n      lines = [10];\r\n    }\r\n\r\n    commands.push({\r\n      inst: [{\r\n        name: 'remove',\r\n        data: {id: nodeId, value: pos, source, target}\r\n      }],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default LinkedListSimulator;","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  list?: Array<Object>,\r\n}\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\nclass ListProcessor{\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  list = new LinkedListSimulator();\r\n  buffer:Array<exportStep> = [];\r\n  doublyLinked:boolean;\r\n  constructor(vw: number, vh: number, doubly:boolean, type: string){\r\n    this.vh = vh; this.vw = vw; \r\n    this.doublyLinked = doubly;\r\n    this.list = new LinkedListSimulator([], type);\r\n  }\r\n\r\n  loadGraph(elements:Array<Object>, list:Array<Object>){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n    this.list._data = [...list];\r\n  }\r\n  \r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          position: node.data('position'),\r\n          style: node.data('style'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: prev,\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n\r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.vw/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      const node = this.cy.getElementById(id);\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', {x: prevPosition.x, y: prevPosition.y});\r\n      node.data('position', { x: mid - (n-1)*(35) + 70*i, y: this.vh/4 });\r\n    }\r\n  }\r\n\r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y,\r\n        }\r\n      },\r\n    });\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushStep(lines: Array<number> = [], duration: number = 0){\r\n    this.buffer.push({\r\n      elements: this.exportGraph(),\r\n      lines,\r\n      duration,\r\n      list: this.list._data,\r\n    });\r\n  }\r\n  processCommands(commands: Array<AnimationStep>){\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n    });\r\n    this.buffer = [];\r\n    let lastLines:Array<number> = [];\r\n    let lastDuration = 0;\r\n    this.pushStep([], 0);\r\n    console.log(commands);\r\n    for(let pos = 0; pos < commands.length; pos++){\r\n      let { eles, style, duration, inst, lines} = commands[pos];\r\n      if(duration == null) duration = 1000;\r\n      if(lines == null) lines = lastLines;\r\n      this.layoutProcessing();\r\n      this.pushStep(lastLines, lastDuration);\r\n      lastLines = lines;\r\n      lastDuration = duration;\r\n\r\n      if (eles) {\r\n        eles.forEach((ele, index) => {\r\n          if(style) this.cy.getElementById(ele).data('style', style[index]);\r\n        });\r\n      }\r\n      \r\n      if(inst){\r\n        inst.forEach(ele => {\r\n          if(ele.data == null) return;\r\n          const {id, value, source, target} = ele.data;\r\n\r\n          if(ele.name === 'remove'){\r\n            if(id !== undefined) this.removeNode(id);\r\n            if(source != null && target != null) this.addEdge(source, target);\r\n            if(value !== undefined) this.list._data.splice(value, 1);\r\n          }else if(ele.name === 'add'){\r\n            if(id !== undefined && value !== undefined){\r\n              this.addNode(id, value);\r\n              this.list._data.push({id, value});\r\n              if(source !== undefined) this.addEdge(source, id);\r\n              if(target !== undefined) this.addEdge(id, target);\r\n            }\r\n          }else if(ele.name === 'push_back'){\r\n            if(id != null && value != null){\r\n              const n = this.list.length();\r\n              this.addNode(id, value, {x: this.vw/2 + n*35, y: this.vh/4 - 70});\r\n              this.list._data.push({id, value});\r\n              if(source != null) this.addEdge(source, id);\r\n            }\r\n          }else if(ele.name === 'push_front'){\r\n            if(id != null && value != null){\r\n              this.addNode(id, value, {x: this.vw/2 - this.list.length()*35, y: this.vh/4 - 70});\r\n              this.list._data.unshift({id, value});\r\n              if(target != null) this.addEdge(id, target);\r\n            }\r\n          }else if(ele.name === 'pop_front'){\r\n            if(id != null){\r\n              this.removeNode(id);\r\n              this.list._data.shift();\r\n            }\r\n          }else if(ele.name === 'pop_back'){\r\n            if(id != null){\r\n              this.removeNode(id);\r\n              this.list._data.pop();\r\n            }\r\n          }else if(ele.name === 'add_node_before'){\r\n            let {id, value, pos} = ele.data;\r\n            if(id != null && value != null && pos != null){\r\n              const x = this.vw/2 - (this.list.length()-1)*(35) + 70*pos;\r\n              this.addNode(id, value, {x, y: this.vh/4 - 70});\r\n              if(pos === 0) this.list._data.unshift({id, value});\r\n              else{\r\n\r\n                let rest = this.list._data.splice(pos);\r\n                this.list._data.push({id, value});\r\n                this.list._data = this.list._data.concat(...rest);\r\n              }\r\n            }\r\n          }else if(ele.name === 'add_node'){\r\n            let {id, value, pos} = ele.data;\r\n            if(id != null && value != null && pos != null){\r\n              const x = this.vw/2 - (this.list.length()-1)*(35) + 70*pos;\r\n              this.addNode(id, value, {x, y: this.vh/4 - 70});\r\n              pos++;\r\n              if(pos === this.list.length()) this.list._data.push({id, value});\r\n              else{\r\n                let rest = this.list._data.splice(pos);\r\n                this.list._data.push({id, value});\r\n                this.list._data = this.list._data.concat(...rest);\r\n              }\r\n            }\r\n          }else if(ele.name === 'add_edge'){\r\n            let {source, target} = ele.data;\r\n            if(source && target){\r\n              console.log('ADD', source, target);\r\n              this.addEdge(source, target);\r\n            }\r\n          }else if(ele.name === 'remove_edge'){\r\n            let {source, target} = ele.data;\r\n            if(source && target){\r\n              this.removeEdge(source+'-'+target);\r\n              if(this.doublyLinked) this.removeEdge(target+'-'+source);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.layoutProcessing();\r\n    this.pushStep(lastLines, lastDuration);\r\n  }\r\n\r\n  pushFront(value: number = 0){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    const commands = this.list.push_front({id: id.toString(), value});\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    //console.log(this.buffer);\r\n    return this.buffer;\r\n  }\r\n\r\n\r\n  pushBack(value: number = 0, slow:boolean = false){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    const commands = this.list.push_back({id: id.toString(), value}, slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  popFront(){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.pop_front();\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.pop_back(slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false, nodeId: string){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let commands;\r\n    console.log(nodeId);\r\n    console.log(this.list._data);\r\n    if(where === 'before') commands = this.list.insert_before(nodeId, id.toString(), value, slow);\r\n    else commands = this.list.insert_after(nodeId, id.toString(), value, slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  remove(slow = false, nodeId: string){\r\n\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.delete_position(nodeId, slow);  \r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n}\r\n\r\nexport default ListProcessor;","import React from 'react';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nimport ListProcessor from '../Processing/list-processing';\r\nimport actions from '../Actions/actions';\r\nimport { AnimationStep, CytoscapeElement, CytoEvent } from '../Types/types';\r\nimport InputModal from './InputModal';\r\n\r\nconst cytoscape = require('cytoscape');\r\nconst Styles = require('../Styles/Styles');\r\nconst { connect } = require('react-redux');\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n}\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n\r\n  action: string,\r\n  type: string,\r\n\talgorithm: string,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n  options: Array<{name: string, run: () => void}>,\r\n\tloadingGraph: Boolean,\r\n  data: string,\r\n  \r\n  pseudoset: pseudoSet,\r\n  paused: boolean,\r\n}\r\n\r\ntype State = {\r\n  showPushFrontModal: boolean,\r\n  showPushBackModal: boolean,\r\n  showPushAfterModal: boolean,\r\n  showPushBeforeModal: boolean,\r\n  showDeleteModal: boolean,\r\n}\r\ntype storeState = {\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: Object,\r\n  paused: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  list: Array<Object>,\r\n  elements: Array<Object>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n    paused: state.paused,\r\n  }\r\n}\r\nclass LinkedList extends React.Component<Props, State>{\r\n  _mediaRecorder = new MediaRecorder(this.props.dispatch);\r\n  _isMounted = false;\r\n\r\n  list = new LinkedListSimulator();\r\n  undo: Array<stackState> = [];\r\n  redo: Array<stackState> = [];\r\n\r\n  ListProcessor:any;\r\n  layout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n  };\r\n  \r\n  doublyLinked = false;\r\n\r\n  state = {\r\n    showDeleteModal: false,\r\n    showPushBeforeModal: false,\r\n    showPushBackModal: false,\r\n    showPushFrontModal: false,\r\n    showPushAfterModal: false,\r\n  }\r\n\r\n  cy = cytoscape();\r\n\r\n  nodeStyle = {...Styles.NODE, shape: 'square'};  \r\n  edgeStyle = {};\r\n  buffer:Array<exportStep> =[];\r\n  options:Array<{name: string, run: () => void}> = [];\r\n\r\n  step = 0;\r\n  animationTimeout = 0;\r\n  constructor(props:Props){\r\n    super(props);\r\n    if(this.props.type === actions.SELECT_SINGLE_LINKED_LIST || this.props.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      this.options = [\r\n        {\r\n          name: 'Insertar al frente',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Insertar al final',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Extraer frente',\r\n          run: () => this.popFront(),\r\n        },\r\n        {\r\n          name: 'Extraer final',\r\n          run: () => this.popBack(!this.doublyLinked),\r\n        },\r\n        {\r\n          name: 'Insertar antes de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushBeforeModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Insertar despues de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushAfterModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Eliminar nodo',\r\n          run: () => this.remove(!this.doublyLinked),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_STACK){\r\n      this.options = [\r\n        {\r\n          name: 'Apilar',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Desapilar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_QUEUE){\r\n      this.options = [\r\n        {\r\n          name: 'Encolar',\r\n          run: () =>\r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR}) \r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Desencolar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  initialize(state: stackState){\r\n\r\n    this.edgeStyle = {...Styles.EDGE, ...Styles.EDGE_DIRECTED};\r\n\r\n    if(this.doublyLinked) this.edgeStyle = {...this.edgeStyle, ...Styles.EDGE_DOUBLE}\r\n    const {list, elements} = state;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: this.edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n    });\r\n\r\n    this.list._data = list;\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.cy.on('resize', () => this.refreshLayout(false))\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.refreshLayout(false);\r\n  }  \r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\r\n    if (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n\t\t\t\t\t\t\t\tthis.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n\t\t\t\t\t\t\t\tthis.props.dispatch({ type: actions.ANIMATION_END })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.doublyLinked = this.props.type === actions.SELECT_DOUBLE_LINKED_LIST;\r\n\r\n    this.list.type = this.props.type;\r\n    this.initialize({list: [], elements: []});\r\n\r\n    this.ListProcessor = new ListProcessor(this.cy.width(), this.cy.height(), this.doublyLinked, this.props.type);\r\n\r\n    \r\n    this.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        rewind: this.handleRewind,\r\n        forward: this.handleForward,\r\n        repeat: this.handleRepeat,\r\n        pause: this.handlePauseContinue,\r\n        options: this.options,\r\n        type: this.props.type,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n  }\r\n  \r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.cy.width()/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      layoutOptions.positions[id] = {\r\n        x: mid - (n-1)*(35) + 70*i,\r\n        y: this.cy.height()/4,\r\n      }\r\n    }\r\n  }\r\n  refreshLayout(animate:boolean=true) {\r\n    this.layout.stop();\r\n    //this.layoutProcessing();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n  }\r\n  \r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      const prev = this.cy.getElementById(selection.id);\r\n      prev.style(this.nodeStyle);\r\n      if(selection.id === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    });\r\n\t}\r\n\r\n \t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n    let state = this.undo.pop();\r\n\r\n    if(state !== undefined){\r\n\t\t\tthis.redo.push({list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)), elements: currentElements});\r\n      this.loadGraph(state.elements);\r\n      this.ListProcessor.loadGraph(state.elements, state.list);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.undo.push({list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)), elements: currentElements});\r\n\t\t\tthis.loadGraph(state.elements);\r\n      this.ListProcessor.loadGraph(state.elements, state.list);\r\n\t\t}\r\n\t}\r\n\r\n  pushState(){\r\n    this.redo = [];\r\n    this.undo.push({\r\n      list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)),\r\n      elements: this.exportGraph(),\r\n    });\r\n  }\r\n  \r\n  handleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n  loadGraph(elements: Array<Object>, keep=false) {\r\n    const nodes = this.cy.nodes();\r\n    const positions:{[id:string]:{x:number,y:number}} = {};\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n      if(keep) positions[node.id()] = JSON.parse(JSON.stringify(node.data('position')));\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(JSON.parse(JSON.stringify(elements[i])));\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n      const position = node.data('position');\r\n      if(keep && positions[node.id()]) node.position({x:positions[node.id()].x, y:positions[node.id()].y});\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n    this.refreshLayout();\r\n\t}\r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          position: {\r\n            x: node.position().x,\r\n            y: node.position().y,\r\n          }\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n  \r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tif(!this._isMounted) return;\r\n\t\t\tif(this.step === this.buffer.length){\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_PAUSE,\r\n        });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t});\r\n\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n      const {elements, lines, duration} = this.buffer[this.step++];\r\n      if(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\t//this.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n  }\r\n  \r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    layoutOptions.positions[id] = position;\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushFront(value: number = 0){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n    this.buffer = this.ListProcessor.pushFront(value);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n\r\n  pushBack(value: number = 0, slow:boolean = false){\r\n\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n    this.buffer = this.ListProcessor.pushBack(value, slow);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  \r\n  popFront(){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n\r\n    if(this.ListProcessor.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_LINE,\r\n        payload: { lines: [1] }\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.buffer = this.ListProcessor.popFront();\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n\r\n    if(this.ListProcessor.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.buffer = this.ListProcessor.popBack(slow);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  remove(slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    \r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n    \r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    const nodeId = selection.id;\r\n\r\n    this.buffer = this.ListProcessor.remove(slow, nodeId);\r\n    new Promise((resolve, reject) => {\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_START,\r\n        });\r\n        resolve();\r\n      }).then(() => this.animation());\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n    const nodeId = selection.id;\r\n\r\n    this.buffer = this.ListProcessor.insert(value, where, slow, nodeId);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n  render(){\r\n    return(\r\n      <>\r\n        <InputModal \r\n          show={this.state.showPushFrontModal}\r\n          handleClose={() => this.setState({showPushFrontModal: false})}\r\n          callback={(v:number) => this.pushFront(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBackModal}\r\n          handleClose={() => this.setState({showPushBackModal: false})}\r\n          callback={(v:number) => this.pushBack(v, this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBeforeModal}\r\n          handleClose={() => this.setState({showPushBeforeModal: false})}\r\n          callback={(v:number) => this.insert(v, 'before', this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushAfterModal}\r\n          handleClose={() => this.setState({showPushAfterModal: false})}\r\n          callback={(v:number) => this.insert(v, 'after')}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LinkedList);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\nconst Styles = require('../Styles/Styles');\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {}, level = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tlevel[source] = 0;\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid: source,\r\n\t\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_TRAVERSE \r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tlevel[next.id()] = level[current.id()]+1;\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tid: next.id(),\r\n\t\t\t\t\t\t\t\t\t\tvalue: level[next.id()],\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const Styles = require('../Styles/Styles');\r\nconst dfs = (cy, source, depth, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\t\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_GRAY],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'update_level',\r\n\t\t\t\tdata: {id: source.id(), value: depth}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_TRAVERSE],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, depth+1, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_BLACK],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), 0, commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\nconst Styles = require('../Styles/Styles');\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let eq = (x, y) => {\r\n    return x.distance === y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp, eq);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_RED],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_TRAVERSE],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [Styles.NODE_GRAY],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_VISITED],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_BLACK],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          Styles.NODE_RED,\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [Styles.EDGE_MST],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_TRAVERSE],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [Styles.NODE_GRAY],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let nextStyle;\r\n      if(part_of_tree[edge.id()]) nextStyle=Styles.EDGE_MST;\r\n      else nextStyle=Styles.EDGE_NO_MST;\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [nextStyle],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [Styles.EDGE_TRAVERSE],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            Styles.EDGE_MST,\r\n            Styles.NODE_RED,\r\n            Styles.NODE_RED,\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_NO_MST],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","const singlyLinkedList = [\r\n  { text: 'ListaEnlazada{', ind: 0},\r\n  { text: 'Nodo* inicio', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n\r\nconst doublyLinkedList = [\r\n  { text: 'ListaDoblementeEnlazada{', ind: 0},\r\n  { text: 'Nodo *primero, *ultimo', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *ant, *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n]\r\n\r\nconst queue = [\r\n  { text: 'Cola{', ind: 0},\r\n  { text: 'Nodo *frente, *final', ind: 1},\r\n  { text: 'Encolar(Entero v)', ind: 1},\r\n  { text: 'Desencolar()', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst queuePush = [\r\n  { text: 'Encolar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si frente==NULL:', ind: 1},\r\n  { text: 'frente=final=aux', ind : 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'final->sig=aux', ind: 2},\r\n  { text: 'final=aux', ind: 2},\r\n];\r\n\r\nconst queuePop = [\r\n  { text: 'Desencolar():', ind: 0},\r\n  { text: 'Si frente==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux = frente->sig'},\r\n  { text: 'Si frente==NULL: ', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'frente=frente->sig', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst stack = [\r\n  { text: 'Pila{', ind: 0},\r\n  { text: 'Nodo *tope', ind: 1},\r\n  { text: 'Apilar(Entero v)', ind: 1},\r\n  { text: 'Desapilar(Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst stackPush = [\r\n  { text: 'Apilar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si tope==NULL:', ind : 1},\r\n  { text: 'tope=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'aux->sig=tope', ind: 2},\r\n  { text: 'tope=aux', ind: 2},\r\n];\r\n\r\nconst stackPop = [\r\n  { text: 'Desapilar():', ind: 0},\r\n  { text: 'Si tope==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux=tope', ind: 1},\r\n  { text: 'tope=tope->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n]\r\nconst singlyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=inicio', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst doublyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si primero == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=primero', ind: 1},\r\n  { text: 'primero=primero->sig', ind: 1},\r\n  { text: 'Si primero==NULL:', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'primero->ant=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'Si inicio->sig == NULL:', ind: 1},\r\n  { text: 'Nodo* aux = inicio', ind: 2},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 2},\r\n  { text: 'nodo *actual = inicio, *anterior', ind: 1},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 1},\r\n  { text: 'anterior=actual', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 2},\r\n  { text: 'anterior->sig=NULL', ind: 1},\r\n  { text: 'retornar actual', ind: 1}\r\n];\r\n\r\nconst doublyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=ultimo', ind: 1},\r\n  { text: 'ultimo=ultimo->ant', ind: 1},\r\n  { text: 'Si ultimo==NULL:', ind: 1},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=inicio', ind: 2},\r\n  { text: 'inicio=p', ind: 2},\r\n];\r\n\r\nconst doublyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=primero', ind: 2},\r\n  { text: 'primero->ant=p', ind: 2},\r\n  { text: 'primero=p', ind: 2},\r\n];\r\n\r\nconst singlyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'nodo *actual = inicio', ind: 2},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=p', ind: 2},\r\n  { text: 'p->ant=ultimo', ind: 2},\r\n  { text: 'ultimo=p', ind: 2},\r\n];\r\n\r\nconst singlyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Si inicio==p:', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'Nodo *actual=incio, *anterior=NULL', ind: 2},\r\n  { text: 'Mientras actual != p:', ind: 2},\r\n  { text: 'anterior=actual', ind: 3},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'anterior->sig=p->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n];\r\n\r\nconst doublyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Nodo *ant=p->ant, *sig=p->sig', ind: 1},\r\n  { text: 'Caso 1: ant==NULL y sig==NULL:', ind: 1},\r\n  { text: 'primero=ultimo=NULL', ind: 2},\r\n  { text: 'Caso 2: ant==NULL y sig!=NULL', ind: 1},\r\n  { text: 'primero=sig', ind: 2},\r\n  { text: 'Caso 3: ant!=NULL y sig==NULL:', ind: 1},\r\n  { text: 'ultimo=ant', ind: 2},\r\n  { text: 'Caso 4: ant!=NULL y sig!=NULL', ind : 1},\r\n  { text: 'ant->sig=sig, sig->ant=ant', ind: 2},\r\n  { text: 'borrar p', ind: 1},\r\n];\r\n\r\nconst singlyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==p', ind: 1},\r\n  { text: 'aux->sig=inicio', ind: 2},\r\n  { text: 'inicio=aux', ind: 2},\r\n  { text: 'sino:', ind: 1},\r\n  { text: 'Nodo *actual=inicio', ind: 2},\r\n  { text: 'Mientras actual->sig != p:', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=aux', ind: 2},\r\n  { text: 'aux->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *ant = p->ant', ind: 1},\r\n  { text: 'aux->sig=p, aux->ant=ant', ind: 1},\r\n  { text: 'p->ant=aux', ind: 1},\r\n  { text: 'Si ant == NULL:', ind: 1},\r\n  { text: 'primero=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ant->sig=aux', ind: 2},\r\n];\r\n\r\nconst singlyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *s = p->sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'aux->sig=s', ind: 1},\r\n];\r\n\r\nconst doublyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *sig = p->sig', ind: 1},\r\n  { text: 'aux->ant=p, aux->sig=sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'Si sig == NULL:', ind: 1},\r\n  { text: 'ultimo=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'sig->ant=aux', ind: 2},\r\n];\r\n\r\n\r\nconst singlySet = {\r\n  main: singlyLinkedList,\r\n  pushFront: singlyPushFront,\r\n  pushBack: singlyPushBack,\r\n  popFront: singlyPopFront,\r\n  popBack: singlyPopBack,\r\n  insertBefore: singlyInsertBefore,\r\n  insertAfter: singlyInsertAfter,\r\n  remove: singlyRemove,\r\n}\r\n\r\nconst doublySet = {\r\n  main: doublyLinkedList,\r\n  pushFront: doublyPushFront,\r\n  pushBack: doublyPushBack,\r\n  popFront: doublyPopFront,\r\n  popBack: doublyPopBack,\r\n  insertBefore: doublyInsertBefore,\r\n  insertAfter: doublyInsertAfter,\r\n  remove: doublyRemove,\r\n}\r\n\r\nconst queueSet = {\r\n  main: queue,\r\n  pushFront: [],\r\n  pushBack: queuePush,\r\n  popFront: queuePop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nconst stackSet = {\r\n  main: stack,\r\n  pushFront: stackPush,\r\n  pushBack: [],\r\n  popFront: stackPop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nexport default {\r\n  singlySet, doublySet, queueSet, stackSet,\r\n};","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport pseudocodes from './resources/pseudocodes/list';\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  },\r\n  SingleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_SINGLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.singlySet,\r\n  },\r\n  DoubleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_DOUBLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.doublySet,\r\n  },\r\n  Stack: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_STACK,\r\n    pseudoset: pseudocodes.stackSet,\r\n  },\r\n  Queue: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_QUEUE,\r\n    pseudoset: pseudocodes.queueSet,\r\n  },\r\n\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un arreglo de enteros</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Debe estar representado por maximo 16 numeros separados por coma</p>\r\n          <p>Cada numero debe estar entre -999 y 999</p>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            size={60}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport processCommands from '../Processing/graph-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tundo:Array<stackState> =[];\r\n\tredo:Array<stackState> =[];\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tbuffer:Array<{elements:Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n\t\tclearTimeout(this.animationTimeout);\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tinitialize(elements: Array<Object>){\r\n    this.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tconsole.log('UNDO');\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\t\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t})\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BUBBLESORT_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n\trunButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: () => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = Bubblesort(this.state.values);\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);     \r\n\t\t\tresolve();\r\n    }).then(()=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed);\r\n    })\r\n\t}\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nconst exportGraph = (cy: any) => {\r\n  const elements:Array<Object> = [];\r\n  cy.nodes().forEach((node:CytoscapeElement) => {\r\n    let prev = node.data('prevPosition');\r\n    if(!prev) prev = node.data('position');\r\n    elements.push({\r\n      group: 'nodes',\r\n      data: {\r\n        id: node.id(),\r\n        value: node.data('value'),\r\n        style: node.data('style'),\r\n        position: node.data('position'),\r\n      },\r\n      position: prev,\r\n    })\r\n    node.data('prevPosition', node.data('position'));\r\n  });\r\n  cy.edges().forEach((edge:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'edges',\r\n      data: {\r\n        id: edge.id(),\r\n        source: edge.source().id(), target: edge.target().id(),\r\n        weight: edge.data('weight'),\r\n        style: edge.data('style'),\r\n        /*\r\n        style: {\r\n          lineColor: edge.style('line-color'),\r\n          targetArrowShape: edge.style('target-arrow-shape'),\r\n          targetArrowColor: edge.style('target-arrow-color'),\r\n          lineStyle: edge.style('line-style'),\r\n        }\r\n        */\r\n      }\r\n    })\r\n  });\r\n  console.log(JSON.parse(JSON.stringify(elements)));\r\n  return JSON.parse(JSON.stringify(elements));\r\n}\r\n\r\n\r\nconst addShadow = (cy: any, id: string, position: {x: number, y: number}) => {\r\n  console.log('adding shadow');\r\n  cy.add({\r\n    group: 'nodes',\r\n    data: { \r\n      id,\r\n      style: {\r\n        zIndex: 1\r\n      },\r\n      position: {x: position.x, y: position.y}\r\n    },\r\n    position: {x: position.x, y: position.y}\r\n  });\r\n  console.log('shadow added', cy.nodes());\r\n}\r\n\r\nconst processCommands = (elements: Array<Object>, commands:Array<AnimationStep>) => {\r\n  \r\n  const cy = cytoscape({\r\n    elements: JSON.parse(JSON.stringify(elements)),\r\n    headless: true,\r\n  });\r\n\r\n  const steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n\r\n  let lastLines:Array<number> = [];\r\n  let lastDuration = 0;\r\n  for(let pos = 0; pos < commands.length; pos++){\r\n    let {nodes, duration, lines, style, positions, shadows} = commands[pos];\r\n    if(duration == null) duration = 1000;\r\n    if(lines == null) lines = [];\r\n\r\n    steps.push({elements: exportGraph(cy), lines: lastLines, duration: lastDuration});\r\n    lastLines = lines;\r\n    lastDuration = duration;\r\n    if(nodes){\r\n      nodes.forEach((node, index) => {\r\n        let ele = cy.getElementById(node.id);\r\n        ele.data('prevPosition', ele.data('position'));\r\n        let prevStyle = ele.data('style');\r\n        if(style) ele.data('style', {...prevStyle, ...style[index]});\r\n        if(positions){\r\n          ele.data('position', positions[index]);\r\n        }\r\n      })\r\n    }\r\n    if(shadows){\r\n      //console.log(shadows);\r\n      shadows.forEach(shadow => {\r\n        if(shadow.value === '+') addShadow(cy, shadow.id, shadow.position);\r\n        else cy.remove('node[id=\"'+shadow.id+'\"]');\r\n      });\r\n    }\r\n  }\r\n  steps.push({elements: exportGraph(cy), lines: lastLines, duration: 0});\r\n  return steps;\r\n}\r\n\r\nexport default processCommands;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport processCommands from '../Processing/mergesort-processing';\r\nimport { node } from 'prop-types';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\nclass MergeSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [4, 8, 12, 16, 10, 4, 45, 17],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\r\n\tbuffer:Array<{elements:Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\r\n\tundo:Array<stackState> = [];\r\n\tredo:Array<stackState> = [];\r\n\r\n\tstep = 0;\r\n\tanimationTimeout = 0;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t}\r\n    })\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n  }\r\n\t\r\n\tinitialize(elements: Array<Object>){\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: JSON.parse(JSON.stringify(elements)),\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tlayoutOptions.positions = {};\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t\t//this.refreshLayout();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\t\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t\tconst position = node.data('position');\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif(position != null){\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t\t\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tzIndex: node.style('z-index'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate: true});\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n\r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tconsole.log(this.props.paused);\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BUBBLESORT_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n\t\t}\r\n\t\tthis.refreshLayout();\r\n\r\n\t}\r\n\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n\trunButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: () => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);     \r\n\t\t\tresolve();\r\n    }).then(()=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed);\r\n    })\r\n\t}\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MergeSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1, 'z-index': 0});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3, 'z-index': 1});\r\n    }\r\n    commands.push(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray', 'z-index': 2}],\r\n      lines: [3],\r\n    });\r\n    commands.push({\r\n      lines: (value < values[mid] ? [6, 7] : (values[mid] < value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white', 'z-index': 1}],\r\n      duration: 10,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearchAlgo from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nimport processCommands from '../Processing/graph-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\nclass BinarySearch extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tundo:Array<stackState> = [];\r\n\tredo:Array<stackState> = [];\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tbuffer: Array<{elements: Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Buscar',\r\n\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n\t\tthis._isMounted = false;\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t})\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n\t\r\n\tanimation(found=false){\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: found ? actions.BINARY_SEARCH_FOUND_SUCCESS : actions.BINARY_SEARCH_NOT_FOUND_INFO,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BINARY_SEARCH_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\tinitialize(elements: Array<Object>){\r\n    this.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n\t}\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (found:boolean) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = BinarySearchAlgo(this.state.values, value);\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);\r\n\t\t\tconst found = this.cy.nodes('[value = '+value+']').length > 0;\r\n      resolve(found);\r\n    }).then((found:boolean)=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, found);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BinarySearch);","import React from 'react';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nimport actions from '../Actions/actions';\r\nimport { AnimationStep, CytoscapeElement, CytoEvent } from '../Types/types';\r\nimport InputModal from './InputModal';\r\n\r\nconst cytoscape = require('cytoscape');\r\nconst Styles = require('../Styles/Styles');\r\nconst { connect } = require('react-redux');\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n\r\n  action: string,\r\n  type: string,\r\n\talgorithm: string,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n  options: Array<{name: string, run: () => void}>,\r\n\tloadingGraph: Boolean,\r\n  data: string,\r\n  \r\n  pseudoset: pseudoSet,\r\n}\r\n\r\ntype State = {\r\n  showPushFrontModal: boolean,\r\n  showPushBackModal: boolean,\r\n  showPushAfterModal: boolean,\r\n  showPushBeforeModal: boolean,\r\n  showDeleteModal: boolean,\r\n}\r\ntype storeState = {\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: Object,\r\n}\r\n\r\ntype stackState = {\r\n  list: Array<Object>,\r\n  elements: Array<Object>,\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\nclass LinkedList extends React.Component<Props, State>{\r\n  _mediaRecorder = new MediaRecorder(this.props.dispatch);\r\n  _isMounted = false;\r\n\r\n  list = new LinkedListSimulator();\r\n  undo: Array<stackState> = [];\r\n  redo: Array<stackState> = [];\r\n\r\n  layout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n  };\r\n  \r\n  doublyLinked = false;\r\n\r\n  state = {\r\n    showDeleteModal: false,\r\n    showPushBeforeModal: false,\r\n    showPushBackModal: false,\r\n    showPushFrontModal: false,\r\n    showPushAfterModal: false,\r\n  }\r\n\r\n  cy = cytoscape();\r\n\r\n  nodeStyle = {...Styles.NODE, shape: 'square'};  \r\n  edgeStyle = {};\r\n  initialize(state: stackState){\r\n\r\n    this.edgeStyle = {...Styles.EDGE, ...Styles.EDGE_DIRECTED};\r\n\r\n    if(this.doublyLinked) this.edgeStyle = {...this.edgeStyle, ...Styles.EDGE_DOUBLE}\r\n    const {list, elements} = state;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: this.edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n    });\r\n\r\n    this.list._data = list;\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.cy.on('resize', () => this.refreshLayout(false))\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.refreshLayout(false);\r\n  }  \r\n\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.doublyLinked = this.props.type === actions.SELECT_DOUBLE_LINKED_LIST;\r\n\r\n    this.list.type = this.props.type;\r\n    this.initialize({list: [], elements: []});\r\n    let options:Array<{name: string, run: () => void}> = [];\r\n    if(this.props.type === actions.SELECT_SINGLE_LINKED_LIST || this.props.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      options = [\r\n        {\r\n          name: 'Insertar al frente',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Insertar al final',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Extraer frente',\r\n          run: () => this.popFront(),\r\n        },\r\n        {\r\n          name: 'Extraer final',\r\n          run: () => this.popBack(!this.doublyLinked),\r\n        },\r\n        {\r\n          name: 'Insertar antes de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushBeforeModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Insertar despues de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushAfterModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Eliminar nodo',\r\n          run: () => this.remove(!this.doublyLinked),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_STACK){\r\n      options = [\r\n        {\r\n          name: 'Apilar',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Desapilar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_QUEUE){\r\n      options = [\r\n        {\r\n          name: 'Encolar',\r\n          run: () =>\r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR}) \r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Desencolar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }\r\n    this.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n        options,\r\n        type: this.props.type,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n\r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.cy.width()/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      layoutOptions.positions[id] = {\r\n        x: mid - (n-1)*(35) + 70*i,\r\n        y: this.cy.height()/4,\r\n      }\r\n    }\r\n  }\r\n  refreshLayout(animate:boolean=true) {\r\n    this.layout.stop();\r\n    this.layoutProcessing();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n  }\r\n  \r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      const prev = this.cy.getElementById(selection.id);\r\n      prev.style(this.nodeStyle);\r\n      if(selection.id === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    });\r\n\t}\r\n\r\n \t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n    let state = this.undo.pop();\r\n\r\n    if(state !== undefined){\r\n\t\t\tthis.redo.push({list: [...this.list._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.undo.push({list: [...this.list._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n  pushState(){\r\n    this.redo = [];\r\n    this.undo.push({\r\n      list: [...this.list._data],\r\n      elements: this.exportGraph(),\r\n    });\r\n  }\r\n  \r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          position: {\r\n            x: node.position().x,\r\n            y: node.position().y,\r\n          }\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n          this.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n        }\r\n        \r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tinst.forEach(ele => {\r\n            if(ele.data == null) return;\r\n            const {id, value, source, target} = ele.data;\r\n\r\n\t\t\t\t\t\tif(ele.name === 'remove'){\r\n              if(id !== undefined) this.removeNode(id);\r\n              if(source != null && target != null) this.addEdge(source, target);\r\n              if(value !== undefined) this.list._data.splice(value, 1);\r\n\t\t\t\t\t\t}else if(ele.name === 'add'){\r\n              if(id !== undefined && value !== undefined){\r\n                this.addNode(id, value);\r\n                this.list._data.push({id, value});\r\n                if(source !== undefined) this.addEdge(source, id);\r\n                if(target !== undefined) this.addEdge(id, target);\r\n              }\r\n            }else if(ele.name === 'push_back'){\r\n              if(id != null && value != null){\r\n                const n = this.list.length();\r\n                this.addNode(id, value, {x: this.cy.width()/2 + n*35, y: this.cy.height()/4 - 70});\r\n                this.list._data.push({id, value});\r\n                if(source != null) this.addEdge(source, id);\r\n              }\r\n            }else if(ele.name === 'push_front'){\r\n              if(id != null && value != null){\r\n                this.addNode(id, value, {x: this.cy.width()/2 - this.list.length()*35, y: this.cy.height()/4 - 70});\r\n                this.list._data.unshift({id, value});\r\n                if(target != null) this.addEdge(id, target);\r\n              }\r\n            }else if(ele.name === 'pop_front'){\r\n              if(id != null){\r\n                this.removeNode(id);\r\n                this.list._data.shift();\r\n              }\r\n            }else if(ele.name === 'pop_back'){\r\n              if(id != null){\r\n                this.removeNode(id);\r\n                this.list._data.pop();\r\n              }\r\n            }else if(ele.name === 'add_node_before'){\r\n              let {id, value, pos} = ele.data;\r\n              if(id != null && value != null && pos != null){\r\n                const x = this.cy.width()/2 - (this.list.length()-1)*(35) + 70*pos;\r\n                this.addNode(id, value, {x, y: this.cy.height()/4 - 70});\r\n                if(pos === 0) this.list._data.unshift({id, value});\r\n                else{\r\n\r\n                  let rest = this.list._data.splice(pos);\r\n                  this.list._data.push({id, value});\r\n                  this.list._data = this.list._data.concat(...rest);\r\n                }\r\n              }\r\n            }else if(ele.name === 'add_node'){\r\n              let {id, value, pos} = ele.data;\r\n              if(id != null && value != null && pos != null){\r\n                const x = this.cy.width()/2 - (this.list.length()-1)*(35) + 70*pos;\r\n                this.addNode(id, value, {x, y: this.cy.height()/4 - 70});\r\n                pos++;\r\n                if(pos === this.list.length()) this.list._data.push({id, value});\r\n                else{\r\n                  let rest = this.list._data.splice(pos);\r\n                  this.list._data.push({id, value});\r\n                  this.list._data = this.list._data.concat(...rest);\r\n                }\r\n              }\r\n            }else if(ele.name === 'add_edge'){\r\n              let {source, target} = ele.data;\r\n              if(source && target){\r\n                console.log('ADD', source, target);\r\n                this.addEdge(source, target);\r\n              }\r\n            }else if(ele.name === 'remove_edge'){\r\n              let {source, target} = ele.data;\r\n              if(source && target){\r\n                this.removeEdge(source+'-'+target);\r\n                if(this.doublyLinked) this.removeEdge(target+'-'+source);\r\n              }\r\n            }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n        this.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 500 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n    }\r\n\t\tanimation();\r\n  }\r\n  \r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    layoutOptions.positions[id] = position;\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushBack(value: number = 0, slow:boolean = false){\r\n\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    \r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.push_back({id: id.toString(), value}, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  pushFront(value: number = 0){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.pushState();\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    \r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.push_front({id: id.toString(), value});\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  popFront(){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.pop_front();\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.pop_back(slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  remove(slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.props.animation) return;\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    const nodeId = selection.id;\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.delete_position(nodeId, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n    const nodeId = selection.id;\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      let commands;\r\n      if(where === 'before') commands = this.list.insert_before(nodeId, id.toString(), value, slow);\r\n      else commands = this.list.insert_after(nodeId, id.toString(), value, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <>\r\n        <InputModal \r\n          show={this.state.showPushFrontModal}\r\n          handleClose={() => this.setState({showPushFrontModal: false})}\r\n          callback={(v:number) => this.pushFront(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBackModal}\r\n          handleClose={() => this.setState({showPushBackModal: false})}\r\n          callback={(v:number) => this.pushBack(v, this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBeforeModal}\r\n          handleClose={() => this.setState({showPushBeforeModal: false})}\r\n          callback={(v:number) => this.insert(v, 'before', this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushAfterModal}\r\n          handleClose={() => this.setState({showPushAfterModal: false})}\r\n          callback={(v:number) => this.insert(v, 'after')}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LinkedList);","const algorithmRoutes = {\r\n  BFS: '/bfs',\r\n  DFS: '/dfs',\r\n  Dijkstra: '/dijkstra',\r\n  Kruskal: '/kruskal',\r\n  Prim: '/prim',\r\n  BubbleSort: '/bubblesort',\r\n  MergeSort: '/mergesort',\r\n  BinarySearch: '/busqueda-binaria',\r\n  SingleLinkedList: '/lista-enlazada',\r\n  DoubleLinkedList: '/lista-doblemente-enlazada',\r\n  Queue: '/cola',\r\n  Stack: '/pila',\r\n  MinHeap: '/minheap',\r\n  AVL: '/avl',\r\n};\r\n\r\nexport default algorithmRoutes;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport AVL2 from './Components/AVL2'\r\nimport LinkedList2 from './Components/LinkedList2'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\nimport LinkedList from './Components/LinkedList';\r\n\r\nimport routes from './resources/names_and_routes/algorithm_routes';\r\nconst { HashRouter, Route, Switch} = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Route path={routes.BFS} render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.DFS} render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Dijkstra} render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Prim} render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Kruskal} render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.MinHeap} render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.AVL} render={() => <AVL2 {...properties.AVL} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.BubbleSort} render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.MergeSort} render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.BinarySearch} render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.SingleLinkedList} render={() => <LinkedList2 {...properties.SingleLinkedList}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.DoubleLinkedList} render={() => <LinkedList2 {...properties.DoubleLinkedList}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.Queue} render={() => <LinkedList2 {...properties.Queue}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.Stack} render={() => <LinkedList2 {...properties.Stack}/>}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</HashRouter>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <div className=\"slidecontainer\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0.25\"\r\n            max=\"5\"\r\n            value={props.speed}\r\n            id=\"myRange\"\r\n            step=\"0.05\"\r\n            onChange={handleChange}\r\n            className=\"slider\"\r\n          >\r\n          </input>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nimport actions from '../Actions/actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faUndo, faRedo, faBackward, faForward} from '@fortawesome/free-solid-svg-icons'\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n  'SingleLinkedList': 'Lista enlazada',\r\n  'DoubleLinkedList': 'Lista doble',\r\n  'Queue': 'Cola',\r\n  'Stack': 'Pila',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  animation: boolean,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>,\r\n  dispatch: (action: Object) => void,\r\n  undo: () => void,\r\n  redo: () => void,\r\n  rewind: () => void,\r\n  forward: () => void,\r\n  pause: () => void,\r\n  repeat: () => void,\r\n  paused: boolean,\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {...state}\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  render(){\r\n    console.log(this.props.algorithm);\r\n    const {animation, paused} = this.props;\r\n    let control;\r\n    if(!animation){ \r\n      control = \r\n        <>\r\n          <Col md={1}>\r\n            <button title=\"Deshacer\" className='dropdown-button' onClick={this.props.undo}>\r\n              <FontAwesomeIcon icon={faUndo} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={1}>\r\n            <button title=\"Rehacer\" className='dropdown-button' onClick={this.props.redo}>\r\n              <FontAwesomeIcon icon={faRedo} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={{span: 2, offset:4}}>\r\n            <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n          </Col>\r\n        </>\r\n    }else{\r\n      control = \r\n        <>\r\n          <Col md={1}>\r\n            <button title={paused ? 'Continuar' : 'Pausa'} className='dropdown-button' onClick={this.props.pause}>\r\n              <FontAwesomeIcon icon={paused ? faPlay : faPause} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={1} >\r\n            <button title='Repetir' className='dropdown-button'  onClick={this.props.repeat}>\r\n              <FontAwesomeIcon icon={faRedo} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={1}>\r\n            <button title=\"Retroceder\" className='dropdown-button'  onClick={this.props.rewind}>\r\n              <FontAwesomeIcon icon={faBackward} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={1}>\r\n            <button title=\"Avanzar\" className='dropdown-button'  onClick={this.props.forward}>\r\n              <FontAwesomeIcon icon={faForward} size = \"lg\"/>\r\n            </button>\r\n          </Col>\r\n          <Col md={{span: 2, offset:2}}>\r\n            <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n          </Col>\r\n        </>\r\n    }\r\n    \r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n           {control}\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport PhotoControl from './PhotoControl';\r\nimport GIFControl from './GIFControl';\r\n\r\nimport routes from '../resources/names_and_routes/algorithm_routes';\r\nconst {connect} = require('react-redux');\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\ntype Props = {\r\n  photo: () => void,\r\n  gif: () => void,\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return { ...state };\r\n}\r\n\r\nclass MenuBar extends React.Component<Props>{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={routes.BFS}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={routes.DFS}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={routes.Dijkstra}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={routes.Kruskal}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={routes.Prim}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={routes.BubbleSort}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={routes.MergeSort}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={routes.BinarySearch}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={routes.SingleLinkedList}><button className='dropdown-button'>Lista enlazada</button></NavLink>,\r\n      <NavLink to={routes.Queue}><button className='dropdown-button'>Cola</button></NavLink>,\r\n      <NavLink to={routes.Stack}><button className='dropdown-button'>Pila</button></NavLink>,\r\n      <NavLink to={routes.DoubleLinkedList}><button className='dropdown-button'>Lista doble</button></NavLink>,\r\n      <NavLink to={routes.MinHeap}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={routes.AVL}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n          <Col md={1}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n          </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(MenuBar);","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport './views/css/slider.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\n\r\nclass App extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arreglo A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport listPseudo from '../resources/pseudocodes/list';\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  const control = (action.payload ? \r\n    {\r\n      options: action.payload.options,\r\n      photo: action.payload.photo,\r\n      gif: action.payload.gif,\r\n      undo: action.payload.undo,\r\n      redo: action.payload.redo,\r\n      rewind: action.payload.rewind,\r\n      forward: action.payload.forward,\r\n      pause: action.payload.pause,\r\n      repeat: action.payload.repeat,\r\n      selection: null,\r\n    } : {});\r\n\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'DFS',\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Dijkstra',\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Kruskal',\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Prim',\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Heap',\r\n        pseudo: heap,\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'AVL',\r\n        pseudo: avl,\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BubbleSort',\r\n        pseudo: bubblesort,\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'MergeSort',\r\n        pseudo: mergesort,\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BinarySearch',\r\n        pseudo: binarySearch,\r\n      }\r\n\r\n    case actions.SELECT_LINKED_LIST:\r\n      const nextState = {\r\n        ...state,\r\n        ...control,\r\n      }\r\n      switch(action.payload.type){\r\n        case actions.SELECT_SINGLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'SingleLinkedList',\r\n            pseudo: listPseudo.singlySet.main,\r\n          }\r\n        case actions.SELECT_DOUBLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'DoubleLinkedList',\r\n            pseudo: listPseudo.doublySet.main,\r\n          }\r\n        case actions.SELECT_QUEUE:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Queue',\r\n            pseudo: listPseudo.queueSet.main,\r\n          }\r\n        case actions.SELECT_STACK:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Stack',\r\n            pseudo: listPseudo.stackSet.main,\r\n          }\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_PAUSE:\r\n      return {\r\n        ...state,\r\n        paused: true,\r\n      }\r\n\r\n    case actions.ANIMATION_CONTINUE:\r\n      return {\r\n        ...state,\r\n        paused: false,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        paused: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.TOGGLE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: !state.showPseudo,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n\r\n    case actions.CHANGE_OPTIONS:\r\n      return {\r\n        ...state,\r\n        options: action.payload.options,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        animation: false,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero entre -999 y 999',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Arreglo invalido',\r\n      'Verifique que el arreglo cumpla con los requerimientos',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.INVALID_HEAP_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un Heap valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_AVL_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un AVL valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.EMPTY_LIST_WARNING:\r\n      createNotification('La lista se encuentra vacia',\r\n      'No se pudo realizar la accion',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('El elemento no fue encontrado en el arbol AVL',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BFS_INFO:\r\n      createNotification('',\r\n      'Realizando BFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_DFS_INFO:\r\n      createNotification('',\r\n      'Realizando DFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_DIJKSTRA_INFO:\r\n      createNotification('',\r\n      'Calculando caminos de peso minimo desde el nodo seleccionado mediante Dijkstra',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_KRUSKAL_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Kruskal',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_PRIM_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Prim',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_BUBBLESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento burbuja',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_MERGESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento por mezcla',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BINARYSEARCH_INFO:\r\n      createNotification('',\r\n      'Realizando busqueda binaria sobre el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('El elemento no se encuentra en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',\r\n      'Debe volver a la edicion para modificar el grafo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.ARRAY_SORTED_SUCCESS:\r\n      createNotification('El arreglo fue ordenado exitosamente',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('El elemento fue encontrado en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n  showPseudo: true,\r\n  paused: false,\r\n\r\n  undo: () => {},\r\n  redo: () => {},\r\n  rewind: () => {},\r\n  forward: () => {},\r\n  repeat: () => {},\r\n  pause: () => {},\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  \r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 3,\r\n};\r\n\r\nexport const NODE_GRAY = {\r\n\t'background-color': 'gray',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_RED = {\r\n\t'background-color': 'red',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_BLACK = {\r\n\t'background-color': 'black',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const NODE_CORRECT = {\r\n\t'background-color': 'Chartreuse',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_WRONG = {\r\n\t'background-color': '#FF9494',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_SELECTED = {\r\n\t'background-color': '#2B3B6B',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_VISITED = {\r\n\t'line-color': '#2B3B6B',\r\n\t'target-arrow-color': '#2B3B6B',\r\n}\r\n\r\nexport const EDGE_TRAVERSE = {\r\n\t'line-color': 'green',\r\n\t'target-arrow-color': 'green',\r\n}\r\n\r\nexport const EDGE_NO_MST = {\r\n\t'line-style': 'dashed', \r\n\t'line-color': '#eee'\r\n}\r\n\r\nexport const EDGE_MST = {\r\n\t'line-style': 'solid', \r\n\t'line-color': 'black'\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n\t'line-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_DOUBLE = {\r\n\t'source-arrow-color': '#ccc',\r\n\t'source-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const NODE_POPPER = {\r\n\t'z-index': 0,\r\n\t'border-width': 0,\r\n\t'font-size': 15,\r\n\t'width': 10,\r\n\t'height': 10,\r\n\t'visibility': 'visible',\r\n}"],"sourceRoot":""}