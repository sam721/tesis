{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Algorithms/DS/PriorityQueue.js","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/Footer.tsx","Components/PhotoControl.tsx","Components/GIFControl.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","Object","objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","show","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","TOGGLE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","elements","graph","JSON","stringify","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","data","readAsText","handleClose","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","min","max","ref","onChange","selection","weight","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","undo","redo","handleUndo","animation","currentElements","exportGraph","pop","initialize","handleRedo","clearGraph","pushState","nodes","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","visibility","name","shift","position","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","target","_event$position","x","y","createNode","weighted","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","group","source","_this3","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","Math","floor","random","_this5","Components_UploadGraphModal","Components_InputModal","w","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","layoutOptions","positions","padding","animate","animationDuration","Heap","class","showInsertModal","match","lastValue","addNode","autoungrabify","output","parseHeap","grabbable","pannable","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","src","clear","stateValues","_this6","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","AVL","treeRoot","showSearchModal","showRemoveModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","_this7","newNode","insertion","_getChildren19","_getChildren20","found","getNext","_this8","bsearch","_getChildren21","_getChildren22","_this9","mode","_this10","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","prevState","popper","Components_InputArrayModal","mergeSortAnimation","mid","mergeSort","h","toConsumableArray","nofocus","shadows","rshadows","cmd","p","slice","li","ri","zIndex","addShadow","shadow","Mergesort","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","center","fluid","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","algoDict","showActions","md","Components_OptionsMenu","Components_SpeedBar","span","offset","PhotoControl","handleClick","GIFControl","timeEllapsed","ss","ms","gifLength","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","Components_PhotoControl","Components_GIFControl","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","animationReducer","canvasReducer","selectionReducer","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.c0376745.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code && this.props.show){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    TOGGLE_PSEUDO: 'TOGGLE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 300, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(elements){\r\n   \r\n    const graph = JSON.stringify(elements); \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className='modal-header' closeButton>\r\n            <Modal.Title>Seleccione un archivo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>El archivo debe contener un grafo valido, previamente descargado </p>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Introduzca un numero entero</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El numero debe estar entre -999 y 999</p>\r\n          <input \r\n            id=\"IntInput\"\r\n            type=\"number\" \r\n            min={-999}\r\n            max={999}\r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\t\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\t\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tconsole.log(elements);\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet elements = this.undo.pop();\r\n\t\tconsole.log(elements);\r\n\t\tthis.redo.push(currentElements);\r\n\t\t\r\n\t\tif(elements !== undefined) this.initialize(elements);\r\n\t\t\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tconst elements = this.redo.pop();\r\n\t\tthis.undo.push(currentElements);\r\n\t\tif(elements !== undefined) this.initialize(elements);\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.exportGraph()),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data);\r\n\t\t\tif(elements){\r\n\t\t\t\tthis.pushState();\r\n\t\t\t\tthis.initialize(elements);\r\n\t\t\t}\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tthis.pushState();\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pushState();\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\t\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un Heap valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport {insert, remove} from '../resources/pseudocodes/heap';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreatePopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition: {x: position. x, y: position.y },\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\t\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\t\t\t\tnode.style({\r\n\t\t\t\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout(animate:boolean=true) {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tlayoutOptions.positions[node.id()+'-popper'] = { x: nx, y: ny+30}\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.heap.length() === 32) return;\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2],\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n\t\t\t\r\n\t\t\tthis.addNode(\"1\", val);\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val, src.position());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2, 3],\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (n === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.addNode((i).toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n  if(root.length === 0) return output;\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un arbol AVL valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('resize', () => this.refreshLayout(false));\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: () => this.setState({showRemoveModal: true}),\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = id + 1;\r\n    let newNode:CytoscapeElement;\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.addNode(id.toString(), value, 0, 0, prev.position());\r\n              newNode = this.cy.getElementById(id.toString());\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.addNode(id.toString(), value);\r\n        newNode = this.cy.getElementById(id.toString());\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload:{\r\n        pseudo: search,\r\n      }\r\n    })\r\n    let promise = new Promise((resolve: (node: CytoscapeElement) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [2]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [5,6]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [3,4]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          if(!found){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [1]},\r\n            });\r\n            setTimeout(reject, 1000/ this.props.speed);\r\n          }\r\n          setTimeout(resolve, 1000/this.props.speed, prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = (value: number) => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const searchPromise = this.search(value);\r\n    searchPromise.then((node?: CytoscapeElement) => {\r\n      if(node === undefined) return;\r\n      let anc = '';\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_PSEUDO,\r\n        payload: { pseudo: remove}\r\n      });\r\n      if(isLeaf(node)){\r\n        this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n        if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n        if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        else this.props.dispatch({type: actions.ANIMATION_END});\r\n      }else if(node.outgoers('node').length === 1){\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n        if(node.id() === this.treeRoot){\r\n          this.treeRoot = node.outgoers('node')[0].id();\r\n          anc = this.treeRoot;\r\n          this.removeNode(node);\r\n          this.refreshLayout();\r\n        }else{\r\n          let prev = '';\r\n          prev = node.data('prev');\r\n          const newChild = node.outgoers('node')[0];\r\n          newChild.data(prev);\r\n          this.removeNode(node);\r\n          this.addEdge(prev, newChild.id());\r\n          anc = newChild.id();\r\n          this.refreshLayout();\r\n        }\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n      }else{\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n        let promise = this.inorderSuccessor(node);\r\n        promise.then((suc: CytoscapeElement) => {\r\n          this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n          node.data('value', suc.data('value'));\r\n          suc.data('value', value);\r\n          setTimeout(\r\n            () => {\r\n                if(!isLeaf(suc)){\r\n                  const right = getChildren(suc)[1];\r\n                  right.data('prev', suc.data('prev'));\r\n                  this.addEdge(suc.data('prev'), right.id());\r\n                }\r\n                anc = suc.data('prev');\r\n                this.removeNode(suc);\r\n                this.refreshLayout();\r\n                setTimeout(() => \r\n                  this.balance(this.cy.getElementById(anc)).then(() => {\r\n                    this.props.dispatch({type: actions.ANIMATION_END});\r\n                  }),\r\n                  1000/this.props.speed\r\n                );\r\n                node.style(Styles.NODE);\r\n              },\r\n              1000/this.props.speed);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un arreglo de enteros</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Debe estar representado por numeros separados por coma</p>\r\n          <p>Cada numero debe estar entre -999 y 999</p>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions, shadows} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(shadows){\r\n\t\t\t\t\tshadows.forEach(shadow => {\r\n\t\t\t\t\t\tif(shadow.value === '+') this.addShadow(shadow.id, shadow.position);\r\n\t\t\t\t\t\telse this.cy.remove('node[id=\"'+shadow.id+'\"]');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: [], lines: [3]};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n      lines: (values[mid] < value ? [7, 8] : (values[mid] > value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      lines: [],\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.25\"\r\n          max=\"2\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.25\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nimport actions from '../Actions/actions';\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>,\r\n  dispatch: (action: Object) => void,\r\n  undo: () => void,\r\n  redo: () => void,\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    undo: state.undo,\r\n    redo: state.redo,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={1}>\r\n              <button className='dropdown-button' onClick={this.props.undo}>Deshacer</button>\r\n            </Col>\r\n            <Col md={1}>\r\n              <button className='dropdown-button' onClick={this.props.redo}>Rehacer</button>\r\n            </Col>\r\n            <Col md={{span: 2, offset:4}}>\r\n              <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport PhotoControl from './PhotoControl';\r\nimport GIFControl from './GIFControl';\r\nconst {connect} = require('react-redux');\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\ntype Props = {\r\n  photo: () => void,\r\n  gif: () => void,\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return { ...state };\r\n}\r\n\r\nclass MenuBar extends React.Component<Props>{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n          <Col md={1}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n          </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(MenuBar);","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\n\r\nclass App extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        pseudo: heap,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        pseudo: avl,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        pseudo: binarySearch,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.TOGGLE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: !state.showPseudo,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n  showPseudo: false,\r\n\r\n  undo: () => {},\r\n  redo: () => {},\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}"],"sourceRoot":""}