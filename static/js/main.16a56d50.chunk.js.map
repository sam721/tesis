{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Algorithms/DS/PriorityQueue.js","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","resources/pseudocodes/list.jsx","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Algorithms/DS/LinkedListSimulator.js","Components/LinkedList.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/Footer.tsx","Components/PhotoControl.tsx","Components/GIFControl.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","Object","objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","show","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECT_LINKED_LIST","SELECT_SINGLE_LINKED_LIST","SELECT_DOUBLE_LINKED_LIST","SELECT_QUEUE","SELECT_STACK","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","TOGGLE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_OPTIONS","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","INVALID_HEAP_ERROR","INVALID_AVL_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_LIST_WARNING","EMPTY_QUEUE_WARNING","EMPTY_STACK_WARNING","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_BFS_INFO","STARTING_DFS_INFO","STARTING_DIJKSTRA_INFO","STARTING_KRUSKAL_INFO","STARTING_PRIM_INFO","STARTING_BUBBLESORT_INFO","STARTING_MERGESORT_INFO","STARTING_BINARYSEARCH_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","STARTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","ARRAY_SORTED_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","elements","graph","JSON","stringify","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","data","readAsText","handleClose","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","min","max","ref","onChange","selection","weight","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","undo","redo","options","handleUndo","animation","currentElements","exportGraph","pop","initialize","handleRedo","clearGraph","pushState","nodes","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","notification","background-color","color","pos","step","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","visibility","name","shift","position","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","target","_event$position","x","y","createNode","weighted","EDGE_WEIGHTED","EDGE_DIRECTED","takeJson","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","group","source","_this3","action","photo","gif","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","Math","floor","random","_this5","Components_UploadGraphModal","Components_InputModal","w","PriorityQueue","_comp","_eq","_data","isEmpty","NODE_BLACK","classes","parent","NODE_CORRECT","NODE_WRONG","_ref","l","r","_ref2","_ref3","_ref4","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","toConsumableArray","match","addNode","autoungrabify","output","parseHeap","grabbable","pannable","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","src","_this6","clear","_this7","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","AVL","treeRoot","showSearchModal","showRemoveModal","root","anc","prev","newChild","inorderSuccessor","suc","catch","update","_getChildren","_getChildren2","slicedToArray","parseAVL","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","_this8","newNode","insertion","_getChildren19","_getChildren20","found","getNext","_this9","stopAnimation","bsearch","_getChildren21","_getChildren22","_this10","mode","_this11","Components_InputAVLModal","Queue","BFS","param","level","q","NODE_GRAY","_loop","front","next","EDGE_TRAVERSE","class","EDGE_VISITED","DFS","visited","Dijkstra","pq","dist","_pq$top","top","NODE_RED","nextId","prevDistance","Prim","part_of_tree","EDGE_NO_MST","EDGE_MST","connectedEdges","t","nextStyle","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","NODE_TRAVERSE","connected","join","pseudocodes_list","singlySet","main","pushFront","pushBack","popFront","popBack","insertBefore","insertAfter","doublySet","queueSet","stackSet","properties","BubbleSort","MergeSort","BinarySearch","SingleLinkedList","pseudoset","pseudocodes","DoubleLinkedList","Stack","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","prevState","popper","Components_InputArrayModal","mergeSortAnimation","mid","mergeSort","h","nofocus","shadows","rshadows","cmd","p","slice","li","ri","zIndex","addShadow","shadow","Mergesort","Sort","defaultStyle","lo","hi","showInputModal","BinarySearchAlgo","center","LinkedListSimulator","slow","newId","caseLines","LinkedList","list","doublyLinked","showDeleteModal","showPushBeforeModal","showPushBackModal","showPushFrontModal","showPushAfterModal","_ele$data","splice","unshift","_ele$data2","_this$list$_data","rest","concat","apply","_ele$data3","_this$list$_data2","_ele$data4","_ele$data5","EDGE_DOUBLE","push_back","push_front","pop_front","pop_back","delete_position","where","insert_before","insert_after","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","Components_LinkedList","NavLink","items","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","algoDict","showActions","md","Components_OptionsMenu","Components_SpeedBar","span","offset","PhotoControl","handleClick","GIFControl","timeEllapsed","ss","ms","gifLength","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","Components_PhotoControl","Components_GIFControl","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","nextState","listPseudo","animationReducer","canvasReducer","selectionReducer","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","SORTING_BINARY_SEARCH_INFO","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","line-color","curve-style","line-style","target-arrow-color","target-arrow-shape","source-arrow-color","source-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.16a56d50.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {(index<10?'\\u00A0': '')+index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code && this.props.show){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECT_LINKED_LIST: 'SELECT_LINKED_LIST',\r\n    SELECT_SINGLE_LINKED_LIST: 'SELECT_SINGLE_LINKED_LIST',\r\n    SELECT_DOUBLE_LINKED_LIST: 'SELECT_DOUBLE_LINKED_LIST',\r\n    SELECT_QUEUE: 'SELECT_QUEUE',\r\n    SELECT_STACK: 'SELECT_STACK',\r\n\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    TOGGLE_PSEUDO: 'TOGGLE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n    CHANGE_OPTIONS: 'CHANGE_OPTIONS',\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    INVALID_HEAP_ERROR: 'INVALID_HEAP_ERROR',\r\n    INVALID_AVL_ERROR: 'INVALID_AVL_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_LIST_WARNING: 'EMPTY_LIST_WARNING',\r\n    EMPTY_QUEUE_WARNING: 'EMPTY_QUEUE_WARNING',\r\n    EMPTY_STACK_WARNING: 'EMPTY_STACK_WARNING',\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_BFS_INFO: 'STARTING_BFS_INFO',\r\n    STARTING_DFS_INFO: 'STARTING_DFS_INFO',\r\n    STARTING_DIJKSTRA_INFO: 'STARTING_DIJKSTRA_INFO',\r\n    STARTING_KRUSKAL_INFO: 'STARTING_KRUSKAL_INFO',\r\n    STARTING_PRIM_INFO: 'STARTING_PRIM_INFO',\r\n    STARTING_BUBBLESORT_INFO: 'STARTING_BUBBLESORT_INFO',\r\n    STARTING_MERGESORT_INFO: 'STARTING_MERGESORT_INFO',\r\n    STARTING_BINARYSEARCH_INFO: 'STARTING_BINARYSEARCH_INFO',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    STARTING_BINARY_SEARCH_INFO: 'STARTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    ARRAY_SORTED_SUCCESS: 'ARRAY_SORTED_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 300, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(elements){\r\n   \r\n    const graph = JSON.stringify(elements); \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className='modal-header' closeButton>\r\n            <Modal.Title>Seleccione un archivo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>El archivo debe contener un grafo valido, previamente descargado </p>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if(this.props.currentValue) this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un numero entero</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El numero debe estar entre -999 y 999</p>\r\n          <input \r\n            id=\"IntInput\"\r\n            type=\"number\" \r\n            min={-999}\r\n            max={999}\r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\t\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\t\r\n\toptions: Array<{name: string, run: () => void}>;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Eliminar',\r\n\t\t\t\trun: this.removeButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\trun: this.weightButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\trun: this.clearGraph,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\trun: () => this._mediaRecorder.takeJson(this.exportGraph()),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tconsole.log(elements);\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet elements = this.undo.pop();\r\n\t\tconsole.log(elements);\r\n\t\tthis.redo.push(currentElements);\r\n\t\t\r\n\t\tif(elements !== undefined) this.initialize(elements);\r\n\t\t\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tconst elements = this.redo.pop();\r\n\t\tthis.undo.push(currentElements);\r\n\t\tif(elements !== undefined) this.initialize(elements);\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: this.options,\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data);\r\n\t\t\tif(elements){\r\n\t\t\t\tthis.pushState();\r\n\t\t\t\tthis.initialize(elements);\r\n\t\t\t}\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{ name: 'Regresar a edicion', run: this.runButton}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else if(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: this.options,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tthis.pushState();\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tlet notification;\r\n\t\tif(this.props.algorithm === 'BFS') notification = actions.STARTING_BFS_INFO;\r\n\t\telse if(this.props.algorithm === 'DFS') notification = actions.STARTING_DFS_INFO;\r\n\t\telse if(this.props.algorithm === 'Dijkstra') notification = actions.STARTING_DIJKSTRA_INFO;\r\n\t\telse if(this.props.algorithm === 'Kruskal') notification = actions.STARTING_KRUSKAL_INFO;\r\n\t\telse if(this.props.algorithm === 'Prim') notification = actions.STARTING_PRIM_INFO;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: notification,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}else if(ele.name === 'update_level'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tif(data){\r\n\t\t\t\t\t\t\t\tconst id = data.id, value = data.value;\r\n\t\t\t\t\t\t\t\tif(id != null && value != null){\r\n\t\t\t\t\t\t\t\t\tthis.cy.getElementById(id+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\t\t\tthis.cy.getElementById(id+'-popper').data('value', value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pushState();\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\t\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tif(this.cy.getElementById(id).data('weight') === weight) return;\r\n\t\t\tthis.pushState();\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","const Styles = require('../../Styles/Styles')\r\nclass PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos]) || this._eq(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_CORRECT],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ((this._comp(l, r) || this._eq(l, r)) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if ((this._comp(r, l) || this._eq(r, l)) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n  dispatch: (action:Object)=>void,\r\n\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }else{\r\n        this.props.dispatch({\r\n          type: actions.INVALID_HEAP_ERROR,\r\n        });\r\n      }\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_HEAP_ERROR,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un Heap valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputHeapModal);","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log('VALIDANDO', values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    console.log(values[i], left, right);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport {insert, remove} from '../resources/pseudocodes/heap';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n\theap: Array<number>,\r\n\telements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tundo: Array<stackState>=[];\r\n\tredo: Array<stackState>=[];\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x < y, (x, y) => x === y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tinitialize(state: stackState){\r\n\t\tconst {heap, elements} = state;\r\n\r\n\t\tthis.heap._data = [...heap];\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tif(node.id().match('-popper')){\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate: false});\r\n\t\tthis.layout.run();\r\n\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize({heap: [0], elements: []});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: () => this.heap.length() > 1 && this.changeArray([0]),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => {\r\n\t\t\t\t\t\t\tif(!this.props.animation) parseHeap(this.heap._data)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.undo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.redo.push({heap: [...this.heap._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.undo.push({heap: [...this.heap._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push({ heap: [...this.heap._data], elements: this.exportGraph()});\r\n\t}\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition: {x: position. x, y: position.y },\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\t\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\t\t\t\tnode.style({\r\n\t\t\t\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\t\tconsole.log(ele, data[index]);\r\n\t\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout(animate:boolean=true) {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tlayoutOptions.positions[node.id()+'-popper'] = { x: nx, y: ny+30}\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.heap.length() === 32) return;\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2],\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\t\tconsole.log(this.heap.length());\r\n\t\tif (this.heap.length()-1 === 0) {\r\n\t\t\t\r\n\t\t\tthis.addNode(\"1\", val);\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val, src.position());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2, 3],\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tcommands = this.heap.pop(true);\r\n\r\n\t\tif (n === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.addNode((i).toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n  if(root.length === 0) return output;\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un arbol AVL valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  root: string,\r\n  elements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  undo:Array<stackState>=[];\r\n  redo:Array<stackState>=[];\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.initialize({ root: '', elements: []});\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n        gif: () => this._mediaRecorder.takeGif(this.cy),\r\n        undo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: () => this.setState({showRemoveModal: true}),\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  initialize(state: stackState){\r\n    const {root, elements} = state;    \r\n\t\tlet edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements,\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tif(node.id().match('-popper')){\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n    });\r\n    this.treeRoot = root;\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate: false});\r\n\t\tthis.layout.run();\r\n\r\n\t\tthis.refreshLayout();\r\n  }\r\n  \r\n  handleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.undo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.redo.push({ root: this.treeRoot, elements: currentElements});\r\n\t\t  this.initialize(state);\r\n    }\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.undo.push({ root: this.treeRoot, elements: currentElements});\r\n\t\t  this.initialize(state);\r\n    }\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n    console.log('pushed');\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push({root: this.treeRoot, elements: this.exportGraph()});\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = this.cy.nodes().length/2 + 1;\r\n    let newNode:CytoscapeElement;\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.pushState();\r\n              this.addNode(id.toString(), value, 0, 0, prev.position());\r\n              newNode = this.cy.getElementById(id.toString());\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.pushState();\r\n        this.addNode(id.toString(), value);\r\n        newNode = this.cy.getElementById(id.toString());\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number, stopAnimation: boolean = true){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload:{\r\n        pseudo: search,\r\n      }\r\n    })\r\n    let promise = new Promise((resolve: (node: CytoscapeElement) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [2]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [5,6]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [3,4]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n\r\n          if(stopAnimation){\r\n            this.props.dispatch({\r\n              type: actions.ANIMATION_END,\r\n            });\r\n          }\r\n\r\n          if(!found){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [1]},\r\n            });\r\n\r\n            setTimeout(reject, 1000/ this.props.speed);\r\n          }\r\n          setTimeout(resolve, 1000/this.props.speed, prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = (value: number) => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const searchPromise = this.search(value, false);\r\n    searchPromise.then((node?: CytoscapeElement) => {\r\n      if(node === undefined) return;\r\n      let anc = '';\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_PSEUDO,\r\n        payload: { pseudo: remove}\r\n      });\r\n\r\n      this.pushState();\r\n      if(isLeaf(node)){\r\n        this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n        if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n        if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        else this.props.dispatch({type: actions.ANIMATION_END});\r\n      }else if(node.outgoers('node').length === 1){\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n        if(node.id() === this.treeRoot){\r\n          this.treeRoot = node.outgoers('node')[0].id();\r\n          anc = this.treeRoot;\r\n          this.removeNode(node);\r\n          this.refreshLayout();\r\n        }else{\r\n          let prev = '';\r\n          prev = node.data('prev');\r\n          const newChild = node.outgoers('node')[0];\r\n          newChild.data(prev);\r\n          this.removeNode(node);\r\n          this.addEdge(prev, newChild.id());\r\n          anc = newChild.id();\r\n          this.refreshLayout();\r\n        }\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n      }else{\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n        let promise = this.inorderSuccessor(node);\r\n        promise.then((suc: CytoscapeElement) => {\r\n          this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n          node.data('value', suc.data('value'));\r\n          suc.data('value', value);\r\n          setTimeout(\r\n            () => {\r\n                if(!isLeaf(suc)){\r\n                  const right = getChildren(suc)[1];\r\n                  right.data('prev', suc.data('prev'));\r\n                  this.addEdge(suc.data('prev'), right.id());\r\n                }\r\n                anc = suc.data('prev');\r\n                this.removeNode(suc);\r\n                this.refreshLayout();\r\n                setTimeout(() => \r\n                  this.balance(this.cy.getElementById(anc)).then(() => {\r\n                    this.props.dispatch({type: actions.ANIMATION_END});\r\n                  }),\r\n                  1000/this.props.speed\r\n                );\r\n                node.style(Styles.NODE);\r\n              },\r\n              1000/this.props.speed);\r\n        });\r\n      }\r\n    }).catch(() => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_END,\r\n      });\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.pushState();\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v).catch(() => {})}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\nconst Styles = require('../Styles/Styles');\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {}, level = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tlevel[source] = 0;\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid: source,\r\n\t\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_TRAVERSE \r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tlevel[next.id()] = level[current.id()]+1;\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tid: next.id(),\r\n\t\t\t\t\t\t\t\t\t\tvalue: level[next.id()],\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const Styles = require('../Styles/Styles');\r\nconst dfs = (cy, source, depth, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\t\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_GRAY],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'update_level',\r\n\t\t\t\tdata: {id: source.id(), value: depth}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_TRAVERSE],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, depth+1, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_BLACK],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), 0, commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\nconst Styles = require('../Styles/Styles');\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let eq = (x, y) => {\r\n    return x.distance === y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp, eq);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_RED],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_TRAVERSE],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [Styles.NODE_GRAY],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_VISITED],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_BLACK],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          Styles.NODE_RED,\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [Styles.EDGE_MST],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_TRAVERSE],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [Styles.NODE_GRAY],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let nextStyle;\r\n      if(part_of_tree[edge.id()]) nextStyle=Styles.EDGE_MST;\r\n      else nextStyle=Styles.EDGE_NO_MST;\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [nextStyle],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [Styles.NODE_TRAVERSE],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            Styles.EDGE_MST,\r\n            Styles.NODE_RED,\r\n            Styles.NODE_RED,\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_NO_MST],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","const singlyLinkedList = [\r\n  { text: 'ListaEnlazada{', ind: 0},\r\n  { text: 'Nodo* inicio', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n\r\nconst doublyLinkedList = [\r\n  { text: 'ListaDoblementeEnlazada{', ind: 0},\r\n  { text: 'Nodo *primero, *ultimo', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *ant, *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n]\r\n\r\nconst queue = [\r\n  { text: 'Cola{', ind: 0},\r\n  { text: 'Nodo *frente, *final', ind: 1},\r\n  { text: 'Encolar(Entero v)', ind: 1},\r\n  { text: 'Desencolar()', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst queuePush = [\r\n  { text: 'Encolar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si frente==NULL:', ind: 1},\r\n  { text: 'frente=final=aux', ind : 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'final->sig=aux', ind: 2},\r\n  { text: 'final=aux', ind: 2},\r\n];\r\n\r\nconst queuePop = [\r\n  { text: 'Desencolar():', ind: 0},\r\n  { text: 'Si frente==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux = frente->sig'},\r\n  { text: 'Si frente==NULL: ', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'frente=frente->sig', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst stack = [\r\n  { text: 'Pila{', ind: 0},\r\n  { text: 'Nodo *tope', ind: 1},\r\n  { text: 'Apilar(Entero v)', ind: 1},\r\n  { text: 'Desapilar(Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst stackPush = [\r\n  { text: 'Apilar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si tope==NULL:', ind : 1},\r\n  { text: 'tope=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'aux->sig=tope', ind: 2},\r\n  { text: 'tope=aux', ind: 2},\r\n];\r\n\r\nconst stackPop = [\r\n  { text: 'Desapilar():', ind: 0},\r\n  { text: 'Si tope==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux=tope', ind: 1},\r\n  { text: 'tope=tope->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n]\r\nconst singlyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=inicio', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst doublyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si primero == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=primero', ind: 1},\r\n  { text: 'primero=primero->sig', ind: 1},\r\n  { text: 'Si primero==NULL:', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'primero->ant=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'Si inicio->sig == NULL:', ind: 1},\r\n  { text: 'Nodo* aux = inicio', ind: 2},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 2},\r\n  { text: 'nodo *actual = inicio, *anterior', ind: 1},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 1},\r\n  { text: 'anterior=actual', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 2},\r\n  { text: 'anterior->sig=NULL', ind: 1},\r\n  { text: 'retornar actual', ind: 1}\r\n];\r\n\r\nconst doublyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=ultimo', ind: 1},\r\n  { text: 'ultimo=ultimo->ant', ind: 1},\r\n  { text: 'Si ultimo==NULL:', ind: 1},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=inicio', ind: 2},\r\n  { text: 'inicio=p', ind: 2},\r\n];\r\n\r\nconst doublyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=primero', ind: 2},\r\n  { text: 'primero->ant=p', ind: 2},\r\n  { text: 'primero=p', ind: 2},\r\n];\r\n\r\nconst singlyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'nodo *actual = inicio', ind: 2},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=p', ind: 2},\r\n  { text: 'p->ant=ultimo', ind: 2},\r\n  { text: 'ultimo=p', ind: 2},\r\n];\r\n\r\nconst singlyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Si inicio==p:', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'Nodo *actual=incio, *anterior=NULL', ind: 2},\r\n  { text: 'Mientras actual != p:', ind: 2},\r\n  { text: 'anterior=actual', ind: 3},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'anterior->sig=p->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n];\r\n\r\nconst doublyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Nodo *ant=p->ant, *sig=p->sig', ind: 1},\r\n  { text: 'Caso 1: ant==NULL y sig==NULL:', ind: 1},\r\n  { text: 'primero=ultimo=NULL', ind: 2},\r\n  { text: 'Caso 2: ant==NULL y sig!=NULL', ind: 1},\r\n  { text: 'primero=sig', ind: 2},\r\n  { text: 'Caso 3: ant!=NULL y sig==NULL:', ind: 1},\r\n  { text: 'ultimo=ant', ind: 2},\r\n  { text: 'Caso 4: ant!=NULL y sig!=NULL', ind : 1},\r\n  { text: 'ant->sig=sig, sig->ant=ant', ind: 2},\r\n  { text: 'borrar p', ind: 1},\r\n];\r\n\r\nconst singlyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==p', ind: 1},\r\n  { text: 'aux->sig=inicio', ind: 2},\r\n  { text: 'inicio=aux', ind: 2},\r\n  { text: 'sino:', ind: 1},\r\n  { text: 'Nodo *actual=inicio', ind: 2},\r\n  { text: 'Mientras actual->sig != p:', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=aux', ind: 2},\r\n  { text: 'aux->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *ant = p->ant', ind: 1},\r\n  { text: 'aux->sig=p, aux->ant=ant', ind: 1},\r\n  { text: 'p->ant=aux', ind: 1},\r\n  { text: 'Si ant == NULL:', ind: 1},\r\n  { text: 'primero=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ant->sig=aux', ind: 2},\r\n];\r\n\r\nconst singlyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *s = p->sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'aux->sig=s', ind: 1},\r\n];\r\n\r\nconst doublyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *sig = p->sig', ind: 1},\r\n  { text: 'aux->ant=p, aux->sig=sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'Si sig == NULL:', ind: 1},\r\n  { text: 'ultimo=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'sig->ant=aux', ind: 2},\r\n];\r\n\r\n\r\nconst singlySet = {\r\n  main: singlyLinkedList,\r\n  pushFront: singlyPushFront,\r\n  pushBack: singlyPushBack,\r\n  popFront: singlyPopFront,\r\n  popBack: singlyPopBack,\r\n  insertBefore: singlyInsertBefore,\r\n  insertAfter: singlyInsertAfter,\r\n  remove: singlyRemove,\r\n}\r\n\r\nconst doublySet = {\r\n  main: doublyLinkedList,\r\n  pushFront: doublyPushFront,\r\n  pushBack: doublyPushBack,\r\n  popFront: doublyPopFront,\r\n  popBack: doublyPopBack,\r\n  insertBefore: doublyInsertBefore,\r\n  insertAfter: doublyInsertAfter,\r\n  remove: doublyRemove,\r\n}\r\n\r\nconst queueSet = {\r\n  main: queue,\r\n  pushFront: [],\r\n  pushBack: queuePush,\r\n  popFront: queuePop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nconst stackSet = {\r\n  main: stack,\r\n  pushFront: stackPush,\r\n  pushBack: [],\r\n  popFront: stackPop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nexport default {\r\n  singlySet, doublySet, queueSet, stackSet,\r\n};","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport pseudocodes from './resources/pseudocodes/list';\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  },\r\n  SingleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_SINGLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.singlySet,\r\n  },\r\n  DoubleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_DOUBLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.doublySet,\r\n  },\r\n  Stack: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_STACK,\r\n    pseudoset: pseudocodes.stackSet,\r\n  },\r\n  Queue: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_QUEUE,\r\n    pseudoset: pseudocodes.queueSet,\r\n  },\r\n\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un arreglo de enteros</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Debe estar representado por maximo 16 numeros separados por coma</p>\r\n          <p>Cada numero debe estar entre -999 y 999</p>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BUBBLESORT_INFO,\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this.props.animation){\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (pos === commands.length) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass MergeSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_MERGESORT_INFO,\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this.props.animation){\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions, shadows} = commands[pos++];\r\n        if(nodes){\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(shadows){\r\n\t\t\t\t\tshadows.forEach(shadow => {\r\n\t\t\t\t\t\tif(shadow.value === '+') this.addShadow(shadow.id, shadow.position);\r\n\t\t\t\t\t\telse this.cy.remove('node[id=\"'+shadow.id+'\"]');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MergeSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1, 'z-index': 0});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3, 'z-index': 1});\r\n    }\r\n    commands.push(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray', 'z-index': 2}],\r\n      lines: [3],\r\n    });\r\n    commands.push({\r\n      lines: (value < values[mid] ? [6, 7] : (values[mid] < value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white', 'z-index': 1}],\r\n      duration: 10,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearchAlgo from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BinarySearch extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Buscar',\r\n\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BINARY_SEARCH_INFO,\r\n\t\t});\r\n\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this.props.animation){\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (pos === commands.length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: found ? actions.BINARY_SEARCH_FOUND_SUCCESS : actions.BINARY_SEARCH_NOT_FOUND_INFO,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (values: {commands: Array<AnimationStep>, found:boolean}) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = BinarySearchAlgo(this.state.values, value);\r\n\t\t\tconst found = this.cy.nodes('[value = '+value+']').length > 0;\r\n      resolve({commands, found});\r\n    }).then((values: {commands: Array<AnimationStep>, found:boolean})=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, values.commands, values.found);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BinarySearch);","import actions from \"../../Actions/actions\";\r\n\r\n// Simple array used to create commands for Linked List Animation\r\n\r\nclass LinkedListSimulator {\r\n  _data = [];\r\n\r\n  constructor(data = [], type = 'none'){\r\n    this._data = [...data];\r\n    this.type = type;\r\n  }\r\n  length(){\r\n    return this._data.length;\r\n  }\r\n\r\n  push_back(element, slow){\r\n    const {id, value} = element;\r\n    let source = undefined;\r\n    const commands = [];\r\n    let lines;\r\n    if(this.length() === 0){\r\n      commands.push({lines: [2,3]});\r\n    }else{\r\n      if(this.type === actions.SELECT_QUEUE){\r\n        lines = [4, 5, 6];\r\n      }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n        lines = [4, 5, 6, 7];\r\n      }\r\n    }\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines: [6, 7]},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    if(this.length()){\r\n      source = this._data[this.length()-1].id;\r\n    }\r\n\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [8];\r\n    commands.push({\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_back',\r\n        data: {\r\n          id, value, source,\r\n        }\r\n      }],\r\n      lines,\r\n    });\r\n    console.log(commands);\r\n    return commands;\r\n  }\r\n\r\n  pop_back(slow){\r\n    if(this.length() === 0) return [];\r\n    const commands = [];\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        let lines;\r\n        if(this.length() === 1) lines = [2, 3, 4, 5];\r\n        else lines = [7, 8, 9];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    const {id} = this._data[this.length()-1];\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST && this.length() > 1) lines = [10, 11];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], \r\n        style: [{'background-color': 'black', 'color':'white'}], \r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6,7];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_back',\r\n          data: { id, value: this.length()-1},\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    return commands;\r\n  }\r\n\r\n  push_front(element){\r\n    const {id, value} = element;\r\n    let target = undefined;\r\n    if(this.length()) target = this._data[0].id;\r\n    let lines;\r\n    if(this.length() === 0){\r\n      lines = [2,3];\r\n    }else{\r\n      if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [4,5,6];\r\n      else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST) lines = [4,5,6,7];\r\n      else if(this.type === actions.SELECT_STACK) lines = [4,5,6];\r\n    }\r\n    const commands = [{\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_front',\r\n        data: {\r\n          id, value, target,\r\n        }\r\n      }],\r\n      lines,\r\n    }]\r\n    return commands;\r\n  }\r\n\r\n  pop_front(){\r\n    if(this.length() === 0) return [{eles: [], style: []}];\r\n    const {id} = this._data[0];\r\n    let lines;\r\n    const commands = [];\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST || this.type === actions.SELECT_STACK) lines = [2,3,4];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6, 7];\r\n    }else{\r\n      if(this.length() === 1) lines = [3,4];\r\n      else lines = [5,6];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_front',\r\n          data: { id },\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    //this._data.shift();\r\n    return commands;\r\n  }\r\n\r\n  search(value){\r\n    const n = this.length();\r\n    const commands = [];\r\n    for(let i = 0; i < n; i++){\r\n      //Animations steps here\r\n      const id = this._data[i].id;\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{ 'background-color': 'black', 'color': 'white'}],\r\n      });\r\n\r\n      if(this._data[i].value === value){\r\n        commands.push({\r\n          eles: [id],\r\n          style: [{'background-color': 'lightgreen', 'color': 'black'}],\r\n        })\r\n        return true;\r\n      }\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{'background-color': 'white', 'color': 'black'}],\r\n        duration: 10,\r\n      })\r\n    }\r\n    return commands;\r\n  }\r\n\r\n  insert_before(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(nodeId === id) break;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            lines: [7, 8],\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      \r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let prev = '', next = nodeId;\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [2, 3, 4];\r\n      else lines = [9, 10];\r\n    }else{\r\n      if(pos === 0) lines = [5, 6];\r\n      else lines = [7, 8];\r\n    }\r\n    if(pos - 1 >= 0){\r\n      prev = this._data[pos-1].id;\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next}\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : undefined),\r\n        duration: 500,\r\n      });\r\n    }\r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node_before',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n  insert_after(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 500,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n\r\n    const pos = i;\r\n    let prev = nodeId, next = '';\r\n    if(pos + 1 < this.length()) next = this._data[pos+1].id;\r\n    if(pos + 1 < this.length()){\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next},\r\n            duration: 500,\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : [2, 3]),\r\n      });\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      lines = (pos === this.length() - 1 ? [5, 6] : [7, 8]);\r\n    }else lines = [4];\r\n    \r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n  delete_position(nodeId, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        let lines;\r\n        if(nodeId === id && i === 0) lines = [1, 2];\r\n        else lines = [6, 7, 8];\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 500,\r\n            lines,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let source, target;\r\n    if(pos > 0 && pos + 1 < this.length()){\r\n      source = this._data[pos-1].id;\r\n      target = this._data[pos+1].id;\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [3];\r\n      else lines = [9, 10];\r\n    }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      let caseLines;\r\n      if(this.length() === 1) caseLines = [2, 3];\r\n      else if(pos === 0) caseLines = [4, 5];\r\n      else if(pos === this.length() - 1) caseLines = [6, 7];\r\n      else caseLines = [8, 9];\r\n      commands.push({\r\n        eles: [nodeId], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: caseLines,\r\n      });\r\n\r\n      lines = [10];\r\n    }\r\n\r\n    commands.push({\r\n      inst: [{\r\n        name: 'remove',\r\n        data: {id: nodeId, value: pos, source, target}\r\n      }],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default LinkedListSimulator;","import React from 'react';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nimport actions from '../Actions/actions';\r\nimport { AnimationStep, CytoscapeElement, CytoEvent } from '../Types/types';\r\nimport InputModal from './InputModal';\r\n\r\nconst cytoscape = require('cytoscape');\r\nconst Styles = require('../Styles/Styles');\r\nconst { connect } = require('react-redux');\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n\r\n  action: string,\r\n  type: string,\r\n\talgorithm: string,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n  options: Array<{name: string, run: () => void}>,\r\n\tloadingGraph: Boolean,\r\n  data: string,\r\n  \r\n  pseudoset: pseudoSet,\r\n}\r\n\r\ntype State = {\r\n  showPushFrontModal: boolean,\r\n  showPushBackModal: boolean,\r\n  showPushAfterModal: boolean,\r\n  showPushBeforeModal: boolean,\r\n  showDeleteModal: boolean,\r\n}\r\ntype storeState = {\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: Object,\r\n}\r\n\r\ntype stackState = {\r\n  list: Array<Object>,\r\n  elements: Array<Object>,\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\nclass LinkedList extends React.Component<Props, State>{\r\n  _mediaRecorder = new MediaRecorder(this.props.dispatch);\r\n  _isMounted = false;\r\n\r\n  list = new LinkedListSimulator();\r\n  undo: Array<stackState> = [];\r\n  redo: Array<stackState> = [];\r\n\r\n  layout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n  };\r\n  \r\n  doublyLinked = false;\r\n\r\n  state = {\r\n    showDeleteModal: false,\r\n    showPushBeforeModal: false,\r\n    showPushBackModal: false,\r\n    showPushFrontModal: false,\r\n    showPushAfterModal: false,\r\n  }\r\n\r\n  cy = cytoscape();\r\n\r\n  nodeStyle = {...Styles.NODE, shape: 'square'};  \r\n  edgeStyle = {};\r\n  initialize(state: stackState){\r\n\r\n    this.edgeStyle = {...Styles.EDGE, ...Styles.EDGE_DIRECTED};\r\n\r\n    if(this.doublyLinked) this.edgeStyle = {...this.edgeStyle, ...Styles.EDGE_DOUBLE}\r\n    const {list, elements} = state;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: this.edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n    });\r\n\r\n    this.list._data = list;\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.cy.on('resize', () => this.refreshLayout(false))\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.refreshLayout(false);\r\n  }  \r\n\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.doublyLinked = this.props.type === actions.SELECT_DOUBLE_LINKED_LIST;\r\n\r\n    this.list.type = this.props.type;\r\n    this.initialize({list: [], elements: []});\r\n    let options:Array<{name: string, run: () => void}> = [];\r\n    if(this.props.type === actions.SELECT_SINGLE_LINKED_LIST || this.props.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      options = [\r\n        {\r\n          name: 'Insertar al frente',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Insertar al final',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Extraer frente',\r\n          run: () => this.popFront(),\r\n        },\r\n        {\r\n          name: 'Extraer final',\r\n          run: () => this.popBack(!this.doublyLinked),\r\n        },\r\n        {\r\n          name: 'Insertar antes de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushBeforeModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Insertar despues de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushAfterModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Eliminar nodo',\r\n          run: () => this.remove(!this.doublyLinked),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_STACK){\r\n      options = [\r\n        {\r\n          name: 'Apilar',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Desapilar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_QUEUE){\r\n      options = [\r\n        {\r\n          name: 'Encolar',\r\n          run: () =>\r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR}) \r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Desencolar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }\r\n    this.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n        options,\r\n        type: this.props.type,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n\r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.cy.width()/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      layoutOptions.positions[id] = {\r\n        x: mid - (n-1)*(35) + 70*i,\r\n        y: this.cy.height()/4,\r\n      }\r\n    }\r\n  }\r\n  refreshLayout(animate:boolean=true) {\r\n    this.layout.stop();\r\n    this.layoutProcessing();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n  }\r\n  \r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      const prev = this.cy.getElementById(selection.id);\r\n      prev.style(this.nodeStyle);\r\n      if(selection.id === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    });\r\n\t}\r\n\r\n \t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n    let state = this.undo.pop();\r\n\r\n    if(state !== undefined){\r\n\t\t\tthis.redo.push({list: [...this.list._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.undo.push({list: [...this.list._data], elements: currentElements});\r\n\t\t\tthis.initialize(state);\r\n\t\t}\r\n\t}\r\n\r\n  pushState(){\r\n    this.redo = [];\r\n    this.undo.push({\r\n      list: [...this.list._data],\r\n      elements: this.exportGraph(),\r\n    });\r\n  }\r\n  \r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n          this.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (eles) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tif(style) this.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n        }\r\n        \r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tinst.forEach(ele => {\r\n            if(ele.data == null) return;\r\n            const {id, value, source, target} = ele.data;\r\n\r\n\t\t\t\t\t\tif(ele.name === 'remove'){\r\n              if(id !== undefined) this.removeNode(id);\r\n              if(source != null && target != null) this.addEdge(source, target);\r\n              if(value !== undefined) this.list._data.splice(value, 1);\r\n\t\t\t\t\t\t}else if(ele.name === 'add'){\r\n              if(id !== undefined && value !== undefined){\r\n                this.addNode(id, value);\r\n                this.list._data.push({id, value});\r\n                if(source !== undefined) this.addEdge(source, id);\r\n                if(target !== undefined) this.addEdge(id, target);\r\n              }\r\n            }else if(ele.name === 'push_back'){\r\n              if(id != null && value != null){\r\n                const n = this.list.length();\r\n                this.addNode(id, value, {x: this.cy.width()/2 + n*35, y: this.cy.height()/4 - 70});\r\n                this.list._data.push({id, value});\r\n                if(source != null) this.addEdge(source, id);\r\n              }\r\n            }else if(ele.name === 'push_front'){\r\n              if(id != null && value != null){\r\n                this.addNode(id, value, {x: this.cy.width()/2 - this.list.length()*35, y: this.cy.height()/4 - 70});\r\n                this.list._data.unshift({id, value});\r\n                if(target != null) this.addEdge(id, target);\r\n              }\r\n            }else if(ele.name === 'pop_front'){\r\n              if(id != null){\r\n                this.removeNode(id);\r\n                this.list._data.shift();\r\n              }\r\n            }else if(ele.name === 'pop_back'){\r\n              if(id != null){\r\n                this.removeNode(id);\r\n                this.list._data.pop();\r\n              }\r\n            }else if(ele.name === 'add_node_before'){\r\n              let {id, value, pos} = ele.data;\r\n              if(id != null && value != null && pos != null){\r\n                const x = this.cy.width()/2 - (this.list.length()-1)*(35) + 70*pos;\r\n                this.addNode(id, value, {x, y: this.cy.height()/4 - 70});\r\n                if(pos === 0) this.list._data.unshift({id, value});\r\n                else{\r\n\r\n                  let rest = this.list._data.splice(pos);\r\n                  this.list._data.push({id, value});\r\n                  this.list._data = this.list._data.concat(...rest);\r\n                }\r\n              }\r\n            }else if(ele.name === 'add_node'){\r\n              let {id, value, pos} = ele.data;\r\n              if(id != null && value != null && pos != null){\r\n                const x = this.cy.width()/2 - (this.list.length()-1)*(35) + 70*pos;\r\n                this.addNode(id, value, {x, y: this.cy.height()/4 - 70});\r\n                pos++;\r\n                if(pos === this.list.length()) this.list._data.push({id, value});\r\n                else{\r\n                  let rest = this.list._data.splice(pos);\r\n                  this.list._data.push({id, value});\r\n                  this.list._data = this.list._data.concat(...rest);\r\n                }\r\n              }\r\n            }else if(ele.name === 'add_edge'){\r\n              let {source, target} = ele.data;\r\n              if(source && target){\r\n                console.log('ADD', source, target);\r\n                this.addEdge(source, target);\r\n              }\r\n            }else if(ele.name === 'remove_edge'){\r\n              let {source, target} = ele.data;\r\n              if(source && target){\r\n                this.removeEdge(source+'-'+target);\r\n                if(this.doublyLinked) this.removeEdge(target+'-'+source);\r\n              }\r\n            }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n        this.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 500 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n    }\r\n\t\tanimation();\r\n  }\r\n  \r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    layoutOptions.positions[id] = position;\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushBack(value: number = 0, slow:boolean = false){\r\n\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    \r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.push_back({id: id.toString(), value}, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  pushFront(value: number = 0){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.pushState();\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    \r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.push_front({id: id.toString(), value});\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  popFront(){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.pop_front();\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.pop_back(slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  remove(slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(this.props.animation) return;\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n\r\n    const nodeId = selection.id;\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      const commands = this.list.delete_position(nodeId, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n\r\n    this.pushState();\r\n    const nodeId = selection.id;\r\n\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n      this.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n      });\r\n      let commands;\r\n      if(where === 'before') commands = this.list.insert_before(nodeId, id.toString(), value, slow);\r\n      else commands = this.list.insert_after(nodeId, id.toString(), value, slow);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      this.executeAnimation(commands);\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <>\r\n        <InputModal \r\n          show={this.state.showPushFrontModal}\r\n          handleClose={() => this.setState({showPushFrontModal: false})}\r\n          callback={(v:number) => this.pushFront(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBackModal}\r\n          handleClose={() => this.setState({showPushBackModal: false})}\r\n          callback={(v:number) => this.pushBack(v, this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBeforeModal}\r\n          handleClose={() => this.setState({showPushBeforeModal: false})}\r\n          callback={(v:number) => this.insert(v, 'before', this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushAfterModal}\r\n          handleClose={() => this.setState({showPushAfterModal: false})}\r\n          callback={(v:number) => this.insert(v, 'after')}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LinkedList);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\nimport LinkedList from './Components/LinkedList';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t\t<Route path=\"/SingleLinkedList\" render={() => <LinkedList {...properties.SingleLinkedList}/>}/>\r\n\t\t\t\t\t\t<Route path=\"/DoubleLinkedList\" render={() => <LinkedList {...properties.DoubleLinkedList}/>}/>\r\n\t\t\t\t\t\t<Route path=\"/Queue\" render={() => <LinkedList {...properties.Queue}/>}/>\r\n\t\t\t\t\t\t<Route path=\"/Stack\" render={() => <LinkedList {...properties.Stack}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.25\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nimport actions from '../Actions/actions';\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n  'SingleLinkedList': 'Lista enlazada',\r\n  'DoubleLinkedList': 'Lista doble',\r\n  'Queue': 'Cola',\r\n  'Stack': 'Pila',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>,\r\n  dispatch: (action: Object) => void,\r\n  undo: () => void,\r\n  redo: () => void,\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    undo: state.undo,\r\n    redo: state.redo,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  render(){\r\n    console.log(this.props.algorithm);\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={1}>\r\n              <button className='dropdown-button' onClick={this.props.undo}>Deshacer</button>\r\n            </Col>\r\n            <Col md={1}>\r\n              <button className='dropdown-button' onClick={this.props.redo}>Rehacer</button>\r\n            </Col>\r\n            <Col md={{span: 2, offset:4}}>\r\n              <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport PhotoControl from './PhotoControl';\r\nimport GIFControl from './GIFControl';\r\nconst {connect} = require('react-redux');\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\ntype Props = {\r\n  photo: () => void,\r\n  gif: () => void,\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return { ...state };\r\n}\r\n\r\nclass MenuBar extends React.Component<Props>{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/SingleLinkedList\"}><button className='dropdown-button'>Lista enlazada</button></NavLink>,\r\n      <NavLink to={\"/Queue\"}><button className='dropdown-button'>Cola</button></NavLink>,\r\n      <NavLink to={\"/Stack\"}><button className='dropdown-button'>Pila</button></NavLink>,\r\n      <NavLink to={\"/DoublelinkedList\"}><button className='dropdown-button'>Lista doble</button></NavLink>,\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n          <Col md={1}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n          </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(MenuBar);","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\n\r\nclass App extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport listPseudo from '../resources/pseudocodes/list';\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        pseudo: heap,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        pseudo: avl,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: () => {},\r\n        redo: () => {},\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: () => {},\r\n        redo: () => {},\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        pseudo: binarySearch,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: () => {},\r\n        redo: () => {},\r\n      }\r\n\r\n    case actions.SELECT_LINKED_LIST:\r\n      const nextState = {\r\n        ...state,\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n        undo: action.payload.undo,\r\n        redo: action.payload.redo,\r\n      }\r\n      switch(action.payload.type){\r\n        case actions.SELECT_SINGLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'SingleLinkedList',\r\n            pseudo: listPseudo.singlySet.main,\r\n          }\r\n        case actions.SELECT_DOUBLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'DoubleLinkedList',\r\n            pseudo: listPseudo.doublySet.main,\r\n          }\r\n        case actions.SELECT_QUEUE:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Queue',\r\n            pseudo: listPseudo.queueSet.main,\r\n          }\r\n        case actions.SELECT_STACK:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Stack',\r\n            pseudo: listPseudo.stackSet.main,\r\n          }\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.TOGGLE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: !state.showPseudo,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n\r\n    case actions.CHANGE_OPTIONS:\r\n      return {\r\n        ...state,\r\n        options: action.payload.options,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        animation: false,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero entre -999 y 999',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Arreglo invalido',\r\n      'Verifique que el arreglo cumpla con los requerimientos',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.INVALID_HEAP_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un Heap valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_AVL_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un AVL valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.EMPTY_LIST_WARNING:\r\n      createNotification('La lista se encuentra vacia',\r\n      'No se pudo realizar la accion',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('El elemento no fue encontrado en el arbol AVL',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BFS_INFO:\r\n      createNotification('',\r\n      'Realizando BFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_DFS_INFO:\r\n      createNotification('',\r\n      'Realizando DFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_DIJKSTRA_INFO:\r\n      createNotification('',\r\n      'Calculando caminos de peso minimo desde el nodo seleccionado mediante Dijkstra',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_KRUSKAL_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Kruskal',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_PRIM_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Prim',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_BUBBLESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento burbuja',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_MERGESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento por mezcla',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BINARYSEARCH_INFO:\r\n      createNotification('',\r\n      'Realizando busqueda binaria sobre el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('El elemento no se encuentra en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',\r\n      'Debe volver a la edicion para modificar el grafo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.ARRAY_SORTED_SUCCESS:\r\n      createNotification('El arreglo fue ordenado exitosamente',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('El elemento fue encontrado en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n  showPseudo: true,\r\n\r\n  undo: () => {},\r\n  redo: () => {},\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_GRAY = {\r\n\t'background-color': 'gray',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_RED = {\r\n\t'background-color': 'red',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_BLACK = {\r\n\t'background-color': 'black',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const NODE_CORRECT = {\r\n\t'background-color': 'Chartreuse',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_WRONG = {\r\n\t'background-color': '#FF9494',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_SELECTED = {\r\n\t'background-color': '#2B3B6B',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_VISITED = {\r\n\t'line-color': '#2B3B6B',\r\n\t'target-arrow-color': '#2B3B6B',\r\n}\r\n\r\nexport const EDGE_TRAVERSE = {\r\n\t'line-color': 'green',\r\n\t'target-arrow-color': 'green',\r\n}\r\n\r\nexport const EDGE_NO_MST = {\r\n\t'line-style': 'dashed', \r\n\t'line-color': '#eee'\r\n}\r\n\r\nexport const EDGE_MST = {\r\n\t'line-style': 'solid', \r\n\t'line-color': 'black'\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n\t'line-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_DOUBLE = {\r\n\t'source-arrow-color': '#ccc',\r\n\t'source-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}"],"sourceRoot":""}