{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","resources/default_examples/defaultGraphs.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Components/SpeedBar.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","utils/heap-utils.js","Components/InputHeapModal.tsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/GIFControl.tsx","Components/PhotoControl.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","defaultGraphs","elements","nodes","data","id","value","position","x","y","group","removed","selected","selectable","locked","grabbable","classes","edges","weight","source","target","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","Object","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","readAsText","handleClose","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","createNode","weighted","objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","Math","floor","random","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","_this5","Components_UploadGraphModal","Components_InputModal","w","xs","min","max","TreeBar","insert","fluid","placeholder","handleValueChange","validateValue","Components_SpeedBar","PriorityQueue","_comp","_eq","_data","isEmpty","parent","_ref","l","r","_ref2","_ref3","_ref4","Element","borderStyle","borderWidth","textAlign","class","HeapArray","cols","HeapArray_Element","header","map","_x","array","parseHeap","output","InputHeapModal","validateArray","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heap","lastValue","autoungrabify","popper","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","pannable","src","clear","stateValues","Components_InputHeapModal","v","Components_HeapArray","Components_TreeBar","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","showSearchModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","nodePopper","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","bsearch","_getChildren21","_getChildren22","_this6","mode","_this7","search","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","match","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","center","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","GIFControl","timeEllapsed","ss","ms","handleClick","gifLength","PhotoControl","md","Components_OptionsMenu","span","offset","Components_PhotoControl","Components_GIFControl","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","algorithmReducer","animationReducer","canvasReducer","selectionReducer","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.38e34ed5.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, lines} = this.props;\r\n    let codelines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {codelines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","export const defaultGraphs = [\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":478,\"y\":145},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":713,\"y\":146},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":953,\"y\":151},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":477,\"y\":341},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":715,\"y\":345},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6\",\"value\":6},\"position\":{\"x\":939,\"y\":344},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-1-node-5\",\"weight\":12,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":0,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-2\",\"weight\":4,\"source\":\"node-3\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-5\",\"weight\":13,\"source\":\"node-2\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":7,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":9,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-6\",\"weight\":3,\"source\":\"node-2\",\"target\":\"node-6\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-3\",\"weight\":12,\"source\":\"node-6\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-5\",\"weight\":3,\"source\":\"node-6\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-2\",\"weight\":3,\"source\":\"node-4\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":688,\"y\":101},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":446,\"y\":207},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":917,\"y\":226},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":554,\"y\":369},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":746,\"y\":391},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-2-node-4\",\"weight\":11,\"source\":\"node-2\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":11,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-1\",\"weight\":13,\"source\":\"node-3\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":6,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":8,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-1\",\"weight\":14,\"source\":\"node-5\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-5\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":482,\"y\":245},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":714,\"y\":339},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":722,\"y\":159},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":986,\"y\":248},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-4-node-5\",\"weight\":6,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-3\",\"weight\":4,\"source\":\"node-1\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-4\",\"weight\":11,\"source\":\"node-3\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-5\",\"weight\":6,\"source\":\"node-3\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":3,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n];\r\n\r\n\r\n","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    console.log('Taking picture');\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 450){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      console.log(this._gifBuffer.length);\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  console.log(state.selection);\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Object){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize(defaultGraphs[Math.floor(Math.random()*defaultGraphs.length)].elements);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: this.remove,\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let promise = new Promise((resolve: (node?: CytoscapeElement | null) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          \r\n          resolve(prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let {selection} = this.props;\r\n    if(!selection){\r\n      this.props.dispatch({\r\n        type: actions.NO_ELEMENT_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n      });\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      duration: 0,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n  photo: () => {},\r\n  gif: () => {},\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    photo: state.photo,\r\n    gif: state.gif,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props>{\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button'>Acciones</button>\r\n                <div className='actions-menu'>\r\n                  <OptionsMenu op={this.props.options}/>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={{span:1, offset:6}}>\r\n              <PhotoControl callback={this.props.photo}/>\r\n              </Col>\r\n            <Col md={1}>\r\n              <GIFControl callback={this.props.gif}/>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <ReactNotification/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport actions from '../Actions/actions'\r\n\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 45 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}