{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","resources/default_examples/defaultGraphs.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Components/SpeedBar.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","utils/heap-utils.js","Components/InputHeapModal.tsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/GIFControl.tsx","Components/PhotoControl.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","defaultGraphs","elements","nodes","data","id","value","position","x","y","group","removed","selected","selectable","locked","grabbable","classes","edges","weight","source","target","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","Object","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","_this","download","jpg","quality","takeGif","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","readAsText","handleClose","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","createNode","weighted","_objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","Math","floor","random","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","_this5","Components_UploadGraphModal","Components_InputModal","w","xs","min","max","TreeBar","insert","fluid","placeholder","handleValueChange","validateValue","Components_SpeedBar","PriorityQueue","_comp","_eq","_data","isEmpty","parent","_ref","l","r","_ref2","_ref3","_ref4","Element","borderStyle","borderWidth","textAlign","class","HeapArray","cols","HeapArray_Element","header","map","_x","array","parseHeap","output","InputHeapModal","validateArray","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heap","Heap_objectSpread","lastValue","autoungrabify","popper","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","pannable","src","clear","stateValues","Components_InputHeapModal","v","Components_HeapArray","Components_TreeBar","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","showSearchModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","nodePopper","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","bsearch","_getChildren21","_getChildren22","_this6","mode","_this7","search","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","match","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","BubbleSort_objectSpread","shape","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","MergeSort_objectSpread","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","BinarySearch_objectSpread","center","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","GIFControl","timeEllapsed","ss","ms","handleClick","gifLength","PhotoControl","md","Components_OptionsMenu","span","offset","Components_PhotoControl","Components_GIFControl","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","algorithmReducer","algorithmReducer_objectSpread","animationReducer","animationReducer_objectSpread","canvasReducer","canvasReducer_objectSpread","selectionReducer","selectionReducer_objectSpread","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.14f8a276.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, lines} = this.props;\r\n    let codelines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {codelines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","export const defaultGraphs = [\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":478,\"y\":145},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":713,\"y\":146},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":953,\"y\":151},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":477,\"y\":341},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":715,\"y\":345},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6\",\"value\":6},\"position\":{\"x\":939,\"y\":344},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-1-node-5\",\"weight\":12,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":0,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-2\",\"weight\":4,\"source\":\"node-3\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-5\",\"weight\":13,\"source\":\"node-2\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":7,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":9,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-6\",\"weight\":3,\"source\":\"node-2\",\"target\":\"node-6\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-3\",\"weight\":12,\"source\":\"node-6\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-5\",\"weight\":3,\"source\":\"node-6\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-2\",\"weight\":3,\"source\":\"node-4\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":688,\"y\":101},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":446,\"y\":207},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":917,\"y\":226},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":554,\"y\":369},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":746,\"y\":391},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-2-node-4\",\"weight\":11,\"source\":\"node-2\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":11,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-1\",\"weight\":13,\"source\":\"node-3\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":6,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":8,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-1\",\"weight\":14,\"source\":\"node-5\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-5\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":482,\"y\":245},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":714,\"y\":339},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":722,\"y\":159},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":986,\"y\":248},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-4-node-5\",\"weight\":6,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-3\",\"weight\":4,\"source\":\"node-1\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-4\",\"weight\":11,\"source\":\"node-3\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-5\",\"weight\":6,\"source\":\"node-3\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":3,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n];\r\n\r\n\r\n","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg({quality: 0.5});\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Object){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize(defaultGraphs[Math.floor(Math.random()*defaultGraphs.length)].elements);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: this.remove,\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let promise = new Promise((resolve: (node?: CytoscapeElement | null) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          \r\n          resolve(prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let {selection} = this.props;\r\n    if(!selection){\r\n      this.props.dispatch({\r\n        type: actions.NO_ELEMENT_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n      });\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      duration: 0,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n  photo: () => {},\r\n  gif: () => {},\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    photo: state.photo,\r\n    gif: state.gif,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props>{\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button'>Acciones</button>\r\n                <div className='actions-menu'>\r\n                  <OptionsMenu op={this.props.options}/>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={{span:1, offset:6}}>\r\n              <PhotoControl callback={this.props.photo}/>\r\n              </Col>\r\n            <Col md={1}>\r\n              <GIFControl callback={this.props.gif}/>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport actions from '../Actions/actions'\r\n\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}