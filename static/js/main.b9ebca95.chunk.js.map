{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Algorithms/DS/PriorityQueue.js","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/Footer.tsx","Components/PhotoControl.tsx","Components/GIFControl.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","Object","objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","show","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","TOGGLE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","elements","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","data","readAsText","handleClose","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","min","max","ref","onChange","selection","weight","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","nodes","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","visibility","name","shift","pop","position","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","target","_event$position","x","y","createNode","weighted","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","group","z-index","border-width","font-size","_this4","Math","floor","random","source","_this5","Components_UploadGraphModal","Components_InputModal","w","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","layoutOptions","positions","padding","animate","animationDuration","Heap","class","showInsertModal","match","lastValue","addNode","autoungrabify","output","parseHeap","grabbable","pannable","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","src","clear","stateValues","_this6","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","AVL","treeRoot","showSearchModal","showRemoveModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","_this7","newNode","insertion","_getChildren19","_getChildren20","found","getNext","_this8","bsearch","_getChildren21","_getChildren22","_this9","mode","_this10","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","prevState","popper","Components_InputArrayModal","mergeSortAnimation","mid","mergeSort","h","toConsumableArray","nofocus","shadows","rshadows","cmd","p","slice","li","ri","zIndex","addShadow","shadow","Mergesort","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","center","fluid","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","algoDict","showActions","md","Components_OptionsMenu","Components_SpeedBar","span","offset","PhotoControl","handleClick","GIFControl","timeEllapsed","ss","ms","gifLength","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","Components_PhotoControl","Components_GIFControl","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","animationReducer","canvasReducer","selectionReducer","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.b9ebca95.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code && this.props.show){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    TOGGLE_PSEUDO: 'TOGGLE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 300, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className='modal-header' closeButton>\r\n            <Modal.Title>Seleccione un archivo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>El archivo debe contener un grafo valido, previamente descargado </p>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Introduzca un numero entero</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El numero debe estar entre -999 y 999</p>\r\n          <input \r\n            id=\"IntInput\"\r\n            type=\"number\" \r\n            min={-999}\r\n            max={999}\r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Object){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un Heap valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport {insert, remove} from '../resources/pseudocodes/heap';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreatePopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition: {x: position. x, y: position.y },\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\t\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\t\t\t\tnode.style({\r\n\t\t\t\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout(animate:boolean=true) {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tlayoutOptions.positions[node.id()+'-popper'] = { x: nx, y: ny+30}\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.heap.length() === 32) return;\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2],\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n\t\t\t\r\n\t\t\tthis.addNode(\"1\", val);\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val, src.position());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2, 3],\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (n === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.addNode((i).toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un arbol AVL valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('resize', () => this.refreshLayout(false));\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: () => this.setState({showRemoveModal: true}),\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = id + 1;\r\n    let newNode:CytoscapeElement;\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.addNode(id.toString(), value, 0, 0, prev.position());\r\n              newNode = this.cy.getElementById(id.toString());\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.addNode(id.toString(), value);\r\n        newNode = this.cy.getElementById(id.toString());\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload:{\r\n        pseudo: search,\r\n      }\r\n    })\r\n    let promise = new Promise((resolve: (node: CytoscapeElement) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [2]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [5,6]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [3,4]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          if(!found){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [1]},\r\n            });\r\n            setTimeout(reject, 1000/ this.props.speed);\r\n          }\r\n          setTimeout(resolve, 1000/this.props.speed, prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = (value: number) => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const searchPromise = this.search(value);\r\n    searchPromise.then((node?: CytoscapeElement) => {\r\n      if(node === undefined) return;\r\n      let anc = '';\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_PSEUDO,\r\n        payload: { pseudo: remove}\r\n      });\r\n      if(isLeaf(node)){\r\n        this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n        if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n        if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        else this.props.dispatch({type: actions.ANIMATION_END});\r\n      }else if(node.outgoers('node').length === 1){\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n        if(node.id() === this.treeRoot){\r\n          this.treeRoot = node.outgoers('node')[0].id();\r\n          anc = this.treeRoot;\r\n          this.removeNode(node);\r\n          this.refreshLayout();\r\n        }else{\r\n          let prev = '';\r\n          prev = node.data('prev');\r\n          const newChild = node.outgoers('node')[0];\r\n          newChild.data(prev);\r\n          this.removeNode(node);\r\n          this.addEdge(prev, newChild.id());\r\n          anc = newChild.id();\r\n          this.refreshLayout();\r\n        }\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n      }else{\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n        let promise = this.inorderSuccessor(node);\r\n        promise.then((suc: CytoscapeElement) => {\r\n          this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n          node.data('value', suc.data('value'));\r\n          suc.data('value', value);\r\n          setTimeout(\r\n            () => {\r\n                if(!isLeaf(suc)){\r\n                  const right = getChildren(suc)[1];\r\n                  right.data('prev', suc.data('prev'));\r\n                  this.addEdge(suc.data('prev'), right.id());\r\n                }\r\n                anc = suc.data('prev');\r\n                this.removeNode(suc);\r\n                this.refreshLayout();\r\n                setTimeout(() => \r\n                  this.balance(this.cy.getElementById(anc)).then(() => {\r\n                    this.props.dispatch({type: actions.ANIMATION_END});\r\n                  }),\r\n                  1000/this.props.speed\r\n                );\r\n                node.style(Styles.NODE);\r\n              },\r\n              1000/this.props.speed);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un arreglo de enteros</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Debe estar representado por numeros separados por coma</p>\r\n          <p>Cada numero debe estar entre -999 y 999</p>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions, shadows} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(shadows){\r\n\t\t\t\t\tshadows.forEach(shadow => {\r\n\t\t\t\t\t\tif(shadow.value === '+') this.addShadow(shadow.id, shadow.position);\r\n\t\t\t\t\t\telse this.cy.remove('node[id=\"'+shadow.id+'\"]');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: [], lines: [3]};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n      lines: (values[mid] < value ? [7, 8] : (values[mid] > value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      lines: [],\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.25\"\r\n          max=\"2\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.25\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nimport actions from '../Actions/actions';\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>,\r\n  dispatch: (action: Object) => void,\r\n\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={{span: 2, offset:6}}>\r\n              <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport PhotoControl from './PhotoControl';\r\nimport GIFControl from './GIFControl';\r\nconst {connect} = require('react-redux');\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\ntype Props = {\r\n  photo: () => void,\r\n  gif: () => void,\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return { ...state };\r\n}\r\n\r\nclass MenuBar extends React.Component<Props>{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n          <Col md={1}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n          </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(MenuBar);","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\n\r\nclass App extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        pseudo: heap,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        pseudo: avl,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        pseudo: binarySearch,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.TOGGLE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: !state.showPseudo,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n  showPseudo: false,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}"],"sourceRoot":""}