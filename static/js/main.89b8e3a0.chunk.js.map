{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","resources/default_examples/defaultGraphs.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Algorithms/DS/PriorityQueue.js","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/GIFControl.tsx","Components/PhotoControl.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","this","show","_this$props","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","defaultGraphs","elements","nodes","data","id","value","position","x","y","group","removed","selected","selectable","locked","grabbable","classes","edges","weight","source","target","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","Object","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","_this","download","jpg","quality","takeGif","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","readAsText","handleClose","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","createNode","weighted","_objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","Math","floor","random","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","_this5","Components_UploadGraphModal","Components_InputModal","w","PriorityQueue","_comp","_eq","_data","isEmpty","parent","_ref","l","r","_ref2","_ref3","_ref4","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","layoutOptions","positions","padding","animate","animationDuration","Heap","class","showInsertModal","match","Heap_objectSpread","lastValue","addNode","autoungrabify","output","parseHeap","pannable","layoutProcessing","sep","getHeight","max","vw","vh","setSep","nx","ny","val","src","clear","stateValues","_this6","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","min","correct","balance","sign","abs","validateAVL","_this$props2","avl","AVL","treeRoot","showSearchModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","popper","nodePopper","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","getNext","_this7","bsearch","_getChildren21","_getChildren22","_this8","mode","_this9","search","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","BubbleSort_objectSpread","shape","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","MergeSort_objectSpread","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","BinarySearch_objectSpread","center","fluid","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","GIFControl","timeEllapsed","ss","ms","handleClick","gifLength","PhotoControl","md","Components_OptionsMenu","Components_SpeedBar","span","offset","Components_PhotoControl","Components_GIFControl","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","algorithmReducer_objectSpread","animationReducer","animationReducer_objectSpread","canvasReducer","canvasReducer_objectSpread","selectionReducer","selectionReducer_objectSpread","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.89b8e3a0.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.show || true){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","export const defaultGraphs = [\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":478,\"y\":145},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":713,\"y\":146},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":953,\"y\":151},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":477,\"y\":341},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":715,\"y\":345},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6\",\"value\":6},\"position\":{\"x\":939,\"y\":344},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-1-node-5\",\"weight\":12,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":0,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-2\",\"weight\":4,\"source\":\"node-3\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-5\",\"weight\":13,\"source\":\"node-2\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":7,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":9,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-6\",\"weight\":3,\"source\":\"node-2\",\"target\":\"node-6\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-3\",\"weight\":12,\"source\":\"node-6\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-5\",\"weight\":3,\"source\":\"node-6\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-2\",\"weight\":3,\"source\":\"node-4\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":688,\"y\":101},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":446,\"y\":207},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":917,\"y\":226},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":554,\"y\":369},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":746,\"y\":391},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-2-node-4\",\"weight\":11,\"source\":\"node-2\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":11,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-1\",\"weight\":13,\"source\":\"node-3\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":6,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":8,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-1\",\"weight\":14,\"source\":\"node-5\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-5\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":482,\"y\":245},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":714,\"y\":339},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":722,\"y\":159},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":986,\"y\":248},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-4-node-5\",\"weight\":6,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-3\",\"weight\":4,\"source\":\"node-1\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-4\",\"weight\":11,\"source\":\"node-3\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-5\",\"weight\":6,\"source\":\"node-3\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":3,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n];\r\n\r\n\r\n","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg({quality: 0.5});\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Object){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize(defaultGraphs[Math.floor(Math.random()*defaultGraphs.length)].elements);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: ' ', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: ' ', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport {insert, remove} from '../resources/pseudocodes/heap';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreatePopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position?: Object){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition,\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\t\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\t\t\t\tnode.style({\r\n\t\t\t\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tlayoutOptions.positions[node.id()+'-popper'] = { x: nx, y: ny+30}\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 3, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.heap.length() === 32) return;\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2],\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n\t\t\t\r\n\t\t\tthis.addNode(\"1\", val);\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2, 3],\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (n === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.addNode((i).toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance} from '../resources/pseudocodes/avl';\r\nimport { toHtml } from '@fortawesome/fontawesome-svg-core';\r\nimport { resolve } from 'q';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: this.remove,\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 3, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let promise = new Promise((resolve: (node?: CytoscapeElement | null) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          \r\n          resolve(prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let {selection} = this.props;\r\n    if(!selection){\r\n      this.props.dispatch({\r\n        type: actions.NO_ELEMENT_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: remove,\r\n      }\r\n    });\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = '';\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      setTimeout(() => \r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        }),\r\n        1000/this.props.speed\r\n      );\r\n    }else{\r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/3 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/3 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/3 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width()/1.5, this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: [], lines: [3]};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n      lines: (values[mid] < value ? [7, 8] : (values[mid] > value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      lines: [],\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/3 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n  photo: () => {},\r\n  gif: () => {},\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    photo: state.photo,\r\n    gif: state.gif,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props>{\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button'>Acciones</button>\r\n                <div className='actions-menu'>\r\n                  <OptionsMenu op={this.props.options}/>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={{span:1, offset:6}}>\r\n              <PhotoControl callback={this.props.photo}/>\r\n              </Col>\r\n            <Col md={1}>\r\n              <GIFControl callback={this.props.gif}/>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        pseudo: heap,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        pseudo: avl,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        pseudo: binarySearch,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.CLOSE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: false,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}