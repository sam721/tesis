{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Components/SpeedBar.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","utils/heap-utils.js","Components/InputHeapModal.tsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Components/ControlBar.tsx","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_gifBuffer","_takingGif","_interval","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","_this","arguments","undefined","download","jpg","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","elements","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","dispatch","payload","data","readAsText","handleClose","_this2","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","weight","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","nodes","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","position","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","target","_event$position","x","y","createNode","weighted","objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","action","options","takeJson","loadingGraph","parse","add","group","z-index","border-width","font-size","_this4","Math","floor","random","source","_this5","Components_UploadGraphModal","Components_InputModal","w","xs","min","max","TreeBar","insert","fluid","placeholder","handleValueChange","validateValue","Components_SpeedBar","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","Element","borderStyle","borderWidth","textAlign","class","HeapArray","cols","HeapArray_Element","header","map","_x","array","parseHeap","output","InputHeapModal","validateArray","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heap","lastValue","popper","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","grabbable","pannable","src","clear","stateValues","Components_InputHeapModal","v","Components_HeapArray","Components_TreeBar","takeGif","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","showSearchModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","nodePopper","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","bsearch","_getChildren21","_getChildren22","_this6","mode","_this7","search","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","match","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","ControlBar","edgeWeightInput","handleWeightChange","validateWeight","title","index_es","icon","faTrash","faTimes","faStopCircle","faPlayCircle","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","center","prevState","Components_InputArrayModal","Components_ControlBar","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","_prevProps","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","md","Components_OptionsMenu","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","initialState","reducer","store","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.409723d9.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, lines} = this.props;\r\n    let codelines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {codelines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        }else{\r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    console.log('Taking picture');\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 600) _this._gifBuffer.push(image);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      console.log(this._gifBuffer.length);\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  console.log(state.selection);\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(pos === commands.length) return;\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tconsole.error('No node selected');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tconsole.log(this.props);\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tconsole.error('No element selected');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true) return;\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation) return;\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation) return;\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0) return;\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: this.remove,\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation) return;\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    let promise = new Promise((resolve: (node?: CytoscapeElement | null) => void, reject) => {\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          resolve(prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = () => {\r\n    if(this.props.animation) return;\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      let w = edge.data('weight');\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n}\r\n\r\nexport default properties;","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport actions from '../Actions/actions'\r\n\r\nimport SpeedBar from './SpeedBar'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  changeWeight: (weight: number) => void,\r\n  speed: number,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  weight: string,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  })\r\n}\r\nclass ControlBar extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      weight: '',\r\n      animation: false,\r\n      speed: 0,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    console.log(this.props.selection);\r\n    if (this.props.selection && this.props.selection.type === 'edge') {\r\n      if (!prevProps.selection || prevProps.selection.id !== this.props.selection.id) {\r\n        this.setState({ weight: this.props.selection.weight });\r\n      }\r\n    }\r\n  }\r\n  validateWeight(weight: string) {\r\n    let regex = /^[0-9]*/;\r\n    if (weight && regex.test(weight)) {\r\n      this.props.changeWeight(parseInt(weight, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n  handleWeightChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ weight: e.currentTarget.value });\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.target.value,\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { selection } = this.props;\r\n    let edgeWeightInput = null;\r\n    if (selection && selection.type === 'edge' && this.props.weighted) {\r\n      edgeWeightInput = (\r\n        <Row>\r\n          <Col xs={6}>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              placeholder=\"peso\"\r\n              value={this.state.weight}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleWeightChange(e)} />\r\n          </Col>\r\n          <Col xs={6}>\r\n            <button onClick={() => this.validateWeight(this.state.weight)}>Cambiar</button>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.clearGraph} title=\"Limpiar grafo\">\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.remove} title=\"Eliminar elemento\">\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={6} style={{ textAlign: 'center' }}>\r\n            <button onClick={this.props.run} title=\"Reproducir\">\r\n              <FontAwesomeIcon icon={(this.props.animation ? faStopCircle : faPlayCircle)} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={2}> {edgeWeightInput}</Col>\r\n          <Col xs={2}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ControlBar);\r\n","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputArrayModal;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n    this.cy.center();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: parseInt(id, 10)*35,\r\n        y: 0,\r\n      }\r\n    });\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t<ControlBar\r\n\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/2,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/2,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    run: state.run,\r\n    options: state.options,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props>{\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className=\"dropup\">\r\n              <button className='dropdown-button'>Acciones</button>\r\n              <div className='actions-menu'>\r\n                <OptionsMenu op={this.props.options}/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <button className='dropdown-button' onClick={this.props.run}>Reproducir</button>\r\n          </Col>\r\n          <Col>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import actions from '../Actions/actions'\r\n\r\nimport BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nconst initialState = {\r\n  algorithm: 'BFS',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n      }\r\n\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.CLEAR_GRAPH:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: false,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n\r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}