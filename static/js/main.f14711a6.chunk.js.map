{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","Components/SpeedBar.tsx","Components/ControlBar.tsx","Components/GraphArray.tsx","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/Graph.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","Components/InputHeapModal.tsx","utils/heap-utils.js","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","i","length","push","CodeBlock_CodeLine","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","speed","xs","type","min","max","value","id","step","onChange","e","dispatch","payload","currentTarget","ControlBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","target","selection","weight","animation","prevProps","console","log","setState","test","changeWeight","parseInt","error","_this2","edgeWeightInput","weighted","placeholder","width","handleWeightChange","onClick","validateWeight","fluid","clearGraph","title","index_es","icon","faTrash","remove","faTimes","textAlign","run","faStopCircle","faPlayCircle","Components_SpeedBar","Element","borderStyle","borderWidth","class","GraphArray","cols","Array","fill","GraphArray_Element","array","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","gifshot","MediaRecorder","_gifBuffer","_takingGif","_interval","downloadGif","buffer","createGIF","images","gifWidth","gifHeight","frameDuration","obj","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","arguments","undefined","download","jpg","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","elements","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","data","readAsText","handleClose","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Styles","popper","cytoscape","autopanOnDrag","use","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","showModal","layout","stop","nodeStyle","NODE","edgeStyle","EDGE","nodes","removeNode","node","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","nodeDom","innerHTML","name","shift","pop","position","refreshLayout","setTimeout","runButton","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","handleClickViewport","event","_event$position","x","y","createNode","showDialog","objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","initialize","action","loadingGraph","parse","nodePopper","add","group","div","scheduleUpdate","Math","floor","random","source","_this3","edgeWeight","Components_UploadGraphModal","Components_GraphArray","Components_ControlBar","takeGif","takeJson","TreeBar","insert","handleValueChange","validateValue","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","HeapArray","HeapArray_Element","header","map","_x","InputHeapModal","setStepInputRef","validateArray","handleCancel","element","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","heap","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","grabbable","pannable","src","lastValue","_this4","clear","stateValues","_this5","Components_InputHeapModal","Components_HeapArray","Components_TreeBar","v","output","parseHeap","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","update","_getChildren","_getChildren2","slicedToArray","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","prev","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","_this6","anc","newChild","inorderSuccessor","suc","mode","_this7","Components_InputAVLModal","testRotation","root","parseAVL","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","connectedEdges","t","col","w","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","bcolor","swap","InputArrayModal","handleAccept","currentValues","ref","Bubblesort","shape","center","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","cmd","p","mid","slice","li","ri","visibility","Mergesort","_prevProps","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","NavLink","items","list","to","Sidebar_HashRouter","App","Components_Sidebar","src_Editor","Components_AlgorithmInfo","Boolean","location","hostname","match","dijkstra","kruskal","bubblesort","mergesort","prim","initialState","reducer","store","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-width","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.f14711a6.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  current: number,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  line: number,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    current: state.line,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, current} = this.props;\r\n    let lines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        lines.push(<CodeLine line = {code[i]} current = {i === current}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {lines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    \r\n}\r\nexport default actions;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport actions from '../Actions/actions'\r\n\r\nimport SpeedBar from './SpeedBar'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  changeWeight: (weight: number) => void,\r\n  speed: number,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  weight: string,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  })\r\n}\r\nclass ControlBar extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      weight: '',\r\n      animation: false,\r\n      speed: 0,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    console.log(this.props.selection);\r\n    if (this.props.selection && this.props.selection.type === 'edge') {\r\n      if (!prevProps.selection || prevProps.selection.id !== this.props.selection.id) {\r\n        this.setState({ weight: this.props.selection.weight });\r\n      }\r\n    }\r\n  }\r\n  validateWeight(weight: string) {\r\n    let regex = /^[0-9]*/;\r\n    if (weight && regex.test(weight)) {\r\n      this.props.changeWeight(parseInt(weight, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n  handleWeightChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ weight: e.currentTarget.value });\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.target.value,\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    let { selection } = this.props;\r\n    let edgeWeightInput = null;\r\n    if (selection && selection.type === 'edge' && this.props.weighted) {\r\n      edgeWeightInput = (\r\n        <Row>\r\n          <Col xs={6}>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              placeholder=\"peso\"\r\n              value={this.state.weight}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleWeightChange(e)} />\r\n          </Col>\r\n          <Col xs={6}>\r\n            <button onClick={() => this.validateWeight(this.state.weight)}>Cambiar</button>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.clearGraph} title=\"Limpiar grafo\">\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={1} >\r\n            <button onClick={this.props.remove} title=\"Eliminar elemento\">\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={6} style={{ textAlign: 'center' }}>\r\n            <button onClick={this.props.run} title=\"Reproducir\">\r\n              <FontAwesomeIcon icon={(this.props.animation ? faStopCircle : faPlayCircle)} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={2}> {edgeWeightInput}</Col>\r\n          <Col xs={2}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ControlBar);\r\n","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%', height: '30px'}} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst GraphArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    if(array[i]) cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(array);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default GraphArray;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        }else{\r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    console.log('Taking picture');\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 600) _this._gifBuffer.push(image);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      console.log(this._gifBuffer.length);\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst popper = require('cytoscape-popper');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ncytoscape.use(popper);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(pos === commands.length) return;\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, line} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\tlet nodeDom = document.getElementById(node + 'popper');\r\n\t\t\t\t\t\tif (nodeDom && distance !== undefined) nodeDom.innerHTML = distance[index];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(line != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {line}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tconsole.error('No node selected');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tconsole.log(this.props);\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tconsole.error('No element selected');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\r\n\t\tlet node = this.cy.getElementById(nodeId);\r\n\r\n\t\tlet popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', nodeId + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n\t\tnode.on('position', update);\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true) return;\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tshowDialog = () => {\r\n\t\tthis.setState({showModal: !this.state.showModal});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={this.showDialog}/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<GraphArray array={this.state.values}/>\r\n\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeJson(this.cy)}>Test json</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({showModal: true})}>Test input</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation) return;\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove() {\r\n\t\tif(this.props.animation) return;\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0) return;\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation) return;\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  remove() {\r\n    if(this.props.animation) return;\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <Row id=\"canvas\" />\r\n        <TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n        <button onClick = {() => this.testRotation(0)}>Test left rotation</button>\r\n        <button onClick = {() => this.testRotation(1)}>Test right rotation</button>\r\n        <button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n        <button onClick={() => this.setState({show: true})}>Test AVL input</button>\r\n        <button onClick={() => parseAVL(this.cy.getElementById(this.treeRoot))}>Test AVL output</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{line: 0, duration: 250}, {line: 1, duration: 250}];\r\n\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tline: 3,\r\n\t\t}\r\n\t)\r\n\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tline: 4,\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ line: 5});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\tline: 6,\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\r\n\t\t\t\tline: 7,\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tline: 8,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ line: 9}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tline: 10,\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tline: 11,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\tcommands.push({\r\n\t\tline: 0,\r\n\t});\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tline: 1,\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tline: 2,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tline: 3,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tline: 4,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tline: 5,\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{line: 7, duration: 250},\r\n\t\t{line: 8, duration: 250},\r\n\t\t{line: 9, duration: 250},\r\n\t\t{line: 10},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({line: 0, duration: 250}, {line: 1, duration: 250});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      line: 3,\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({line: 4});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        line: 5,\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            line: 6,\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            line: 7,\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n                line: 8,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              line: 8,\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n          commands.push({line: 9});\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              line: 8,\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [{line: 0}];\r\n  commands.push(\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      line: 1,\r\n    },\r\n    {\r\n      line: 2, duration: 1000,\r\n    },\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({line: 6, duration: 1000}, {line: 7, duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'green'}],\r\n        duration: 1000,\r\n      });\r\n      part_of_tree[edgeId]=true;\r\n    }\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        line: 8,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    commands.push({line:9});\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        line: 10,\r\n      });\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        line: 11,\r\n      });\r\n      commands.push({line: 12});\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      let w = edge.data('weight');\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          line: 13,\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      line: 2,\r\n    },\r\n    {\r\n      line: 3,\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      line: 4,\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          line: 6,\r\n        },\r\n        {\r\n          line: 7,\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        line: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [{eles: [], style: [], line: 0}];\r\n  for(let j = 0; j < n; j++){\r\n    for(let i = 0; i < 3; i++) commands.push({eles: [], style: [], line: i+1});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          line: 4,\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          line: (swap ? 5 : 3)\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], line: 3});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        line:7\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputArrayModal;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n    this.cy.center();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: parseInt(id, 10)*35,\r\n        y: 0,\r\n      }\r\n    });\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, line} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && line != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tline,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t<ControlBar\r\n\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t<button onClick={() => this.setState({show: true})}>Change array</button>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    if(start === 0 && l === 0) console.log(h);\r\n    let cmd = {\r\n      nodes: [],\r\n      line: 0,\r\n      duration: 1000,\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      cmd.nodes.push({\r\n        id: (start + index).toString(),\r\n        position: {\r\n          x: p - (n-1)*(35/2) + 35*(index),\r\n          y: h,\r\n        }\r\n      })\r\n    });\r\n    commands.push(cmd);\r\n    commands.push({nodes: [], line: 1});\r\n    if(n === 1){\r\n      commands.push({nodes: [], line: 2});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], line:3});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes: [], line:4});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], line: 5});\r\n    commands.push({nodes: [], line: 7});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], line: 10});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], line: 11});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id, position: {x: pos, y: h}}];\r\n        cmd.line = 12;\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], line: 13});\r\n        cmd.nodes = [{id: right[ri].id, position: {x: pos, y: h}}];\r\n        values[i] = right[ri++];\r\n        cmd.line=14;\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], line: 15});\r\n    commands.push({nodes: [], line: 5});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/2,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/2,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, line} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach(node => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tlayoutOptions.positions[node.id] = node.position;\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && line != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {line},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Change array</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","// @flow\nimport React from 'react';\nimport './views/css/App.css';\nimport './views/css/codeblock.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport AlgorithmInfo from './Components/AlgorithmInfo'\nimport Editor from './Editor';\nimport Sidebar from './Components/Sidebar';\nimport CodeBlock from './Components/CodeBlock';\nimport { connect } from 'react-redux';\nimport BFS from './resources/pseudocodes/BFS';\nimport BFS_table from './resources/value_tables/BFS_table';\n\nconst mapStateToProps = state => ({\n  algorithm: state.algorithm,\n})\n\nclass App extends React.Component {\n  /*\n  render() {\n    const props = {\n      color: ['Gris', 'Blanco', 'Gris', 'Negro', 'Gris'],\n      u: 0,\n      v: 3,\n      inicio: 1,\n    }\n    return (\n      <body>\n        <BFS_table props={props}/>\n      </body>\n    );\n  }\n  */\n  \n  render() {\n    return (\n      <body>\n        <div style={{display: 'table', width: '100%'}}>\n          <Container fluid={true}>\n            <Row>\n              <Col xs={2} className='sidebar'>\n                <Sidebar />\n              </Col>\n              <Col xs={7}>\n                <Editor algorithm={this.props.algorithm} />\n              </Col>\n              <Col xs={3}>\n                <AlgorithmInfo algorithm={this.props.algorithm} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Arreglo de aristas E):', ind: 0},\r\n  {text: 'Peso=0', ind: 1},\r\n  {text: 'Arbol T=Vacio', ind: 1},\r\n  {text: 'Ordenar por peso E', ind : 1},\r\n  {text: 'Para cada arista (u, v, w) en E:', ind: 1},\r\n  {text: 'Si no hay camino de u a v en T:', ind: 2},\r\n  {text: 'Añadir (u, v, w) a T', ind: 3},\r\n  {text: 'Peso=Peso+w', ind: 3},\r\n  {text: 'Retornar (T,Peso)', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import actions from '../Actions/actions'\r\n\r\nimport BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nconst initialState = {\r\n  algorithm: 'BFS',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  line: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: BFS,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: DFS,\r\n      }\r\n    \r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: dijkstra,\r\n      }\r\n    \r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: kruskal,\r\n      }\r\n      \r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: prim,\r\n      }\r\n    \r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        speed: 1.0,\r\n      }\r\n    \r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        speed: 1.0,\r\n      }\r\n    \r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: bubblesort,\r\n      }\r\n      \r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        speed: 1.0,\r\n        pseudo: mergesort,\r\n      }\r\n\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n    \r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        line: null,\r\n      }\r\n    \r\n    case actions.CLEAR_GRAPH:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: false,\r\n      }\r\n    \r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n    \r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n    \r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        line: action.payload.line,\r\n      }\r\n\r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n    \r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}