{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","resources/default_examples/defaultGraphs.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Algorithms/DS/PriorityQueue.js","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/GIFControl.tsx","Components/PhotoControl.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","_objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","defaultGraphs","elements","nodes","data","id","value","position","x","y","group","removed","selected","selectable","locked","grabbable","classes","edges","weight","source","target","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","Object","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","quality","takeGif","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","encodeURIComponent","input","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","payload","readAsText","handleClose","show","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","autolock","_commands","eles","distance","duration","inst","forEach","ele","visibility","name","shift","pop","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","createNode","weighted","Graph_objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","Math","floor","random","action","photo","gif","options","takeJson","loadingGraph","parse","cancelGif","add","z-index","border-width","font-size","_this4","_this5","Components_UploadGraphModal","Components_InputModal","w","PriorityQueue","_comp","_eq","_data","isEmpty","parent","_ref","l","r","_ref2","_ref3","_ref4","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","layoutOptions","positions","padding","animate","animationDuration","Heap","class","showInsertModal","match","Heap_objectSpread","lastValue","addNode","autoungrabify","output","parseHeap","pannable","layoutProcessing","sep","getHeight","max","vw","vh","setSep","nx","ny","val","src","clear","stateValues","_this6","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","min","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","AVL","treeRoot","showSearchModal","showRemoveModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","popper","nodePopper","AVL_objectSpread","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","promise","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","first","second","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","getNext","_this7","bsearch","_getChildren21","_getChildren22","_this8","mode","_this9","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","BubbleSort_objectSpread","shape","prevState","Components_InputArrayModal","mergeSortAnimation","mid","mergeSort","h","toConsumableArray","nofocus","shadows","rshadows","cmd","p","slice","li","ri","MergeSort_objectSpread","zIndex","addShadow","shadow","Mergesort","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","BinarySearch_objectSpread","center","fluid","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","GIFControl","timeEllapsed","ss","ms","handleClick","gifLength","PhotoControl","algoDict","showActions","md","Components_OptionsMenu","Components_SpeedBar","span","offset","Components_PhotoControl","Components_GIFControl","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","binarySearch","algorithmReducer","algorithmReducer_objectSpread","animationReducer","animationReducer_objectSpread","showPseudo","canvasReducer","canvasReducer_objectSpread","selectionReducer","selectionReducer_objectSpread","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.1bffee73.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","export const defaultGraphs = [\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":478,\"y\":145},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":713,\"y\":146},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":953,\"y\":151},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":477,\"y\":341},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":715,\"y\":345},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6\",\"value\":6},\"position\":{\"x\":939,\"y\":344},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-1-node-5\",\"weight\":12,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":0,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-2\",\"weight\":4,\"source\":\"node-3\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-5\",\"weight\":13,\"source\":\"node-2\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":7,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":9,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2-node-6\",\"weight\":3,\"source\":\"node-2\",\"target\":\"node-6\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-3\",\"weight\":12,\"source\":\"node-6\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-6-node-5\",\"weight\":3,\"source\":\"node-6\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-2\",\"weight\":3,\"source\":\"node-4\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":688,\"y\":101},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-2\",\"value\":2},\"position\":{\"x\":446,\"y\":207},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":917,\"y\":226},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":554,\"y\":369},\"group\":\"nodes\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":746,\"y\":391},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-2-node-4\",\"weight\":11,\"source\":\"node-2\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-5\",\"weight\":14,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-3\",\"weight\":11,\"source\":\"node-5\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-1\",\"weight\":13,\"source\":\"node-3\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-2\",\"weight\":6,\"source\":\"node-1\",\"target\":\"node-2\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4-node-1\",\"weight\":8,\"source\":\"node-4\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5-node-1\",\"weight\":14,\"source\":\"node-5\",\"target\":\"node-1\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-5\",\"weight\":2,\"source\":\"node-1\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":false,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n  {\"elements\":{\"nodes\":[{\"data\":{\"id\":\"node-1\",\"value\":1},\"position\":{\"x\":482,\"y\":245},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3\",\"value\":3},\"position\":{\"x\":714,\"y\":339},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-4\",\"value\":4},\"position\":{\"x\":722,\"y\":159},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-5\",\"value\":5},\"position\":{\"x\":986,\"y\":248},\"group\":\"nodes\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}],\"edges\":[{\"data\":{\"id\":\"node-4-node-5\",\"weight\":6,\"source\":\"node-4\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-3\",\"weight\":4,\"source\":\"node-1\",\"target\":\"node-3\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-4\",\"weight\":11,\"source\":\"node-3\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-3-node-5\",\"weight\":6,\"source\":\"node-3\",\"target\":\"node-5\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"},{\"data\":{\"id\":\"node-1-node-4\",\"weight\":3,\"source\":\"node-1\",\"target\":\"node-4\"},\"position\":{\"x\":0,\"y\":0},\"group\":\"edges\",\"removed\":false,\"selected\":true,\"selectable\":true,\"locked\":false,\"grabbable\":true,\"classes\":\"\"}]}},\r\n];\r\n\r\n\r\n","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg({quality: 0.5});\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\r\n\tinitialize(elements: Object){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize(defaultGraphs[Math.floor(Math.random()*defaultGraphs.length)].elements);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(!this._isMounted) return;\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport {insert, remove} from '../resources/pseudocodes/heap';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreatePopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position?: Object){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition,\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\t\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\t\t\t\tnode.style({\r\n\t\t\t\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t\t\t\t'color': 'black',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tlayoutOptions.positions[node.id()+'-popper'] = { x: nx, y: ny+30}\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.heap.length() === 32) return;\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2],\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n\t\t\t\r\n\t\t\tthis.addNode(\"1\", val);\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.SHOW_PSEUDO,\r\n\t\t});\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\tpayload: {\r\n\t\t\t\tlines: [0, 1, 2, 3],\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (n === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.addNode((i).toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='fixed-struct'/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('resize', () => this.refreshLayout(false));\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: () => this.setState({showRemoveModal: true}),\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  async rotateLeft(x: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [y, C] = getChildren(x);\r\n        if(y == null) return;\r\n        const [A, B] = getChildren(y);\r\n        this.removeEdge(x.id(), y.id());\r\n        if(B){\r\n          this.removeEdge(y.id(), B.id());\r\n          this.addEdge(x.id(), B.id());\r\n          //B.data('prev', x.id());\r\n        }\r\n        const prev = x.data('prev');\r\n        this.addEdge(y.id(), x.id());\r\n\r\n        if(this.treeRoot !== x.id()){\r\n          this.removeEdge(prev, x.id());\r\n          this.addEdge(prev, y.id());\r\n          //y.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = y.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //x.data('prev', y.id());\r\n\r\n        x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n        y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n        x.data('balance', getHeight(C)-getHeight(B));\r\n        y.data('balance', getHeight(x) - getHeight(A));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n\r\n  async rotateRight(y: CytoscapeElement){\r\n    let promise = new Promise((resolve: () => void, reject) => {\r\n        const [A, x] = getChildren(y);\r\n        if(x == null) return;\r\n        const [B, C] = getChildren(x);\r\n        this.removeEdge(y.id(), x.id());\r\n        if(B){\r\n          this.removeEdge(x.id(), B.id());\r\n          this.addEdge(y.id(), B.id());\r\n          //B.data('prev', y.id());\r\n        }\r\n        const prev = y.data('prev');\r\n        this.addEdge(x.id(), y.id());\r\n        \r\n        if(this.treeRoot !== y.id()){\r\n          this.removeEdge(prev, y.id());\r\n          this.addEdge(prev, x.id());\r\n          //x.data('prev', prev);\r\n        }else{\r\n          this.treeRoot = x.id();\r\n          console.log(this.treeRoot);\r\n        }\r\n        //y.data('prev', x.id());\r\n\r\n        y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n        x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n        y.data('balance', getHeight(B) - getHeight(A));\r\n        x.data('balance', getHeight(C) - getHeight(y));\r\n        this.refreshLayout();\r\n        setTimeout(resolve, 1000/this.props.speed);\r\n      }\r\n    );\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        let first = () => new Promise((resolve)=>{resolve()}), second = () => new Promise((resolve) => {resolve()});\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n            first = () => this.rotateRight(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n            first = () => this.rotateLeft(right);\r\n            second = () => this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0){\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [4, 5]}});\r\n            first = () => this.rotateLeft(node);\r\n          }else{\r\n            this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [8, 9]}});\r\n            first = () => this.rotateRight(left);\r\n            second = () => this.rotateLeft(node);\r\n          }\r\n        }else this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [1]}});\r\n        \r\n        first().then(() => {\r\n          second().then(() => {\r\n            console.log('hello');\r\n            node.style({\r\n              'background-color': 'white',\r\n              'color': 'black',\r\n            })\r\n            if(node.id() === this.treeRoot){\r\n              resolve();\r\n              return;\r\n            }   \r\n            node = this.cy.getElementById(node.data('prev'));\r\n            node.style({\r\n              'background-color': 'red',\r\n              'color': 'black',\r\n            })\r\n            //console.log(node.id());\r\n            setTimeout(recursion, 1000/this.props.speed);\r\n          })\r\n        });\r\n      }  \r\n      this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: insert,\r\n      }\r\n    });\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    let n = this.cy.nodes().length + 1;\r\n    let newNode:CytoscapeElement;\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              this.props.dispatch({\r\n                type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n              })\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n            if(prev){\r\n              this.addNode(id.toString(), value, 0, 0, prev.position());\r\n              newNode = this.cy.getElementById(id.toString());\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.addNode(id.toString(), value);\r\n        newNode = this.cy.getElementById(id.toString());\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload:{\r\n        pseudo: search,\r\n      }\r\n    })\r\n    let promise = new Promise((resolve: (node: CytoscapeElement) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [2]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [5,6]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [3,4]}\r\n            });\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          if(!found){\r\n            this.props.dispatch({\r\n              type: actions.CHANGE_LINE,\r\n              payload: {lines: [1]},\r\n            });\r\n            setTimeout(reject, 1000/ this.props.speed);\r\n          }\r\n          setTimeout(resolve, 1000/this.props.speed, prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = (value: number) => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const searchPromise = this.search(value);\r\n    searchPromise.then((node?: CytoscapeElement) => {\r\n      if(node === undefined) return;\r\n      let anc = '';\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_PSEUDO,\r\n        payload: { pseudo: remove}\r\n      });\r\n      if(isLeaf(node)){\r\n        this.props.dispatch({ type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n        if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n        if(anc !== '') this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        else this.props.dispatch({type: actions.ANIMATION_END});\r\n      }else if(node.outgoers('node').length === 1){\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n        if(node.id() === this.treeRoot){\r\n          this.treeRoot = node.outgoers('node')[0].id();\r\n          anc = this.treeRoot;\r\n          this.removeNode(node);\r\n          this.refreshLayout();\r\n        }else{\r\n          let prev = '';\r\n          prev = node.data('prev');\r\n          const newChild = node.outgoers('node')[0];\r\n          newChild.data(prev);\r\n          this.removeNode(node);\r\n          this.addEdge(prev, newChild.id());\r\n          anc = newChild.id();\r\n          this.refreshLayout();\r\n        }\r\n        setTimeout(() => \r\n          this.balance(this.cy.getElementById(anc)).then(() => {\r\n            this.props.dispatch({type: actions.ANIMATION_END});\r\n          }),\r\n          1000/this.props.speed\r\n        );\r\n      }else{\r\n        this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6]}});\r\n        let promise = this.inorderSuccessor(node);\r\n        promise.then((suc: CytoscapeElement) => {\r\n          this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [7, 8]}});\r\n          node.data('value', suc.data('value'));\r\n          suc.data('value', value);\r\n          setTimeout(\r\n            () => {\r\n                if(!isLeaf(suc)){\r\n                  const right = getChildren(suc)[1];\r\n                  right.data('prev', suc.data('prev'));\r\n                  this.addEdge(suc.data('prev'), right.id());\r\n                }\r\n                anc = suc.data('prev');\r\n                this.removeNode(suc);\r\n                this.refreshLayout();\r\n                setTimeout(() => \r\n                  this.balance(this.cy.getElementById(anc)).then(() => {\r\n                    this.props.dispatch({type: actions.ANIMATION_END});\r\n                  }),\r\n                  1000/this.props.speed\r\n                );\r\n                node.style(Styles.NODE);\r\n              },\r\n              1000/this.props.speed);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='fixed-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions, shadows} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(shadows){\r\n\t\t\t\t\tshadows.forEach(shadow => {\r\n\t\t\t\t\t\tif(shadow.value === '+') this.addShadow(shadow.id, shadow.position);\r\n\t\t\t\t\t\telse this.cy.remove('node[id=\"'+shadow.id+'\"]');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='fixed-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: [], lines: [3]};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n      lines: (values[mid] < value ? [7, 8] : (values[mid] > value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      lines: [],\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.25\"\r\n          max=\"2\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.25\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n  photo: () => {},\r\n  gif: () => {},\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n    run: state.run,\r\n    options: state.options,\r\n    photo: state.photo,\r\n    gif: state.gif,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={2}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <Col md={{span:1, offset:6}}>\r\n              <PhotoControl callback={this.props.photo}/>\r\n              </Col>\r\n            <Col md={1}>\r\n              <GIFControl callback={this.props.gif}/>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        pseudo: heap,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        pseudo: avl,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        pseudo: binarySearch,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.CLOSE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: false,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nimport { number } from 'prop-types';\r\n\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}"],"sourceRoot":""}