{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Components/Graph.tsx","Components/SpeedBar.tsx","Components/TreeBar.tsx","Algorithms/DS/PriorityQueue.js","Components/HeapArray.tsx","utils/heap-utils.js","Components/InputHeapModal.tsx","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/GIFControl.tsx","Components/PhotoControl.tsx","Components/Footer.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","react_default","a","createElement","style","backgroundColor","display","paddingLeft","ind","toString","text","CodeBlock","_this$props","this","code","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","className","React","Component","state","pseudo","AlgorithmInfo","Container","height","Row","Col","algorithm","Components_CodeBlock","actions","SELECT_BFS","SELECT_DFS","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_END","CLEAR_GRAPH","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","AVL_NOT_FOUND_INFO","STARTING_ALGORITHM_EXECUTION_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","SORTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_gifBuffer","_takingGif","_interval","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","body","appendChild","click","removeChild","cy","_this","arguments","undefined","download","jpg","clearInterval","setInterval","takePicture","graphCy","json","graph","JSON","stringify","elements","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","dispatch","payload","data","readAsText","handleClose","_this2","show","Fragment","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","e","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","ref","onChange","selection","weight","Styles","cytoscape","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","clearGraph","animation","nodes","removeNode","node","remove","removeNodePopper","removeEdge","edge","executeAnimation","commands","background-color","color","pos","step","edges","autolock","_commands","eles","distance","duration","inst","forEach","ele","index","visibility","name","shift","pop","position","fill","refreshLayout","setTimeout","speed","runButton","removePoppers","createPopper","Promise","resolve","reject","execute","then","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","target","_event$position","x","y","createNode","weighted","objectSpread","EDGE_WEIGHTED","EDGE_DIRECTED","container","selector","headless","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","wheelSensitivity","pixelRatio","on","enabled","makeLayout","_this3","initialize","action","photo","gif","takeGif","options","takeJson","loadingGraph","parse","cancelGif","add","group","z-index","border-width","font-size","_this4","Math","floor","random","source","_this5","Components_UploadGraphModal","Components_InputModal","w","xs","min","max","TreeBar","insert","fluid","placeholder","handleValueChange","validateValue","Components_SpeedBar","PriorityQueue","_comp","_eq","_data","isEmpty","classes","parent","_ref","l","r","_ref2","_ref3","_ref4","Element","borderStyle","borderWidth","textAlign","class","HeapArray","cols","HeapArray_Element","header","map","_x","array","parseHeap","output","InputHeapModal","validateArray","n","left","right","Infinity","validateHeap","changeArray","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heap","lastValue","autoungrabify","popper","layoutProcessing","sep","getHeight","vw","vh","setSep","nx","ny","val","grabbable","pannable","src","clear","stateValues","Components_InputHeapModal","v","Components_HeapArray","Components_TreeBar","isLeaf","getChildren","lca","InputAVLModal","addNode","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","AVL","treeRoot","showSearchModal","anc","prev","newChild","inorderSuccessor","suc","update","root","_getChildren","_getChildren2","slicedToArray","parseAVL","nodePopper","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","nodeDom","innerHTML","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","found","promise","getNext","bsearch","_getChildren21","_getChildren22","_this6","mode","_this7","search","Components_InputAVLModal","Queue","BFS","param","q","front","next","line-color","target-arrow-color","DFS","visited","Dijkstra","pq","dist","_loop","_pq$top","top","nextId","prevDistance","Prim","part_of_tree","line-style","match","connectedEdges","t","col","DisjointSet","_parent","find","nodeX","nodeY","Kruskal","sorted","ds","connected","join","properties","BubbleSort","MergeSort","BinarySearch","bcolor","swap","InputArrayModal","currentValues","Bubblesort","shape","prevState","Components_InputArrayModal","mergeSortAnimation","mergeSort","h","toConsumableArray","focus","nofocus","cmd","p","mid","slice","li","ri","Mergesort","_prevProps","Sort","defaultStyle","lo","hi","showInputModal","center","HashRouter","Route","Editor","path","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","NavLink","items","list","to","Sidebar_HashRouter","OptionsMenu","op","links","option","GIFControl","interval","counter","recording","ss","handleClick","PhotoControl","md","Components_OptionsMenu","span","offset","Components_PhotoControl","Components_GIFControl","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bubblesort","mergesort","prim","algorithmReducer","animationReducer","canvasReducer","selectionReducer","createNotification","title","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","notificationsReducer","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","label","text-valign","text-halign","curve-style","target-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.0dac2070.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\n\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}>,\r\n  lines: Array<number>,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean}) => {\r\n  const {line, current} = props;\r\n  return <span style={{backgroundColor: (current ? 'lightgray' : 'white'), display: 'block', paddingLeft: (line.ind *5).toString() + '%'}}>{line.text}</span>\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    const {code, lines} = this.props;\r\n    let codelines = [];\r\n    if(code){\r\n      for(let i = 0; i < code.length; i++){\r\n        codelines.push(<CodeLine line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n      }\r\n    }\r\n    return (\r\n      <div className='codeblock'>\r\n        {codelines}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n\r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    STARTING_ALGORITHM_EXECUTION_INFO: 'STARTING_ALGORITHM_EXECUTION',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    SORTING_BINARY_SEARCH_INFO: 'SORTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        }else{\r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    console.log('Taking picture');\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 600) _this._gifBuffer.push(image);\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._interval = setInterval(this.takePicture, 100, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      console.log(this._gifBuffer.length);\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(cy){\r\n    const graphCy = cy.json();\r\n    const graph = JSON.stringify({\r\n      elements: graphCy.elements,\r\n    });\r\n    \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(cy){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        this.props.dispatch({\r\n          type: actions.LOAD_GRAPH,\r\n          payload: {\r\n            data: content,\r\n          }\r\n        });\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  console.log(state.selection);\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nimport ControlBar from './ControlBar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport GraphArray from './GraphArray';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t}\r\n\r\n\tinitialize(elements: Array<Object>){\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tthis.removePoppers();\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.removeButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\t\t\trun: this.weightButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Limpiar canvas',\r\n\t\t\t\t\t\trun: this.clearGraph,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\t\t\trun: () => this._mediaRecorder.takeJson(this.cy),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data).elements;\r\n\t\t\tif(elements)\r\n\t\t\t\tthis.initialize(JSON.parse(this.props.data).elements);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_ALGORITHM_EXECUTION_INFO,\r\n\t\t});\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif(pos === commands.length){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values: Array()});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, distance, style, duration, inst, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(eles){\r\n\t\t\t\t\teles.forEach((node, index) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (distance !== undefined){\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').style({visibility: 'visible'});\r\n\t\t\t\t\t\t\tthis.cy.getElementById(node+'-popper').data('value', distance[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif(inst){\r\n\t\t\t\t\tlet {values} = this.state;\r\n\t\t\t\t\tinst.forEach(ele => {\r\n\t\t\t\t\t\tif(ele.name === 'push'){\r\n\t\t\t\t\t\t\tconst {data} = ele;\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\tvalues.push(data);\r\n\t\t\t\t\t\t}else if(ele.name === 'shift'){\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}else if(ele.name === 'pop'){\r\n\t\t\t\t\t\t\tvalues.pop();\r\n\t\t\t\t\t\t}else if(ele.name === 'change_element'){\r\n\t\t\t\t\t\t\tlet {position} = ele;\r\n\t\t\t\t\t\t\tif(position != null) values[position] = ele.data;\r\n\t\t\t\t\t\t}else if(ele.name === 'fill'){\r\n\t\t\t\t\t\t\tvalues.fill(ele.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(this._isMounted){\r\n\t\t\t\t\t\tthis.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(lines != null && this._isMounted){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\tthis.setState({values: Array()});\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\tthis.removePoppers();\r\n\t\t\tthis.cy.autolock(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== 'Kruskal' && this.props.algorithm !== 'Prim') {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands: Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style('background-color', 'white');\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.05\"\r\n          max=\"5\"\r\n          value={props.speed}\r\n          id=\"myRange\"\r\n          step=\"0.05\"\r\n          onChange={handleChange}>\r\n        </input>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faTimes, faPlayCircle, faStopCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport SpeedBar from './SpeedBar';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: any, //CAMBIAR\r\n  weighted: boolean,\r\n  run: () => void,\r\n  remove: () => void,\r\n  clearGraph: () => void,\r\n  insert: (value: number) => void,\r\n}\r\n\r\ntype State = {\r\n  algorithm: string,\r\n  animation: Boolean,\r\n  selection: Object,\r\n  value: string,\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return ({\r\n    algorithm: state.algorithm,\r\n    selection: state.selection,\r\n    animation: state.animation,\r\n  })\r\n}\r\n\r\n\r\nclass TreeBar extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm: '',\r\n      selection: {},\r\n      value: '',\r\n      animation: false,\r\n    }\r\n  }\r\n\r\n  validateValue(value: string) {\r\n    let regex = /^-?[0-9]*/;\r\n    if (value && regex.test(value)) {\r\n      this.props.insert(parseInt(value, 10));\r\n    } else {\r\n      console.error('No number');\r\n    }\r\n  }\r\n\r\n  handleValueChange(e: React.ChangeEvent<HTMLInputElement>){\r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='ControlBar'>\r\n        <Row className='vertical-align'>\r\n          <Col xs={3}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"valor\"\r\n              value={this.state.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleValueChange(e)} />\r\n          </Col> \r\n          <Col xs={3}>\r\n            <button onClick={() => this.validateValue(this.state.value)}>\r\n              Insertar\r\n            </button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <button onClick={() => this.props.remove()}>Eliminar</button>\r\n          </Col>\r\n          <Col xs={3}>\r\n            <SpeedBar/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TreeBar);\r\n","class PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [{ 'background-color': 'Chartreuse', 'color': 'black' }],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' },\r\n\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._comp(l, r) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if (!this._comp(l, r) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [{ 'background-color': '#FF9494', 'color': 'black' }],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'white', 'color': 'black' },\r\n\t\t\t\t\t\t\t\t\t\t{ 'background-color': 'black', 'color': 'white' }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import React from 'react';\r\nimport { Row, Col} from 'react-bootstrap';\r\n\r\n\r\ntype ElementProps = {\r\n  value: number | null,\r\n  class?: string,\r\n  \r\n}\r\ntype Props = {\r\n  array: Array<ElementProps>\r\n}\r\n\r\nconst Element = (props: ElementProps) => {\r\n  return (\r\n    <td style={{ borderStyle: 'solid', borderWidth: '2px', textAlign: 'center', width: '3.125%' }} className={props.class}>\r\n      {props.value}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst HeapArray = (props: Props) => {\r\n  const cols = new Array(32).fill(<Element value={null} />);\r\n  const header = (new Array(32)).fill(0).map((_x, index) => <th style={{textAlign: 'center'}}>{index}</th>);\r\n  const { array } = props;\r\n\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    cols[i] = <Element value={array[i].value} class={array[i].class} />\r\n  }\r\n\r\n  console.log(cols);\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <table style={{ width: '100%' }}>\r\n          <tbody>\r\n            <tr style={{ width: '100%' }}>\r\n              {cols}\r\n            </tr>\r\n            <tr>\r\n              {header}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HeapArray;","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log(values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.map(element => element.value).toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }\r\n    } else {\r\n      console.error('No number');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputHeapModal;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container} from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: {[id: string]:{x: number, y:number}},\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions:options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<Element>,\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state:storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: [{value: 0, class: 'heap-default'}],\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theap = new PriorityQueue((x, y) => x <= y);\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Insertar',\r\n\t\t\t\t\t\trun: () => this.setState({showInsertModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Eliminar',\r\n\t\t\t\t\t\trun: this.remove,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\t\t\trun: () => parseHeap(this.state.values),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t}\r\n\r\n\texecuteAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet {values} = this.state;\r\n\r\n\t\t\t\t\tvalues = values.map(ele => { return {...ele, class:'heap-default'}});\r\n\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, classes} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst {values} = this.state;\r\n\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tconst {values} = this.state;\r\n\t\t\t\t\t\tvalues[id].value = data[index].value;\r\n\t\t\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(classes !== undefined){\r\n\t\t\t\t\t\tconst id = parseInt(ele, 10);\r\n\t\t\t\t\t\tvalues[id].class = classes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif(this._isMounted) this.setState({values});\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\r\n\trefreshLayout() {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tinsert(val = 0) {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\t\tif(this.cy.nodes().length === 31) return;\r\n\t\tif (this.cy.nodes().length === 0) {\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: \"1\", value: val },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t})\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.cy.nodes().length + 1;\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: nodeId.toString(), value: val },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tcommands = this.heap.push(val, true);\r\n\t\t}\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tvalues.push({value: val, class: 'heap-default'});\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst n = this.cy.nodes().length;\r\n\t\tif (n === 0){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.EMPTY_HEAP_WARNING,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n\t\tlet commands:Array<AnimationStep> = [];\r\n\r\n\t\tconst {values} = this.state;\r\n\t\tconst lastValue = values[n];\r\n\t\tvalues.pop();\r\n\t\tif(n > 0) values[1] = lastValue;\r\n\t\tif(this._isMounted) this.setState({values});\r\n\r\n\t\tif (n === 1) return;\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).position();\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: \"1\", value },\r\n\t\t\tposition,\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n\t\tcommands = this.heap.pop(true);\r\n\t\tconsole.log(commands);\r\n\t\tthis.refreshLayout();\r\n\r\n\t\tlet animationPromise = new Promise((resolve, reject) => {\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\t\tanimationPromise.then(commands => {\r\n\t\t\t//this.cy.autolock(true);\r\n\t\t\tsetTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n\t\t});\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.heap.push(values[i]);\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'nodes',\r\n\t\t\t\t\tdata: { id: (i).toString(), value: values[i] },\r\n\t\t\t\t\tgrabbable: false,\r\n\t\t\t\t\tpannable: false,\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tconst left = 2*i, right = 2*i + 1;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid:  (i).toString() + '-' + (left).toString(),\r\n\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\ttarget: (left).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(right < values.length){\r\n\t\t\t\tthis.cy.add({\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid:  (i).toString() + '-' + (right).toString(),\r\n\t\t\t\t\t\tsource: (i).toString(),\r\n\t\t\t\t\t\ttarget: (right).toString(),\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst stateValues = Array(values.length);\r\n\t\tvalues.forEach((value, i) => {\r\n\t\t\tstateValues[i] = {value, class: 'heap-default'}\r\n\t\t});\r\n\t\tthis.setState({values: stateValues});\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal \r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray = {(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose = {() => this.setState({show: false})}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showInsertModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showInsertModal: false})}\r\n\t\t\t\t\tcallback = {(v:number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Container fluid={true}>\r\n\t\t\t\t\t<Row id=\"canvas\" />\r\n\t\t\t\t\t<HeapArray array={this.state.values}/>\r\n\t\t\t\t\t<TreeBar insert={(v: number) => this.insert(v)} remove={() => this.remove()} />\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t<button onClick={() => this.setState({show: true})}>Test input heap</button>\r\n\t\t\t\t\t<button onClick={() => parseHeap(this.state.values)}>Test output heap</button>\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      console.error('Invalid AVL format');\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputAVLModal;","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 1000, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n  }\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  cy = cytoscape();\r\n\r\n  heap = new PriorityQueue((x, y) => x <= y);\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements: [],\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      wheelSensitivity: 1,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n        options: [\r\n          {\r\n            name: 'Insertar',\r\n            run: () => this.setState({showInsertModal: true}),\r\n          },\r\n          {\r\n            name: 'Eliminar',\r\n            run: this.remove,\r\n          },\r\n          {\r\n            name: 'Buscar',\r\n            run: () => this.setState({showSearchModal: true}),\r\n          },\r\n          {\r\n            name: 'Limpiar canvas',\r\n            run: this.clearGraph,\r\n          },\r\n          {\r\n            name: 'Subir AVL',\r\n            run: () => this.setState({show: true}),\r\n          },\r\n          {\r\n            name: 'Descargar AVL',\r\n            run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n          }\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  componentDidUpdate(){\r\n    layoutOptions.animationDuration = 1000/this.props.speed;\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n\t\tlet nodePopper = document.getElementById(node + 'popper');\r\n\t\tif (nodePopper) {\r\n\t\t\tdocument.body.removeChild(nodePopper);\r\n\t\t}\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  addNode = (id: string, value: number, height:number=0, balance:number=0) => {\r\n    console.log('INSERTAR ' + value + ' ' + balance)\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      }\r\n    });\r\n    /*\r\n    let node = this.cy.getElementById(id);\r\n\r\n    let popper = node.popper({\r\n\t\t\tcontent: () => {\r\n\t\t\t\tlet div = document.createElement('div');\r\n\t\t\t\tdiv.setAttribute('id', id + 'popper');\r\n\t\t\t\tdocument.body.appendChild(div);\r\n\r\n\t\t\t\treturn div;\r\n\t\t\t}\r\n    });\r\n    \r\n    let update = () => {\r\n\t\t\tpopper.scheduleUpdate();\r\n\t\t};\r\n\r\n    node.on('position', update);\r\n    */\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    console.log(source, target);\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n    //this.refreshLayout();\r\n  }\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      })\r\n      return;\r\n    }\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      let prevNode = selection.id;\r\n      this.cy.getElementById(prevNode).style(Styles.NODE);\r\n      if(prevNode === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout() {\r\n    this.layoutProcessing();\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let nodeDom = document.getElementById(node.id() + 'popper');\r\n      if (nodeDom) nodeDom.innerHTML = bal.toString();\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.refreshLayout();\r\n  }\r\n\r\n  rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n\r\n    this.refreshLayout();\r\n  }\r\n\r\n  balance(start: CytoscapeElement){\r\n\r\n    let node = start;\r\n    let promise = new Promise((resolve, reject) => {\r\n      const recursion = () => {\r\n        const [left, right] = getChildren(node);\r\n        const lh = getHeight(left), rh = getHeight(right);\r\n        node.data('height', Math.max(lh, rh)+1);\r\n        const bal = rh - lh;\r\n        node.data('balance', bal);\r\n        console.log('NODO ' + node.id() + ' BAL ' + bal);\r\n        if(bal === 2){\r\n          if(right.data('balance') >= 0) this.rotateRight(node);\r\n          else{\r\n            this.rotateLeft(right);\r\n            this.rotateRight(node);\r\n          }\r\n        }else if(bal === -2){\r\n          if(left.data('balance') <= 0) this.rotateLeft(node);\r\n          else{\r\n            this.rotateRight(left);\r\n            this.rotateLeft(node);\r\n          }\r\n        }\r\n        console.log(node.id() + ' ' + this.treeRoot);\r\n        node.style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        })\r\n        if(node.id() === this.treeRoot){\r\n          resolve();\r\n          return;\r\n        }   \r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.style({\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        //console.log(node.id());\r\n        setTimeout(recursion, 1000/this.props.speed);\r\n      }\r\n      node.style({\r\n        'background-color': 'red',\r\n        'color': 'black',\r\n      })\r\n      setTimeout(recursion, 1000/this.props.speed);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  insert(value: number) {\r\n    if(this.props.animation) return;\r\n    let id = 0;\r\n\t\twhile (this.cy.getElementById((id.toString())).length > 0) {\r\n\t\t\tid++;\r\n    }\r\n    this.addNode(id.toString(), value);\r\n    let n = this.cy.nodes().length;\r\n    let newNode = this.cy.getElementById(id.toString());\r\n    new Promise((resolve : (found: String | null) => void, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      if(n > 1){\r\n        let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n          console.log(current);\r\n          if(prev) prev.style({\r\n            'color': 'black',\r\n            'background-color': 'white',\r\n          });\r\n          if(current){\r\n            current.style({\r\n              'color': 'white',\r\n              'background-color': 'black',\r\n            });\r\n            let [left, right] = getChildren(current);\r\n            if(value === current.data('value')){\r\n              setTimeout(resolve, 1000/this.props.speed, current.id());\r\n              return;\r\n            }\r\n            if (value < current.data('value')) {\r\n              setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            } else {\r\n              setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            }\r\n          }else{\r\n            if(prev){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              /*newNode.data(\r\n                'prev', prev.id(),\r\n              );*/\r\n            }\r\n            this.refreshLayout();\r\n            setTimeout(resolve, 1000/this.props.speed, null);\r\n          } \r\n        }\r\n        insertion(this.cy.getElementById(this.treeRoot), null);\r\n      }else{\r\n        this.treeRoot = id.toString();\r\n        this.refreshLayout();\r\n        resolve(null);\r\n      }\r\n    }).then( (found: String | null) => {\r\n      if(!found){\r\n        this.balance(newNode).then(() => {\r\n          this.props.dispatch({\r\n            type: actions.ANIMATION_END,\r\n          });\r\n        });\r\n      }else{\r\n        this.removeNode(newNode);\r\n        this.cy.getElementById(found).style({\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_END,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  async inorderSuccessor(node: CytoscapeElement){\r\n    let promise = new Promise((resolve: (node:CytoscapeElement) => void, reject) => {\r\n      const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color' : 'black',\r\n          });\r\n          const left = getChildren(node)[0];\r\n          setTimeout(getNext, 1000/this.props.speed, left, node);\r\n        }else prev && resolve(prev);\r\n      }\r\n      let right = getChildren(node)[1];\r\n      node = right;\r\n      getNext(node, null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  \r\n  async search(value: number){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let promise = new Promise((resolve: (node?: CytoscapeElement | null) => void, reject) => {\r\n      let found = false;\r\n      const bsearch = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        if(prev){\r\n          prev.style({\r\n            'background-color': 'white',\r\n            'color': 'black',\r\n          });\r\n        }\r\n        if(node){\r\n          node.style({\r\n            'background-color': 'red',\r\n            'color': 'black',\r\n          });\r\n          const [left, right] = getChildren(node);\r\n          if(node.data('value') === value){\r\n            node.style({\r\n              'background-color': 'lightgreen',\r\n              'color': 'black',\r\n            });\r\n            found = true;\r\n            setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          }else if(node.data('value') < value){\r\n            setTimeout(bsearch, 1000/this.props.speed, right, node);\r\n          }else{\r\n            setTimeout(bsearch, 1000/this.props.speed, left, node);\r\n          }\r\n        }else{\r\n          this.props.dispatch({\r\n            type: (found ? actions.AVL_FOUND_SUCCESS : actions.AVL_NOT_FOUND_INFO),\r\n          });\r\n          \r\n          resolve(prev);\r\n        }\r\n      }\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n    });\r\n    let result = await promise;\r\n    return result;\r\n  }\r\n  remove = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let {selection} = this.props;\r\n    if(!selection){\r\n      this.props.dispatch({\r\n        type: actions.NO_ELEMENT_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    let node = this.cy.getElementById(selection.id);\r\n    let anc = null;\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_START,\r\n    });\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.refreshLayout();\r\n      if(anc) this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n      else this.props.dispatch({type: actions.ANIMATION_END});\r\n    }else if(node.outgoers('node').length === 1){\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.refreshLayout();\r\n      }else{\r\n        const prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data({\r\n          prev,\r\n        });\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.refreshLayout();\r\n      }\r\n      this.balance(this.cy.getElementById(anc)).then(() => {\r\n        this.props.dispatch({type: actions.ANIMATION_END});\r\n      });\r\n    }else{\r\n      let promise = this.inorderSuccessor(node);\r\n      promise.then((suc: CytoscapeElement) => {\r\n        node.data('value', suc.data('value'));\r\n        if(!isLeaf(suc)){\r\n          const right = getChildren(suc)[1];\r\n          right.data('prev', suc.data('prev'));\r\n          this.addEdge(suc.data('prev'), right.id());\r\n        }\r\n        anc = suc.data('prev');\r\n        this.removeNode(suc);\r\n        this.refreshLayout();\r\n        this.balance(this.cy.getElementById(anc)).then(() => {\r\n          this.props.dispatch({type: actions.ANIMATION_END});\r\n        });\r\n        node.style(Styles.NODE);\r\n\r\n      })\r\n    }\r\n    this.props.dispatch({\r\n      type: actions.NO_SELECTION,\r\n    });\r\n  }\r\n  testRotation(mode: number){\r\n    let {selection} = this.props;\r\n    if(!selection) return;\r\n    if(mode === 0) this.rotateLeft(this.cy.getElementById(selection.id));\r\n    else this.rotateRight(this.cy.getElementById(selection.id));\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.refreshLayout();\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\n\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'push',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tvalue: cy.getElementById(source).data('value'),\r\n\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': 'green', 'target-arrow-color': 'green' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [{'background-color': 'gray', 'color': 'black'}],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'push',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: next.data('value'),\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const dfs = (cy, source, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'gray', 'color': 'black' }],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'push',\r\n\t\t\t\tdata: {value: source.data('value'), class: 'heap-default'}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [{ 'background-color': 'black', 'color': 'white' }],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'red', 'color': 'black' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': 'green', 'target-arrow-color': 'green' }],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [{'background-color': 'gray'}],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [{ 'line-color': '#ccc', 'target-arrow-color': '#ccc' }],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [{ \"background-color\": 'black', 'color': 'white' }],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          {'background-color': 'red', 'color': 'black'},\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [{'line-color': 'black', 'line-style': 'solid'}],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':'green'}],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [{'background-color': 'gray'}],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let col;\r\n      if(part_of_tree[edge.id()]) col = 'black';\r\n      else col = '#ccc';\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color':col}],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill({'line-style': 'dashed', 'line-color': '#eee'}),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [{'line-color': 'green'}],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            {'line-style': 'solid', 'line-color': 'black'},\r\n            {'background-color': 'red'},\r\n            {'background-color': 'red'},\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [{'line-color': '#ccc'}],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  }\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = Bubblesort(this.state.values);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({nodes: [], lines: [1]});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [2]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){\r\n      commands.push({nodes: [], lines: [10]});\r\n  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      commands.push({nodes:[], lines: [11]});\r\n\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        commands.push({nodes: [], lines: [13]});\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n\r\n  mergeSort(input, 0, 0, width, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-10],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Ordenar',\r\n\t\t\t\t\t\trun: this.runButton,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(_prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n        let {nodes, duration, lines, style, positions} = commands[pos++];\r\n        if(nodes){\r\n\t\t\t\t\tconsole.log(nodes);\r\n          nodes.forEach((node, index) => {\r\n\t\t\t\t\t\tlet ele = this.cy.getElementById(node.id);\r\n\t\t\t\t\t\tele.style({visibility: 'visible'})\r\n\t\t\t\t\t\tif(style) ele.style(style[index]);\r\n\t\t\t\t\t\tif(positions) layoutOptions.positions[node.id] = positions[index];\r\n          })\r\n\t\t\t\t}\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {lines},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tconsole.log(this.cy.nodes());\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n\t}\r\n\t\r\n\tinitialize(){\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < this.state.values.length; i++){\r\n      this.addNode(i.toString(), this.state.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n  runButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n\t\t\t})\r\n      const commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\t\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3});\r\n    }\r\n    commands.push(cmd);\r\n    console.log(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray'}],\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n      });\r\n      break;\r\n    }\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white'}],\r\n      duration: 0,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearch from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [\r\n\t\t\t],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.cy.center();\r\n    this.layout.run();\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Buscar',\r\n\t\t\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.initialize();\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  executeAnimation = (commands: Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n    \r\n\t\tlet animation = () => {\r\n\t\t\tlet pos = 0;\r\n\t\t\tlet step = () => {\r\n\t\t\t\tif (pos === commands.length || !this.props.animation) {\r\n\t\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.refreshLayout();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlet { eles, style, duration, data, lines} = commands[pos++];\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).style(style[index]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\teles.forEach((ele, index) => {\r\n\t\t\t\t\tif(data !== undefined){\r\n\t\t\t\t\t\tthis.cy.getElementById(ele).data(data[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(this._isMounted && lines != null){\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.CHANGE_LINE,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlines,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t\tsetTimeout(step, ((duration === undefined) ? 1000/this.props.speed : duration)/this.props.speed);\r\n\t\t\t}\r\n\t\t\tstep();\r\n\t\t}\r\n\t\tanimation();\r\n  }\r\n\r\n\tinitialize(){\r\n    const {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.initialize();\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (commands: Array<AnimationStep>) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n      const commands = BinarySearch(this.state.values, value);\r\n      resolve(commands);\r\n    }).then((commands: Array<AnimationStep>) => {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, commands);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<Container fluid={true}>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={this.changeArray}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" />\r\n\t\t\t</Container>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\n\r\nconst { HashRouter, Route } = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<Route path=\"/BFS\" render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/DFS\" render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t<Route path=\"/Dijkstra\" render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t<Route path=\"/Prim\" render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t<Route path=\"/Kruskal\" render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t<Route path=\"/Heap\" render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t<Route path=\"/AVL\" render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t<Route path=\"/BubbleSort\" render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/MergeSort\" render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t<Route path=\"/binarysearch\" render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React, { ReactElement } from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n};\r\n\r\ntype State = {\r\n  counter: number;\r\n  recording: boolean;\r\n}\r\n\r\ntype storeState = {\r\n  algorithm: string,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props, State>{\r\n  interval=0;\r\n  state = {\r\n    counter: 0,\r\n    recording: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    if(prevProps.algorithm !== this.props.algorithm){\r\n      clearInterval(this.interval);\r\n      this.setState({counter: 0, recording: false});\r\n    }\r\n  }\r\n\r\n  handleClick(){\r\n    const {recording} = this.state;\r\n    const setCounter = () => {\r\n      const {counter} = this.state;\r\n      if(counter === 60){\r\n        clearInterval(this.interval);\r\n        this.setState({counter: 0, recording: false});\r\n        this.props.callback();\r\n        this.props.dispatch({\r\n          type: actions.FINISHED_GIF_RECORDING_INFO,\r\n        });\r\n      }else{\r\n        this.setState({counter: counter+1});\r\n      }\r\n    }\r\n\r\n    if(!recording){\r\n      this.props.dispatch({\r\n        type: actions.STARTING_GIF_RECORDING_INFO,\r\n      });\r\n      this.interval = window.setInterval(setCounter, 1000);\r\n    }else{\r\n      clearInterval(this.interval);\r\n      this.props.dispatch({\r\n        type: actions.FINISHED_GIF_RECORDING_INFO,\r\n      });\r\n      this.setState({counter: 0, recording: false});\r\n    }\r\n    this.props.callback();\r\n    this.setState({recording: !recording})\r\n  }\r\n  render(){\r\n    let ss = this.state.counter.toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>\r\n  photo: () => {},\r\n  gif: () => {},\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return {\r\n    run: state.run,\r\n    options: state.options,\r\n    photo: state.photo,\r\n    gif: state.gif,\r\n  }\r\n}\r\n\r\nclass Footer extends React.Component<Props>{\r\n  render(){\r\n    return(\r\n      <div className='footer'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className=\"dropup\">\r\n              <button className='dropdown-button'>Acciones</button>\r\n              <div className='actions-menu'>\r\n                <OptionsMenu op={this.props.options}/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={2}>\r\n            <span>Velocidad</span>\r\n            <SpeedBar/>\r\n          </Col>\r\n          <Col md={{span:1, offset:6}}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n            </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\nclass MenuBar extends React.Component{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={\"/BFS\"}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={\"/DFS\"}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={\"/Dijkstra\"}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={\"/Kruskal\"}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={\"/Prim\"}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={\"/bubblesort\"}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={\"/mergesort\"}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={\"/binarysearch\"}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={\"/heap\"}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={\"/AVL\"}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default MenuBar;","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\nconst mapStateToProps = state => ({\r\n  algorithm: state.algorithm,\r\n})\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container fluid={true}>\r\n            <ReactNotification/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arrego A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport actions from '../Actions/actions'\r\n\r\nconst algorithmReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      return {\r\n        ...state,\r\n        algorithm: 'DFS',\r\n        selection: null,\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Dijkstra',\r\n        selection: null,\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Kruskal',\r\n        selection: null,\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Prim',\r\n        selection: null,\r\n\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        algorithm: 'Heap',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        algorithm: 'AVL',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BubbleSort',\r\n        selection: null,\r\n\r\n        pseudo: bubblesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        algorithm: 'MergeSort',\r\n        selection: null,\r\n        pseudo: mergesort,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        algorithm: 'BinarySearch',\r\n        selection: null,\r\n        options: action.payload.options,\r\n        photo: action.payload.photo,\r\n        gif: action.payload.gif\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        data: action.payload.data,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\n\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n    }\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Error',\r\n      'El arreglo debe contener numeros enteros separados por comas',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error',\r\n      'Existe un error con el archivo, intente de nuevo con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'danger');\r\n      break;\r\n  \r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento no fue encontrado en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_ALGORITHM_EXECUTION_INFO:\r\n      createNotification('Ejecucion iniciada',\r\n      ' ',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra un minuto maximo de duracion',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('Elemento no encontrado',\r\n      'El elemento no se encuentra en el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'GIF listo para descargar',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',' ','success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\n\r\nconst initialState = {\r\n  algorithm: 'BFS',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 1.0,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => { },\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 1,\r\n};\r\n\r\nexport const NODE_SELECTED = {\r\n  'background-color': '#00FFFF',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}"],"sourceRoot":""}