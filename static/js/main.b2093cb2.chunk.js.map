{"version":3,"sources":["Components/CodeBlock.tsx","Components/AlgorithmInfo.tsx","Actions/actions.js","utils/dataURItoBlob.js","utils/MediaRecorder.js","Components/UploadGraphModal.tsx","Components/InputModal.tsx","Processing/graph-processing.ts","resources/names_and_routes/algorithm_names.js","Components/Graph.tsx","Components/InputHeapModal.tsx","utils/heap-utils.js","resources/pseudocodes/heap.jsx","Algorithms/DS/PriorityQueue.js","Processing/heap-processing.ts","Components/Heap.tsx","utils/avl-utils.js","Components/InputAVLModal.tsx","utils/cy-utils.js","resources/pseudocodes/avl.jsx","Processing/avl-proccesing.tsx","Components/AVL.tsx","Algorithms/DS/Queue.js","Algorithms/BFS.js","Algorithms/DFS.js","Algorithms/Dijkstra.js","Algorithms/BellmanFord.js","Algorithms/Prim.js","Algorithms/DS/DisjointSet.js","Algorithms/Kruskal.js","resources/pseudocodes/list.jsx","algorithm-properties.js","Algorithms/BubbleSort.js","Components/InputArrayModal.tsx","Components/BubbleSort.tsx","Algorithms/MergeSort.js","Processing/mergesort-processing.ts","Components/MergeSort.tsx","Algorithms/BubbleSort-util.js","Algorithms/BinarySearch.js","Components/BinarySearch.tsx","Algorithms/DS/LinkedListSimulator.js","Processing/list-processing.ts","Components/LinkedList.tsx","resources/names_and_routes/algorithm_routes.js","Editor.js","Components/Sidebar.tsx","resources/pseudocodes/BFS.jsx","Components/OptionsMenu.tsx","Components/SpeedBar.tsx","Components/Footer.tsx","Components/PhotoControl.tsx","Components/GIFControl.tsx","Components/MenuBar.tsx","App.jsx","serviceWorker.js","resources/pseudocodes/DFS.jsx","resources/pseudocodes/dijkstra.jsx","resources/pseudocodes/kruskal.jsx","resources/pseudocodes/bellmanFord.jsx","resources/pseudocodes/bubblesort.jsx","resources/pseudocodes/mergesort.jsx","resources/pseudocodes/prim.jsx","resources/pseudocodes/binarySearch.jsx","Reducers/algorithmReducer.js","Reducers/animationReducer.js","Reducers/canvasReducer.js","Reducers/selectionReducer.js","Reducers/notificationsReducer.js","Reducers/reducer.js","index.js","Styles/Styles.ts"],"names":["connect","require","CodeLine","props","line","current","index","focus","LINE_FOCUS","LINE_STD","react_default","a","createElement","style","Object","objectSpread","paddingRight","className","paddingLeft","ind","toString","text","CodeBlock","this","code","show","_this$props","lines","codelines","i","length","push","CodeBlock_CodeLine","includes","Fragment","React","Component","state","pseudo","showPseudo","AlgorithmInfo","Container","height","backgroundColor","Row","Col","algorithm","Components_CodeBlock","actions","INITIAL","SELECT_BFS","SELECT_DFS","SELECT_BELLMAN_FORD","SELECT_DIJKSTRA","SELECT_KRUSKAL","SELECT_PRIM","SELECT_HEAP","SELECT_AVL","SELECT_BUBBLESORT","SELECT_MERGESORT","SELECT_BINARY_SEARCH","SELECT_LINKED_LIST","SELECT_SINGLE_LINKED_LIST","SELECT_DOUBLE_LINKED_LIST","SELECT_QUEUE","SELECT_STACK","SELECTION","NO_SELECTION","ANIMATION_START","ANIMATION_PAUSE","ANIMATION_CONTINUE","ANIMATION_END","CLEAR_GRAPH","CHANGE_PSEUDO","TOGGLE_PSEUDO","SHOW_PSEUDO","CLOSE_PSEUDO","INC_SPEED","DEC_SPEED","CHANGE_SPEED","CHANGE_OPTIONS","CHANGE_LINE","LOAD_GRAPH","FINISHED_LOAD","INC_GIF_LENGTH","RESET_GIF_LENGTH","NO_NODE_SELECTED_ERROR","NO_EDGE_SELECTED_ERROR","NO_ELEMENT_SELECTED_ERROR","INVALID_INTEGER_ERROR","INVALID_ARRAY_ERROR","INVALID_GRAPH_ERROR","INVALID_HEAP_ERROR","INVALID_AVL_ERROR","ANIMATION_RUNNING_ERROR","EMPTY_LIST_WARNING","EMPTY_QUEUE_WARNING","EMPTY_STACK_WARNING","EMPTY_HEAP_WARNING","DIJKSTRA_NEGATIVE_WEIGHT_WARNING","NEGATIVE_CYCLE_FOUND","AVL_NOT_FOUND_INFO","AVL_ELEMENT_ALREADY_INFO","STARTING_BFS_INFO","STARTING_DFS_INFO","STARTING_DIJKSTRA_INFO","STARTING_BELLMAN_FORD_INFO","STARTING_KRUSKAL_INFO","STARTING_PRIM_INFO","STARTING_BUBBLESORT_INFO","STARTING_MERGESORT_INFO","STARTING_BINARYSEARCH_INFO","STARTING_GIF_RECORDING_INFO","FINISHED_GIF_RECORDING_INFO","STARTING_BINARY_SEARCH_INFO","BINARY_SEARCH_NOT_FOUND_INFO","NO_FILE_SELECTED_INFO","FINISHED_GIF_SUCCESS","LOAD_GRAPH_SUCCESS","PHOTO_SUCCESS","FINISHED_ALGORITHM_SUCCESS","AVL_FOUND_SUCCESS","ARRAY_SORTED_SUCCESS","BINARY_SEARCH_FOUND_SUCCESS","dataURItoBlob","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","_ia","Uint8Array","charCodeAt","dataView","DataView","Blob","type","gifshot","MediaRecorder","_this2","dispatch","arguments","undefined","_action","classCallCheck","_gifBuffer","_takingGif","_interval","_dispatch","downloadGif","buffer","width","createGIF","images","gifWidth","gifHeight","frameDuration","obj","error","console","log","image","link","document","setAttribute","window","URL","createObjectURL","display","body","appendChild","click","removeChild","cy","_this","download","jpg","takeGif","clearInterval","setInterval","takePicture","elements","graph","JSON","stringify","encodeURIComponent","input","value","UploadGraphModal","uploadGraph","getElementById","files","file","reader","FileReader","onload","content","result","parse","payload","data","e","readAsText","handleClose","Modal_default","onHide","Header","closeButton","Title","Body","id","Footer","Button","variant","onClick","InputModal","possibleConstructorReturn","getPrototypeOf","call","setStepInputRef","handleAccept","validateNumber","parseInt","callback","handleChange","setState","currentTarget","handleCancel","currentValue","element","prevProps","test","min","max","ref","onChange","selection","weight","Styles","cytoscape","exportGraph","nodes","forEach","node","group","position","edges","edge","source","target","processCommands","commands","action","headless","steps","lastLines","_loop","pos","_commands$pos","eles","distance","duration","inst","ele","prevStyle","NODE_POPPER","name","algorithmNames","BFS","DFS","Dijkstra","BellmanFord","Kruskal","Prim","MinHeap","AVL","BubbleSort","MergeSort","BinarySearch","SingleLinkedList","DoubleLinkedList","Queue","Stack","autopanOnDrag","getNodeIdString","nodeId","Graph","_isMounted","_mediaRecorder","values","Array","showModal","showWeightModal","layout","run","stop","nodeStyle","NODE","edgeStyle","EDGE","undo","redo","options","step","animationTimeout","handleUndo","animation","currentElements","pop","loadGraph","handleRedo","handleRewind","clearTimeout","Math","_this$buffer$_this$st","handleForward","_this$buffer$_this$st2","handleRepeat","_this$buffer$_this$st3","handlePauseContinue","paused","Promise","resolve","then","clearGraph","pushState","removeNode","remove","removeNodePopper","removeEdge","executeAnimation","notification","background-color","color","graphProcessing","algoNames","runButton","createPopper","refreshLayout","reject","execute","autolock","removeButton","handleClickOnNode","prevNode","previous","directed","outgoers","contains","neighborhood","createEdge","NODE_SELECTED","handleClickOnEdge","edgeId","prevId","EDGE_SELECTED","changeWeight","weightButton","handleClickViewport","event","_event$position","x","y","createNode","weighted","EDGE_WEIGHTED","EDGE_DIRECTED","takeJson","initialize","photo","gif","rewind","forward","pause","repeat","clear","loadingGraph","cancelGif","removePoppers","_this3","withPoppers","container","selector","styleEnabled","hideEdgesOnViewport","hideLabelsOnViewport","userPanningEnabled","zoomingEnabled","textureOnViewport","motionBlur","motionBlurOpacity","pixelRatio","match","visibility","on","enabled","speed","makeLayout","_this4","add","withStyle","borderWidth","zIndex","lineColor","targetArrowShape","targetArrowColor","lineStyle","label","textRotation","textMarginY","_this5","_this5$buffer","setTimeout","z-index","border-width","font-size","_this6","floor","random","_this7","Components_UploadGraphModal","Components_InputModal","w","InputHeapModal","validateArray","map","n","left","right","Infinity","validateHeap","changeArray","insert","heap","PriorityQueue","_comp","_eq","_data","isEmpty","NODE_BLACK","classes","parent","NODE_CORRECT","NODE_WRONG","_ref","l","r","_ref2","_ref3","_ref4","HeapProcessor","vw","vh","layoutProcessing","prev","addNode","concat","sep","getHeight","setSep","nx","ny","prevPosition","popper","prevPopPosition","lastDuration","val","src","layoutOptions","positions","padding","animate","animationDuration","Heap","showInsertModal","heapProcessor","output","parseHeap","autoungrabify","grabbable","pannable","_this7$buffer","_this8","_this9","_this10","Components_InputHeapModal","v","isLeaf","getChildren","lca","InputAVLModal","addEdge","recursion","correct","balance","sign","abs","validateAVL","_this$props2","search","avl","AVLProcessor","treeRoot","found","anc","pushStep","newChild","suc","inorderSuccessor","root","updateLayout","refresh","_getChildren","_getChildren2","slicedToArray","propagate","levels","dfs","depth","_getChildren3","_getChildren4","hleft","hright","bal","iter","j","b","_getChildren5","_getChildren6","dif","_getChildren7","_getChildren8","_getChildren9","_getChildren10","C","_getChildren11","_getChildren12","A","B","_getChildren13","_getChildren14","_getChildren15","_getChildren16","start","_getChildren17","_getChildren18","lh","rh","rotateRight","rotateLeft","newNode","insertion","_getChildren19","_getChildren20","bsearch","_getChildren21","_getChildren22","getNext","warnings","showSearchModal","showRemoveModal","update","parseAVL","keep","_this6$buffer","_this$AVLProcessor$se","Components_InputAVLModal","shift","param","level","q","NODE_GRAY","front","next","EDGE_TRAVERSE","class","EDGE_VISITED","visited","pq","dist","fill","_pq$top","top","NODE_RED","nextId","prevDistance","pre","currentId","u","negativeCycle","part_of_tree","EDGE_NO_MST","EDGE_MST","connectedEdges","t","nextStyle","DisjointSet","_parent","find","nodeX","nodeY","sorted","ds","connected","join","pseudocodes_list","singlySet","main","pushFront","pushBack","popFront","popBack","insertBefore","insertAfter","doublySet","queueSet","stackSet","properties","pseudoset","pseudocodes","bcolor","swap","InputArrayModal","currentValues","size","prevValues","toConsumableArray","valuesToGraph","Bubblesort","prevState","shape","_this4$buffer","Components_InputArrayModal","mergeSortAnimation","mid","mergeSort","h","nofocus","shadows","rshadows","cmd","p","slice","li","ri","shadow","addShadow","Mergesort","Sort","defaultStyle","lo","hi","showInputModal","BinarySearchAlgo","LinkedListSimulator","slow","newId","caseLines","ListProcessor","doubly","list","doublyLinked","_ele$data","splice","unshift","_ele$data2","_this2$list$_data","rest","apply","_ele$data3","_this2$list$_data2","_ele$data4","_ele$data5","push_front","push_back","pop_front","pop_back","where","insert_before","insert_after","delete_position","LinkedList","showDeleteModal","showPushBeforeModal","showPushBackModal","showPushFrontModal","showPushAfterModal","EDGE_DOUBLE","_this11","_this12","_this13","_this14","algorithmRoutes","HashRouter","Route","Editor","Switch","path","routes","render","Components_Graph","Components_Heap","Components_AVL","Components_BubbleSort","Components_MergeSort","Components_BinarySearch","Components_LinkedList","NavLink","items","to","Sidebar_HashRouter","OptionsMenu","op","links","option","xs","algoDict","interval","ControlButton","title","delay","children","onMouseDown","onMouseUp","showActions","control","md","index_es","icon","faPlay","faPause","faRedo","Footer_ControlButton","faBackward","faForward","faUndo","faTimes","faTrash","Components_OptionsMenu","Components_SpeedBar","span","offset","PhotoControl","handleClick","GIFControl","timeEllapsed","ss","ms","gifLength","MenuBar","searchAlgorithms","MenuBar_NavLink","mstAlgorithms","arrays","dataStructures","MenuBar_HashRouter","Components_PhotoControl","Components_GIFControl","App","dist_default","Components_MenuBar","src_Editor","Components_Footer","Boolean","location","hostname","dijkstra","kruskal","bellmanFord","bubblesort","mergesort","prim","binarySearch","algorithmReducer","nextState","listPseudo","animationReducer","canvasReducer","selectionReducer","createNotification","message","store","addNotification","animationIn","animationOut","dismiss","onscreen","showIcon","notificationsReducer","SORTING_BINARY_SEARCH_INFO","initialState","reducer","finalState","createStore","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","d","border-style","border-opacity","border-color","text-valign","text-halign","line-color","curve-style","line-style","target-arrow-color","target-arrow-shape","source-arrow-color","source-arrow-shape","text-margin-y","text-rotation"],"mappings":"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","file":"static/js/main.b2093cb2.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { LINE_FOCUS, LINE_STD } from '../Styles/Styles';\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  code: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  show: boolean,\r\n}\r\n\r\ntype State = {\r\n  pseudo: Array<{text: string, ind: number}> | null,\r\n  lines: Array<number>,\r\n  showPseudo: boolean,\r\n}\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    code: state.pseudo,\r\n    lines: state.lines,\r\n    show: state.showPseudo,\r\n  }\r\n}\r\nconst CodeLine = (props:{line:{text:string, ind: number}, current: boolean, index: number}) => {\r\n  const {line, current, index} = props;\r\n  const focus = current ? LINE_FOCUS : LINE_STD;\r\n  return (\r\n    <div style={{...focus, paddingRight: '10px'}}>\r\n      <div className='codeline'>\r\n        {(index<10?'\\u00A0': '')+index}.\r\n        <span style={{paddingLeft: (line.ind *15).toString() + 'px'}}>{line.text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CodeBlock extends React.Component<Props>{\r\n  render(){\r\n    if(this.props.code && this.props.show){\r\n      const {code, lines} = this.props;\r\n      let codelines = [];\r\n      if(code){\r\n        for(let i = 0; i < code.length; i++){\r\n          codelines.push(<CodeLine index={i+1} line = {code[i]} current = {lines && lines.includes(i)}/>);\r\n        }\r\n      }\r\n      return (\r\n        <div className='codeblock'>\r\n          {codelines}\r\n        </div>\r\n      );\r\n    }else return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeBlock);","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport CodeBlock from './CodeBlock';\r\nimport BFS from '../resources/pseudocodes/BFS';\r\n\r\n\r\nconst {connect} = require('react-redux');\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    algorithm: state.algorithm,\r\n  }\r\n}\r\n\r\nclass AlgorithmInfo extends React.Component<any>{\r\n  render() {\r\n    return (\r\n      <Container style={{height: '100%', backgroundColor:'#ccc'}}>\r\n        <Row style={{height: '40%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\">\r\n              <div className=\"header\">\r\n                <h4>\r\n                  {this.props.algorithm != null ? this.props.algorithm : 'Nombre del algoritmo'}\r\n                </h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                Descripcion del algoritmo\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{height: '50%'}}>\r\n          <Col>\r\n            <div className=\"algorithm-description\" >\r\n              <div className=\"header\">\r\n                <h4>Pseudocodigo</h4>\r\n              </div>\r\n              <div className=\"content\">\r\n                <CodeBlock/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AlgorithmInfo);","const actions = {\r\n\r\n    INITIAL: 'INITIAL',\r\n    SELECT_BFS: 'SELECT_BFS',\r\n    SELECT_DFS: 'SELECT_DFS',\r\n    SELECT_BELLMAN_FORD: 'SELECT_BELLMAN_FORD',\r\n    SELECT_DIJKSTRA: 'SELECT_DIJKSTRA',\r\n    SELECT_KRUSKAL: 'SELECT_KRUSKAL',\r\n    SELECT_PRIM: 'SELECT_PRIM',\r\n    SELECT_HEAP: 'SELECT_HEAP',\r\n    SELECT_AVL: 'SELECT_AVL',\r\n    SELECT_BUBBLESORT: 'SELECT_BUBBLESORT',\r\n    SELECT_MERGESORT: 'SELECT_MERGESORT',\r\n    SELECT_BINARY_SEARCH: 'SELECT_BINARY_SEARCH',\r\n    SELECT_LINKED_LIST: 'SELECT_LINKED_LIST',\r\n    SELECT_SINGLE_LINKED_LIST: 'SELECT_SINGLE_LINKED_LIST',\r\n    SELECT_DOUBLE_LINKED_LIST: 'SELECT_DOUBLE_LINKED_LIST',\r\n    SELECT_QUEUE: 'SELECT_QUEUE',\r\n    SELECT_STACK: 'SELECT_STACK',\r\n\r\n    SELECTION: 'SELECTION',\r\n    NO_SELECTION: 'NO_SELECTION',\r\n    ANIMATION_START: 'ANIMATION_START',\r\n    ANIMATION_PAUSE: 'ANIMATION_PAUSE',\r\n    ANIMATION_CONTINUE: 'ANIMATION_CONTINUE',\r\n    ANIMATION_END: 'ANIMATION_END',\r\n    CLEAR_GRAPH: 'CLEAR_GRAPH',\r\n    \r\n    CHANGE_PSEUDO: 'CHANGE_PSEUDO',\r\n    TOGGLE_PSEUDO: 'TOGGLE_PSEUDO',\r\n    SHOW_PSEUDO: 'SHOW_PSEUDO',\r\n    CLOSE_PSEUDO: 'CLOSE_PSEUDO',\r\n    INC_SPEED: 'INC_SPEED',\r\n    DEC_SPEED: 'DEC_SPEED',\r\n    CHANGE_SPEED: 'CHANGE_SPEED',\r\n    CHANGE_OPTIONS: 'CHANGE_OPTIONS',\r\n    CHANGE_LINE: 'CHANGE_LINE',\r\n\r\n    LOAD_GRAPH: 'LOAD_GRAPH',\r\n    FINISHED_LOAD: 'FINISHED_LOAD',\r\n    INC_GIF_LENGTH: 'INC_GIF_LENGTH',\r\n    RESET_GIF_LENGTH: 'RESET_GIF_LENGTH',\r\n    \r\n    NO_NODE_SELECTED_ERROR: 'NO_NODE_SELECTED_ERROR',\r\n    NO_EDGE_SELECTED_ERROR: 'NO_EDGE_SELECTED_ERROR',\r\n    NO_ELEMENT_SELECTED_ERROR: 'NO_ELEMENT_SELECTED_ERROR',\r\n    INVALID_INTEGER_ERROR: 'INVALID_INTEGER_ERROR',\r\n    INVALID_ARRAY_ERROR: 'INVALID_ARRAY_ERROR',\r\n    INVALID_GRAPH_ERROR: 'INVALID_GRAPH_ERROR',\r\n    INVALID_HEAP_ERROR: 'INVALID_HEAP_ERROR',\r\n    INVALID_AVL_ERROR: 'INVALID_AVL_ERROR',\r\n    ANIMATION_RUNNING_ERROR: 'ANIMATION_RUNNING_ERROR',\r\n\r\n    EMPTY_LIST_WARNING: 'EMPTY_LIST_WARNING',\r\n    EMPTY_QUEUE_WARNING: 'EMPTY_QUEUE_WARNING',\r\n    EMPTY_STACK_WARNING: 'EMPTY_STACK_WARNING',\r\n    EMPTY_HEAP_WARNING: 'EMPTY_HEAP_WARNING',\r\n    DIJKSTRA_NEGATIVE_WEIGHT_WARNING: 'DIJKSTRA_NEGATIVE_WEIGHT_WARNING',\r\n    NEGATIVE_CYCLE_FOUND: 'NEGATIVE_CYCLE_FOUND',\r\n\r\n    AVL_NOT_FOUND_INFO: 'AVL_NOT_FOUND_INFO',\r\n    AVL_ELEMENT_ALREADY_INFO: 'AVL_ELEMENT_ALREADY_INFO',\r\n    STARTING_BFS_INFO: 'STARTING_BFS_INFO',\r\n    STARTING_DFS_INFO: 'STARTING_DFS_INFO',\r\n    STARTING_DIJKSTRA_INFO: 'STARTING_DIJKSTRA_INFO',\r\n    STARTING_BELLMAN_FORD_INFO: 'STARTING_BELLMAN_FORD_INFO',\r\n    STARTING_KRUSKAL_INFO: 'STARTING_KRUSKAL_INFO',\r\n    STARTING_PRIM_INFO: 'STARTING_PRIM_INFO',\r\n    STARTING_BUBBLESORT_INFO: 'STARTING_BUBBLESORT_INFO',\r\n    STARTING_MERGESORT_INFO: 'STARTING_MERGESORT_INFO',\r\n    STARTING_BINARYSEARCH_INFO: 'STARTING_BINARYSEARCH_INFO',\r\n    STARTING_GIF_RECORDING_INFO: 'STARTING_GIF_RECORDING_INFO',\r\n    FINISHED_GIF_RECORDING_INFO: 'FINISHED_GIF_RECORDING_INFO',\r\n    STARTING_BINARY_SEARCH_INFO: 'STARTING_BINARY_SEARCH_INFO',\r\n    BINARY_SEARCH_NOT_FOUND_INFO: 'BINARY_SEARCH_NOT_FOUND_INFO',\r\n    NO_FILE_SELECTED_INFO: 'NO_FILE_SELECTED_INFO',\r\n\r\n    FINISHED_GIF_SUCCESS: 'FINISHED_GIF_SUCCESS',\r\n    LOAD_GRAPH_SUCCESS: 'LOAD_GRAPH_SUCCESS',\r\n    PHOTO_SUCCESS: 'PHOTO_SUCCESS',\r\n    FINISHED_ALGORITHM_SUCCESS: 'FINISHED_ALGORITHM_SUCCESS',\r\n    AVL_FOUND_SUCCESS: 'AVL_FOUND_SUCCESS',\r\n    ARRAY_SORTED_SUCCESS: 'ARRAY_SORTED_SUCCESS',\r\n    BINARY_SEARCH_FOUND_SUCCESS: 'BINARY_SEARCH_FOUND_SUCCESS',\r\n    \r\n}\r\nexport default actions;","/*\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 David Gomez-Urquiza\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var arrayBuffer = new ArrayBuffer(byteString.length);\r\n  var _ia = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      _ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  var dataView = new DataView(arrayBuffer);\r\n  var blob = new Blob([dataView], { type: mimeString });\r\n  return blob;\r\n}\r\n\r\nexport default dataURItoBlob;","import dataURItoBlob from './dataURItoBlob';\r\nimport actions from '../Actions/actions';\r\nconst gifshot = require('gifshot');\r\nclass MediaRecorder{\r\n\r\n  _gifBuffer = [];\r\n  _takingGif = false;\r\n  _interval = 0;\r\n  _dispatch = null;\r\n  \r\n  constructor(dispatch = (_action) => {}){\r\n    this._dispatch = dispatch;\r\n  }\r\n\r\n  downloadGif = (buffer, width, height) => {\r\n    const dispatch = this._dispatch;\r\n    gifshot.createGIF({\r\n      'images': buffer,\r\n      'gifWidth': width,\r\n      'gifHeight': height,\r\n      'frameDuration': 1,\r\n      }, function(obj) {\r\n        if(!obj.error) {\r\n          const image = dataURItoBlob(obj.image);\r\n    \r\n          let link = document.createElement('a');\r\n          link.setAttribute('href', window.URL.createObjectURL(image));\r\n          link.setAttribute('download', 'test.gif');\r\n          link.setAttribute('target', '_blank');\r\n          link.style.display = 'none';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n      \r\n        }else{\r\n          dispatch({\r\n            type: actions.FINISHED_GIF_SUCCESS,\r\n          });\r\n          \r\n          console.log(obj.error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  takePicture(cy, _this = null, download = true){\r\n    let image = cy.jpg();\r\n    if(download){\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', image);\r\n      link.setAttribute('download', 'test.jpg');\r\n      link.setAttribute('target', '_blank');\r\n      link.style.display = 'none';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }else if(_this._gifBuffer.length < 300){\r\n      _this._gifBuffer.push(image);\r\n      _this._dispatch({\r\n        type: actions.INC_GIF_LENGTH,\r\n      });\r\n    }else{\r\n      _this.takeGif(cy);\r\n    }\r\n  }\r\n\r\n  cancelGif(){\r\n    this._takingGif = false;\r\n    this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n    clearInterval(this._interval);\r\n  }\r\n\r\n  takeGif(cy){\r\n    if(!this._takingGif){\r\n      this._takingGif = true;\r\n      this._dispatch({type: actions.STARTING_GIF_RECORDING_INFO});\r\n      this._interval = setInterval(this.takePicture, 300, cy, this, false);\r\n    }else{\r\n      clearInterval(this._interval);\r\n      this._dispatch({type: actions.FINISHED_GIF_RECORDING_INFO});\r\n      this._dispatch({type: actions.RESET_GIF_LENGTH});\r\n      this.downloadGif(this._gifBuffer, cy.width(), cy.height());\r\n      this._takingGif = false;\r\n      this._gifBuffer = [];\r\n    }\r\n  }\r\n\r\n  takeJson(elements){\r\n   \r\n    const graph = JSON.stringify(elements); \r\n    let link = document.createElement('a');\r\n    link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(graph));\r\n    link.setAttribute('download', 'graph.json');\r\n    link.setAttribute('target', '_blank');\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  readJson(){\r\n    /*\r\n    const graph = prompt(\"Insertar grafo en formato JSON\");\r\n    if(graph){\r\n      console.log(JSON.parse(graph));\r\n      cy.json(JSON.parse(graph));\r\n    }\r\n    */\r\n   let input = document.createElement('input');\r\n   input.setAttribute('type', 'file');\r\n   input.setAttribute('id','myFile');\r\n   input.setAttribute('style', 'position: absolute');\r\n   document.body.appendChild(input);\r\n   input.click();\r\n   console.log(input.value);\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default MediaRecorder;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nclass UploadGraphModal extends React.Component<Props>{\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('graphUploadInput') as HTMLInputElement);\r\n    if(input.files && input.files.length > 0){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const content = reader.result;\r\n        if(typeof content === 'string'){\r\n          try{\r\n            JSON.parse(content);\r\n            this.props.dispatch({\r\n              type: actions.LOAD_GRAPH,\r\n              payload: {\r\n                data: content,\r\n              }\r\n            });\r\n          }catch(e){\r\n            this.props.dispatch({type: actions.INVALID_GRAPH_ERROR});\r\n          }\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n      this.props.handleClose();\r\n    }else{\r\n      this.props.dispatch({\r\n        type: actions.NO_FILE_SELECTED_INFO,\r\n      });\r\n    }\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header className='modal-header' closeButton>\r\n            <Modal.Title>Seleccione un archivo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>El archivo debe contener un grafo valido, previamente descargado </p>\r\n            <input type=\"file\" id=\"graphUploadInput\"/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.uploadGraph()}>\r\n              Subir grafo\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UploadGraphModal);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  callback: (value: number) => void,\r\n  currentValue: number,\r\n  dispatch: (action:Object) => void,\r\n}\r\n\r\ntype storeState = {\r\n  selection: {weight: number},\r\n}\r\n\r\ntype State = {\r\n  text: string,\r\n}\r\n\r\nconst mapStateToProps = (state:storeState) => {\r\n  return {\r\n    currentValue: (state.selection ? state.selection.weight : 0),\r\n  }\r\n}\r\nclass InputModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValue.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    const {currentValue} = this.props;\r\n    if(currentValue != null && currentValue != prevProps.currentValue){\r\n      this.setState({\r\n        text: this.props.currentValue.toString(),\r\n      })\r\n    }\r\n  }\r\n\r\n  validateNumber(text: string) {\r\n    let regex = /^([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_INTEGER_ERROR,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateNumber(this.input.value)){\r\n      const text = this.input.value;\r\n      const value = parseInt(text);\r\n      this.props.callback(value);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    if(this.props.currentValue) this.setState({text: this.props.currentValue.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un numero entero</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El numero debe estar entre -999 y 999</p>\r\n          <input \r\n            id=\"IntInput\"\r\n            type=\"number\" \r\n            min={-999}\r\n            max={999}\r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputModal);","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nconst exportGraph = (cy: any) => {\r\n  const elements:Array<Object> = [];\r\n  cy.nodes().forEach((node:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'nodes',\r\n      data: {\r\n        id: node.id(),\r\n        value: node.data('value'),\r\n        style: node.data('style'),\r\n        position: node.data('position'),\r\n      },\r\n      position: node.data('position'),\r\n    })\r\n  });\r\n  cy.edges().forEach((edge:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'edges',\r\n      data: {\r\n        id: edge.id(),\r\n        source: edge.source().id(), target: edge.target().id(),\r\n        weight: edge.data('weight'),\r\n        style: edge.data('style'),\r\n        /*\r\n        style: {\r\n          lineColor: edge.style('line-color'),\r\n          targetArrowShape: edge.style('target-arrow-shape'),\r\n          targetArrowColor: edge.style('target-arrow-color'),\r\n          lineStyle: edge.style('line-style'),\r\n        }\r\n        */\r\n      }\r\n    })\r\n  });\r\n  //console.log(elements);\r\n  return JSON.parse(JSON.stringify(elements));\r\n}\r\n\r\n\r\nconst processCommands = (elements: Array<Object>, commands:Array<AnimationStep>) => {\r\n  \r\n  const cy = cytoscape({\r\n    elements: JSON.parse(JSON.stringify(elements)),\r\n    headless: true,\r\n  });\r\n\r\n  const steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number, action?: string}>=[];\r\n\r\n  let lastLines:Array<number> = [];\r\n  let action:string|undefined;\r\n  for(let pos = 0; pos < commands.length; pos++){\r\n    let { eles, distance, style, duration, inst, lines, data } = commands[pos];\r\n\r\n    if(duration == null) duration = 1000;\r\n    if(lines == null) lines = [];\r\n\r\n    steps.push({elements: exportGraph(cy), lines: lastLines, duration});\r\n    lastLines = lines;\r\n    if (eles) {\r\n      eles.forEach((ele, index) => {\r\n        let prevStyle = cy.getElementById(ele).data('style');\r\n        if(style) cy.getElementById(ele).data('style', {...prevStyle, ...style[index]});\r\n        if(data) cy.getElementById(ele).data('value', data[index].value);\r\n        if (distance !== undefined){\r\n          cy.getElementById(ele+'-popper').data('style', Styles.NODE_POPPER);\r\n          cy.getElementById(ele+'-popper').data('value', distance[index]);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(inst){\r\n      console.log(inst);\r\n      inst.forEach(ele => {\r\n        if(ele.name === 'update_level'){\r\n          const {data} = ele;\r\n          if(data){\r\n            const id = data.id, value = data.value;\r\n            if(id != null && value != null){\r\n              cy.getElementById(id+'-popper').data('style', Styles.NODE_POPPER);\r\n              cy.getElementById(id+'-popper').data('value', value);\r\n            }\r\n          }\r\n        }else if(ele.name === 'negative_cycle'){\r\n          action = actions.NEGATIVE_CYCLE_FOUND;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  steps.push({elements: exportGraph(cy), lines: lastLines, duration: 0, action});\r\n\r\n  return steps;\r\n}\r\n\r\nexport default processCommands;","const algorithmNames = {\r\n  BFS: 'BFS',\r\n  DFS: 'DFS',\r\n  Dijkstra: 'Dijkstra',\r\n  BellmanFord: 'BellmanFord',\r\n  Kruskal: 'Kruskal',\r\n  Prim: 'Prim',\r\n  MinHeap: 'MinHeap',\r\n  AVL: 'AVL',\r\n  BubbleSort: 'BubbleSort',\r\n  MergeSort: 'MergeSort',\r\n  BinarySearch: 'BusquedaBinaria',\r\n  SingleLinkedList: 'ListaEnlazada',\r\n  DoubleLinkedList: 'ListaDoblementeEnlazada',\r\n  Queue: 'Cola',\r\n  Stack: 'Pila',\r\n};\r\n\r\nexport default algorithmNames;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport {defaultGraphs} from '../resources/default_examples/defaultGraphs';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport MyModal from './UploadGraphModal';\r\nimport InputModal from './InputModal';\r\nimport graphProcessing from '../Processing/graph-processing';\r\nimport algoNames from '../resources/names_and_routes/algorithm_names'\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst autopanOnDrag = require('cytoscape-autopan-on-drag');\r\nautopanOnDrag(cytoscape);\r\n\r\ntype Props = {\r\n\t\r\n\tdispatch: (action: Object) => Object,\r\n\r\n\tweighted: Boolean,\r\n\tdirected: Boolean,\r\n\r\n\taction: string,\r\n\talgorithm: string,\r\n\texecute: (param: Object) => Array<AnimationStep>,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype storeState = {\r\n\tselection: Object,\r\n\talgorithm: string,\r\n\tanimation: Boolean,\r\n\tspeed: number,\r\n\tloadingGraph: Boolean,\r\n\tdata: string,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype State = {\r\n\tvalues: Array<string>,\r\n\tshowModal: boolean,\r\n\tshowWeightModal: boolean,\r\n}\r\n\r\nconst getNodeIdString = (nodeId: string) => {\r\n\treturn 'node-' + nodeId;\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tselection: state.selection,\r\n\t\talgorithm: state.algorithm,\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tloadingGraph: state.loadingGraph,\r\n\t\tdata: state.data,\r\n\t\tpaused: state.paused,\r\n\t}\r\n}\r\n\r\nclass Graph extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tstate = {\r\n\t\tvalues: new Array(),\r\n\t\tshowModal: false,\r\n\t\tshowWeightModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\t\r\n\toptions: Array<{name: string, run: () => void}>;\r\n\tcy = cytoscape();\r\n\r\n\tbuffer: Array<{elements: Array<Object>, lines: Array<number>, duration: number, action?:string}> = [];\r\n\r\n\tstep:number=0;\r\n\tanimationTimeout = 0;\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tif (this.props.weighted) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tthis.edgeStyle = { ...this.edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ejecutar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar peso',\r\n\t\t\t\trun: this.weightButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Descargar grafo',\r\n\t\t\t\trun: () => this._mediaRecorder.takeJson(this.exportGraph()),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Subir grafo',\r\n\t\t\t\trun: () => this.setState({showModal: true}),\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize([]);\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t\tremove: this.removeButton,\r\n\t\t\t\tclear: this.clearGraph,\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.props.action === actions.SELECT_DIJKSTRA){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:Props){\r\n\t\tif(!prevProps.loadingGraph && this.props.loadingGraph){\r\n\t\t\tconst elements = JSON.parse(this.props.data);\r\n\t\t\tif(elements){\r\n\t\t\t\tthis.pushState();\r\n\t\t\t\tthis.loadGraph(elements);\r\n\t\t\t}\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.FINISHED_LOAD,\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{ name: 'Volver a edicion', run: this.runButton}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else if(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: this.options,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\t\r\n\t\tthis._isMounted = false;\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._mediaRecorder.cancelGif();\r\n\t\tthis.removePoppers();\r\n\t}\r\n\r\n\r\n\tinitialize(elements: Array<Object>, withPoppers:boolean=false){\r\n\t\tconsole.log(elements);\r\n\t\t\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tif (this.props.weighted) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_WEIGHTED };\r\n\t\t}\r\n\t\tif (this.props.directed) {\r\n\t\t\tedgeStyle = { ...edgeStyle, ...Styles.EDGE_DIRECTED };\r\n\t\t}\r\n\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: JSON.parse(JSON.stringify(elements)),\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0'\r\n\t\t});\r\n\t\tif(!withPoppers) this.removePoppers();\r\n\t\telse{\r\n\t\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\t\tif(node.id().match('popper')) node.style({'visibility': 'hidden'});\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.cy.on('click', (event: CytoEvent) => this.handleClickViewport(event));\r\n\t\tthis.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n\t\tthis.cy.on('click', 'edge', (event: CytoEvent) => this.handleClickOnEdge(event.target));\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n\t\t});\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tconsole.log(this.undo);\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet elements = this.undo.pop();\r\n\t\tconsole.log(elements);\r\n\t\tthis.redo.push(currentElements);\r\n\t\t\r\n\t\tif(elements !== undefined) this.loadGraph(elements);\r\n\t\t\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tconst elements = this.redo.pop();\r\n\t\tthis.undo.push(currentElements);\r\n\t\tif(elements !== undefined) this.loadGraph(elements);\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tconsole.log(this.animationTimeout);\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconsole.log(this.step);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>, withPoppers:boolean = false){\r\n\t\ttry{\r\n\t\t\tconst nodes = this.cy.nodes();\r\n\t\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t\t}\r\n\t\t\tfor(let i = 0; i < elements.length; i++) this.cy.add(JSON.parse(JSON.stringify(elements[i])));\r\n\t\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\t\tconst style = node.data('style');\r\n\t\t\t\tif(style != null) node.style(style);\r\n\t\t\t})\r\n\t\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\t\tconst style = edge.data('style');\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t\tif(style != null) edge.style(style);\r\n\t\t\t})\r\n\t\t}catch(error){\r\n\t\t\tthis.props.dispatch({ type: actions.INVALID_GRAPH_ERROR});\r\n\t\t}\r\n\t}\r\n\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t\tzIndex: node.style('z-index'),\r\n\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tlineColor: edge.style('line-color'),\r\n\t\t\t\t\t\ttargetArrowShape: edge.style('target-arrow-shape'),\r\n\t\t\t\t\t\ttargetArrowColor: edge.style('target-arrow-color'),\r\n\t\t\t\t\t\tlineStyle: edge.style('line-style'),\r\n\t\t\t\t\t\tlabel: edge.style('label'),\r\n\t\t\t\t\t\ttextRotation: edge.style('text-rotation'),\r\n\t\t\t\t\t\ttextMarginY: edge.style('text-margin-y'),\t\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t\r\n\trefreshLayout() {\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n\t\tthis.layout.run();\r\n\t}\r\n\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tif(nodes.length === 0) return;\r\n\t\tthis.pushState();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tremoveNodePopper(node: string) {\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\r\n\t}\r\n\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.removeNodePopper(node);\r\n\t}\r\n\r\n\tremoveEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n\t}\r\n\r\n\tanimation(){\r\n\t\tlet step = () => {\r\n\t\t\tif(!this._isMounted) return;\r\n\t\t\tif(this.step === this.buffer.length){\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t});\r\n\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tconst {elements, lines, duration, action} = this.buffer[this.step++];\r\n\t\t\tif(action){\r\n\t\t\t\tthis.props.dispatch({ type: action });\r\n\t\t\t}\r\n\t\t\tthis.loadGraph(elements, true);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\texecuteAnimation = (commands:Array<AnimationStep>) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\tthis.buffer = graphProcessing(this.exportGraph(true), commands);\r\n\t\tlet notification;\r\n\t\tif(this.props.algorithm === algoNames.BFS) notification = actions.STARTING_BFS_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.DFS) notification = actions.STARTING_DFS_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Dijkstra) notification = actions.STARTING_DIJKSTRA_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.BellmanFord) notification = actions.STARTING_BELLMAN_FORD_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Kruskal) notification = actions.STARTING_KRUSKAL_INFO;\r\n\t\telse if(this.props.algorithm === algoNames.Prim) notification = actions.STARTING_PRIM_INFO;\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: notification,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n\t}\r\n\r\n\trunButton = () => {\r\n\t\tif (this.props.animation === true) {\r\n\t\t\t//this.setState({values: Array()});\r\n\t\t\tnew Promise((resolve) => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t});\r\n\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => {this.handleUndo(); this.redo.pop()});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.pushState();\r\n\t\tlet { selection } = this.props;\r\n\t\tif (this.props.algorithm !== algoNames.Kruskal && this.props.algorithm !== algoNames.Prim) {\r\n\t\t\tconsole.log(this.props.algorithm);\r\n\t\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_NODE_SELECTED_ERROR,\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.createPopper(node.id());\r\n\t\t});\r\n\t\tthis.refreshLayout();\r\n\t\tlet animationPromise = new Promise((resolve: (commands:Array<AnimationStep>) => void, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tlet commands = this.props.execute({ cy: this.cy, selection: this.props.selection });\r\n\t\t\tresolve(commands);\r\n\t\t});\r\n\r\n\t\tanimationPromise.then((commands:Array<AnimationStep>) => {\r\n\t\t\tthis.cy.autolock(true);\r\n\r\n\t\t\tthis.executeAnimation(commands);\r\n\t\t});\r\n\t}\r\n\r\n\tremoveButton = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet { selection } = this.props;\r\n\t\tif (!selection) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_ELEMENT_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pushState();\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tthis.removeNode(selection.id);\r\n\t\t} else if (selection.type === 'edge') {\r\n\t\t\tthis.removeEdge(selection.id);\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t}\r\n\thandleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet nodeId = node.id();\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tif (!selection || selection.type !== 'node') {\r\n\t\t\tnode.style(Styles.NODE_SELECTED);\r\n\r\n\t\t\tif (selection && selection.type === 'edge') {\r\n\t\t\t\tlet edge = this.cy.getElementById(selection.id);\r\n\t\t\t\tedge.style(this.edgeStyle);\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\tid: nodeId, type: 'node'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selection.type === 'node') {\r\n\t\t\tlet prevNode = selection.id;\r\n\t\t\tif (prevNode === nodeId) {\r\n\t\t\t\tnode.style(Styles.NODE);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tlet previous = this.cy.getElementById(prevNode);\r\n\t\t\t\tif (prevNode) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(this.props.directed && !previous.outgoers().contains(node)) ||\r\n\t\t\t\t\t\t(!this.props.directed && !previous.neighborhood().contains(node))) {\r\n\t\t\t\t\t\tthis.createEdge(prevNode, nodeId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tselection: null,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickOnEdge = (edge: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n\t\tlet edgeId = edge.id();\r\n\r\n\t\tlet { selection } = this.props;\r\n\r\n\t\tlet prevId = null;\r\n\t\tif (selection) {\r\n\t\t\tprevId = selection.id;\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tif (selection.type === 'edge') {\r\n\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t} else if (selection.type === 'node') {\r\n\t\t\t\tprevious.style(this.nodeStyle);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (prevId === edgeId) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: null,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet previous = this.cy.getElementById(prevId);\r\n\t\t\tprevious.style(this.edgeStyle);\r\n\t\t} else {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tid: edgeId,\r\n\t\t\t\t\t\tweight: this.cy.getElementById(edgeId).data('weight'),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tedge.style(Styles.EDGE_SELECTED);\r\n\t\t}\r\n\t}\r\n\r\n\tcreateNode(x: string, y: string) {\r\n\t\tlet id = 1;\r\n\t\twhile (this.cy.getElementById(getNodeIdString(id.toString())).length > 0) {\r\n\t\t\tid++;\r\n\t\t}\r\n\t\tlet nodeId = getNodeIdString(id.toString());\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId, value: id },\r\n\t\t\tposition: { x, y }\r\n\t\t});\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper'},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t\t'visibility': 'hidden',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremovePoppers(){\r\n\t\t\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id()+'-popper');\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tcreateEdge(x: string, y: string) {\r\n\t\tthis.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tweight: Math.floor(Math.random() * 15),\r\n\t\t\t\tsource: x,\r\n\t\t\t\ttarget: y,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tchangeWeight = (weight: number) => {\r\n\t\tconst { selection } = this.props;\r\n\t\tif (selection.type === 'edge') {\r\n\t\t\tconst { id } = selection;\r\n\t\t\tif(this.cy.getElementById(id).data('weight') === weight) return;\r\n\t\t\tthis.pushState();\r\n\t\t\tthis.cy.getElementById(id).data('weight', weight);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.SELECTION,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tselection: {\r\n\t\t\t\t\t\ttype: 'edge',\r\n\t\t\t\t\t\tweight,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tweightButton = () => {\r\n\t\tconst {selection} = this.props;\r\n\t\tif(selection && selection.type === 'edge'){\r\n\t\t\tthis.setState({showWeightModal: true});\r\n\t\t}else{\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.NO_EDGE_SELECTED_ERROR,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickViewport = (event: CytoEvent) => {\r\n\t\tif (this.props.animation === true){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet { selection } = this.props;\r\n\t\tif (event.target === this.cy) {\r\n\t\t\tif (selection) {\r\n\t\t\t\tlet previous = this.cy.getElementById(selection.id);\r\n\t\t\t\tif (selection.type === 'node') {\r\n\t\t\t\t\tprevious.style(Styles.NODE);\r\n\t\t\t\t} else if (selection.type === 'edge') {\r\n\t\t\t\t\tprevious.style(this.edgeStyle);\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.dispatch({ type: actions.NO_SELECTION });\r\n\t\t\t} else {\r\n\t\t\t\tlet { x, y } = event.position;\r\n\t\t\t\tthis.createNode(x, y);\r\n\t\t\t\tthis.refreshLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet edgeWeight = null;\r\n\t\tlet { selection } = this.props;\r\n\t\tif (selection && selection.type === 'edge') {\r\n\t\t\tconst id = selection.id;\r\n\t\t\tedgeWeight = this.cy.getElementById(id).data('weight');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<MyModal show={this.state.showModal} handleClose={() => this.setState({showModal: false})}/>\r\n\t\t\t\t<InputModal \r\n\t\t\t\t\tshow={this.state.showWeightModal} \r\n\t\t\t\t\thandleClose = {() => this.setState({showWeightModal: false})}\r\n\t\t\t\t\tcallback = {(w:number) => this.changeWeight(w)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id = \"canvas\" className=\"standard-struct\"/>\r\n\t\t\t\t{\r\n\t\t\t\t\t/*\r\n\t\t\t\t<GraphArray array={this.state.values}/>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ControlBar\r\n\t\t\t\t\t\trun={this.runButton}\r\n\t\t\t\t\t\tremove={this.removeButton}\r\n\t\t\t\t\t\tclearGraph={this.clearGraph}\r\n\t\t\t\t\t\tchangeWeight={this.changeWeight}\r\n\t\t\t\t\t\tweighted={this.props.weighted}\r\n\t\t\t\t\t\tedgeWeight={edgeWeight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takePicture(this.cy)}>Test picture</button>\r\n\t\t\t\t\t<button onClick={() => this._mediaRecorder.takeGif(this.cy)}>Test gif</button>\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport { validateHeap } from '../utils/heap-utils';\r\nimport actions from '../Actions/actions';\r\n\r\nconst { connect } = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  changeArray: (values: Array<number>) => void;\r\n  handleClose: () => void,\r\n  dispatch: (action:Object)=>void,\r\n\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputHeapModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('HeapUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        console.log(reader.result);\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})[,]){0,15})([-]?([0-9]{1,3}))$/;\r\n    console.log(text);\r\n    if (text && regex.test(text)) {\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      if(validateHeap(values)){\r\n        this.props.changeArray(values);\r\n        this.props.handleClose();\r\n      }else{\r\n        this.props.dispatch({\r\n          type: actions.INVALID_HEAP_ERROR,\r\n        });\r\n      }\r\n    } else {\r\n      this.props.dispatch({\r\n        type: actions.INVALID_HEAP_ERROR,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un Heap valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"HeapUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputHeapModal);","export function validateHeap(values){\r\n  const n = values.length;\r\n  console.log('VALIDANDO', values);\r\n  for(let i = 1; 2*i < n; i++){\r\n    const left = values[2*i], right = ((2*i + 1) === n ? Infinity : values[2*i+1]);\r\n    console.log(values[i], left, right);\r\n    if(left < values[i] || right < values[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function parseHeap(values){\r\n  const output = values.toString();\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}","export const remove = [\r\n  {text: 'extraer_minimo(Arreglo A de longitud n)', ind: 0},\r\n  {text: 'intercambiar(A[1], A[n])', ind: 1},\r\n  {text: 'n--', ind: 1},\r\n  {text: 'hundir(1)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'hundir(Entero i): ', ind: 0},\r\n  {text: 'Si no es_hoja(i):', ind: 1},\r\n  {text: 'Si A[2*i] < A[2*i+1]:', ind: 2},\r\n  {text: 'h = 2*i', ind: 3},\r\n  {text: 'Sino: ', ind : 2},\r\n  {text: 'h = 2*i+1', ind: 3},\r\n  {text: 'Si A[i] > A[h]:', ind: 2},\r\n  {text: 'hundir(h)', ind: 3},\r\n]\r\n\r\nexport const insert = [\r\n\r\n  {text: 'insertar(Arreglo A de longitud n, Entero v):', ind: 0},\r\n  {text: 'A[n++] = v', ind: 1},\r\n  {text: 'flotar(n)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'flotar(entero i):', ind: 0},\r\n  {text: 'Si i/2 > 0 y A[i/2] > A[i]:', ind: 1},\r\n  {text: 'intercambiar(A[i/2], A[i])', ind: 2},\r\n  {text: 'flotar(i/2)', ind: 2},\r\n];\r\n\r\nexport const heap = [\r\n  { text: 'MinHeap{', ind: 0},\r\n  { text: 'Arreglo A', ind: 1},\r\n  { text: 'insertar(entero v)', ind: 1},\r\n  { text: 'extraer_minimo()', ind: 1},\r\n  { text: 'flotar(entero i)', ind: 1},\r\n  { text: 'hundir(entero i)', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n","const Styles = require('../../Styles/Styles')\r\nclass PriorityQueue {\r\n\t_data = [0];\r\n\t_comp = null;\r\n\t_eq = null\r\n\r\n\tconstructor(_comp = (x, y) => x >= y, _eq = (x, y) => x === y) {\r\n\t\tthis._comp = _comp;\r\n\t\tthis._eq = _eq;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\treturn this._data.length === 1;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this._data.length;\r\n\t}\r\n\t\r\n\ttop() {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this._data[1];\r\n\t}\r\n\r\n\tpush(ele, animation = false) {\r\n\t\tconst commands = [];\r\n\t\tthis._data.push(ele);\r\n\t\tlet pos = this._data.length - 1;\r\n\t\tif (animation) {\r\n\t\t\tcommands.push({\r\n\t\t\t\teles: [pos.toString()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\tlines: [4],\r\n\t\t\t});\r\n\t\t}\r\n\t\twhile (pos > 1) {\r\n\t\t\tlet parent = Math.floor(pos / 2);\r\n\t\t\tif (this._comp(this._data[parent], this._data[pos]) || this._eq(this._data[parent], this._data[pos])) {\r\n\t\t\t\tif (animation) {\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_CORRECT],\r\n\t\t\t\t\t\t\tclasses: ['heap-correct'],\r\n\t\t\t\t\t\t\tlines: [-1],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString()],\r\n\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\tlines: [5,6,7],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [parent.toString(), pos.toString()],\r\n\t\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[pos] },\r\n\t\t\t\t\t\t\t\t{ 'value': this._data[parent] }\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tclasses:\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [4],\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t[this._data[parent], this._data[pos]] = [this._data[pos], this._data[parent]];\r\n\t\t\tpos = parent;\r\n\t\t}\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tpop(animation = false) {\r\n\t\tconst commands = [];\r\n\t\tif (!this.isEmpty()) {\r\n\t\t\tlet x = this._data[this._data.length - 1];\r\n\t\t\tthis._data.pop();\r\n\t\t\tif (this.isEmpty()) return commands;\r\n\t\t\tlet pos = 1;\r\n\t\t\tthis._data[1] = x;\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [pos.toString()],\r\n\t\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\t\tclasses: ['heap-focus'],\r\n\t\t\t\t\tlines: [5],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\twhile (2 * pos < this._data.length) {\r\n\t\t\t\t\r\n\t\t\t\tlet l = this._data[2 * pos],\r\n\t\t\t\t\tr = (2 * pos + 1 < this._data.length ? this._data[2 * pos + 1] : null);\r\n\t\t\t\tx = this._data[pos];\r\n\t\t\t\tif (r == null) {\r\n\t\t\t\t\tif (this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ((this._comp(l, r) || this._eq(l, r)) && this._comp(l, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [7, 8],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11, 12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos], this._data[pos]] = [this._data[pos], this._data[2 * pos]];\r\n\t\t\t\t\t\tpos = 2 * pos;\r\n\t\t\t\t\t} else if ((this._comp(r, l) || this._eq(r, l)) && this._comp(r, x)) {\r\n\t\t\t\t\t\tif (animation) {\r\n\t\t\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [(2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [Styles.NODE_WRONG],\r\n\t\t\t\t\t\t\t\t\tclasses: ['heap-wrong'],\r\n\t\t\t\t\t\t\t\t\tlines: [9, 10],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\teles: [pos.toString(), (2 * pos + 1).toString()],\r\n\t\t\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE,\r\n\t\t\t\t\t\t\t\t\t\tStyles.NODE_BLACK,\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[2 * pos + 1] },\r\n\t\t\t\t\t\t\t\t\t\t{ 'value': this._data[pos] }\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tclasses: [\r\n\t\t\t\t\t\t\t\t\t\t'heap-default',\r\n\t\t\t\t\t\t\t\t\t\t'heap-focus',\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\tlines: [11,12],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t[this._data[2 * pos + 1], this._data[pos]] = [this._data[pos], this._data[2 * pos + 1]];\r\n\t\t\t\t\t\tpos = 2 * pos + 1;\r\n\t\t\t\t\t} else break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tclear(){\r\n\t\twhile(!this.isEmpty()) this.pop();\r\n\t}\r\n}\r\n\r\nexport default PriorityQueue;","import { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nclass HeapProcessor{\r\n\theap = new PriorityQueue((x, y) => x < y, (x, y) => x === y);\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  constructor(vw: number, vh: number){\r\n    this.vh = vh; this.vw = vw; \r\n  }\r\n\r\n  loadGraph(elements:Array<Object>=[]){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n\r\n    this.heap._data = [0];\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        this.heap._data[parseInt(node.id())] = node.data('value');\r\n        node.data('style', Styles.NODE);\r\n      }else{\r\n        node.data('style', Styles.NODE_POPPER);\r\n      }\r\n    });\r\n    console.log(this.heap._data);\r\n  }\r\n  \r\n\texportGraph = () => {\r\n    const elements:Array<Object> = [];\r\n    this.layoutProcessing();\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          id: node.id(),\r\n          value: node.data('value'),\r\n          style: node.data('style'),\r\n          position: node.data('position'),\r\n        },\r\n        position: prev,\r\n      })\r\n    });\r\n    this.cy.edges().forEach((edge:CytoscapeElement) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          id: edge.id(),\r\n          source: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n          /*\r\n          style: {\r\n            lineColor: edge.style('line-color'),\r\n            targetArrowShape: edge.style('target-arrow-shape'),\r\n            targetArrowColor: edge.style('target-arrow-color'),\r\n            lineStyle: edge.style('line-style'),\r\n          }\r\n          */\r\n        }\r\n      })\r\n    });\r\n    //console.log(elements);\r\n    return JSON.parse(JSON.stringify(elements));\r\n  }\r\n  \r\n  createPopper(nodeId: string, value: number){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.data('position');\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {\r\n        id : nodeId+'-popper', \r\n        value,\r\n        style: Styles.NODE_POPPER,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y+30,\r\n        },\r\n      },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { \r\n          id: node.toString(), \r\n          value, \r\n          position: {x:position.x, y: position.y}\r\n        },\r\n        position: {x:position.x, y: position.y},\r\n      },\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n  }\r\n  \r\n  layoutProcessing() {\r\n    if(this.heap._data.length === 0) return;\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', prevPosition);\r\n      node.data('position', { x: nx, y: ny });\r\n      const popper = this.cy.getElementById(node.id() + '-popper');\r\n      const prevPopPosition = popper.data('position');\r\n      popper.data('prevPosition', prevPopPosition);\r\n\t\t\tpopper.data('position', { x: nx, y: ny + 30 });\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tsetSep(this.cy.getElementById(\"1\"), this.vw / 2, this.vh / 4, sep);\r\n\t\treturn true;\r\n  }\r\n  \r\n\tprocessCommands(commands: Array<AnimationStep>){\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif(!node.id().match('-popper')){\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n    })\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n    let lastLines:Array<number> = [];\r\n    let lastDuration = 0;\r\n    for(let pos = 0; pos < commands.length; pos++){\r\n      let { eles, style, duration, data, classes, lines} = commands[pos];\r\n      if(duration == null) duration = 1000;\r\n      if(lines == null) lines = [];\r\n\r\n      steps.push({elements: this.exportGraph(), lines: lastLines, duration: lastDuration});\r\n      lastLines = lines;\r\n      lastDuration = duration;\r\n      if (eles) {\r\n        eles.forEach((ele, index) => {\r\n          if(style){\r\n            const node = this.cy.getElementById(ele);\r\n            node.data('style', style[index]);\r\n          }\r\n          if(data != null){\r\n            this.cy.getElementById(ele).data(data[index]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    steps.push({elements: this.exportGraph(), lines: lastLines, duration: 1000});\r\n    return steps;\r\n  }\r\n\r\n\tinsert(val = 0) {\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n\r\n\t\tif (this.heap.length()-1 === 0) {\r\n      this.addNode(\"1\", val);\r\n      steps.push({\r\n        elements: this.exportGraph(),\r\n        duration: 1000,\r\n        lines: [1,2,3,4]\r\n      });\r\n      const commands = this.heap.push(val, true);\r\n      steps = steps.concat(this.processCommands(commands));\r\n\t\t} else {\r\n\t\t\tlet nodeId = this.heap.length();\r\n\t\t\tconsole.log(nodeId);\r\n\t\t\tlet src = this.cy.getElementById(Math.floor(nodeId / 2).toString());\r\n\t\t\tthis.addNode(nodeId.toString(), val, src.data('position'));\r\n\t\t\tthis.cy.add(\r\n\t\t\t\t{\r\n\t\t\t\t\tgroup: 'edges',\r\n\t\t\t\t\tdata: { id: src.id() + '-' + nodeId.toString(), source: src.id(), target: nodeId.toString() }\r\n\t\t\t\t}\r\n      )\r\n      steps.push({\r\n        elements: this.exportGraph(),\r\n        duration: 1000,\r\n        lines: [1,2,3,4]\r\n      });\r\n      const commands = this.heap.push(val, true);\r\n      steps = steps.concat(this.processCommands(commands));\r\n\t\t}\r\n\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }\r\n    });\r\n    steps.push({elements: this.exportGraph(), lines: [], duration: 0});\r\n    return steps;\r\n\t}\r\n\r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n  }\r\n  \r\n\tremove = () => {\r\n\t\tconst n = this.heap.length()-1;\r\n\t\tconst outgoers = this.cy.getElementById(\"1\").outgoers('node');\r\n\t\tthis.removeNode(\"1\");\r\n    let commands:Array<AnimationStep>;\r\n\t\tcommands = this.heap.pop(true);\r\n\r\n\t\tif (n === 1) {\r\n\t\t\treturn [{ elements: this.exportGraph(), lines: [], duration: 1000}];\r\n\t\t}\r\n\r\n\t\tconst position = this.cy.getElementById(n.toString()).data('position');\r\n\t\tconst value = this.cy.getElementById(n.toString()).data('value');\r\n\t\tthis.removeNode(n.toString());\r\n\r\n\t\tthis.addNode(\"1\", value, position);\r\n\r\n    let steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];    \r\n\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\tif (this.cy.getElementById(outgoers[i].id()).length === 0) continue;\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: { id: \"1-\" + outgoers[i].id(), source: \"1\", target: outgoers[i].id() }\r\n\t\t\t});\r\n\t\t}\r\n    steps = steps.concat({elements: this.exportGraph(), lines: [], duration: 1000});\r\n\r\n    steps = steps.concat(this.processCommands(commands));\r\n\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }\r\n    });\r\n    steps.push({elements: this.exportGraph(), lines: [], duration: 0});\r\n    return steps;\r\n\t}\r\n}\r\n\r\nexport default HeapProcessor;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\nimport downloadGif from '../utils/gifshot-utils';\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\nimport InputHeapModal from './InputHeapModal';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport { parseHeap } from '../utils/heap-utils';\r\nimport InputModal from './InputModal';\r\nimport { insert, remove } from '../resources/pseudocodes/heap';\r\nimport HeapProcessor from '../Processing/heap-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n\tname: string,\r\n\tpositions: { [id: string]: { x: number, y: number } },\r\n\tpadding: number,\r\n\tanimate: boolean,\r\n\tanimationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n\tname: 'preset',\r\n\tpositions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n\tpadding: 30, // padding on fit\r\n\tanimate: true, // whether to transition the node positions\r\n\tanimationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Element = {\r\n\tvalue: number,\r\n\tclass: string,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tshowInsertModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n\theap: Array<number>,\r\n\telements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n\tanimation: boolean,\r\n\tspeed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n\treturn {\r\n\t\tanimation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n\t}\r\n}\r\nclass Heap extends React.Component<Props, State>{\r\n\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n\tundo: Array<Array<Object>> = [];\r\n\tredo: Array<Array<Object>> = [];\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tshowInsertModal: false,\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\tedgeStyle = Styles.EDGE;\r\n\tcy = cytoscape();\r\n\r\n\theapProcessor:any;\r\n\tbuffer: Array<{ elements: Array<Object>, lines: Array<number>, duration: number }> = [];\r\n\toptions: Array<{ name: string, run: () => void }>;\r\n\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Insertar',\r\n\t\t\t\trun: () => this.setState({ showInsertModal: true }),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Extraer minimo',\r\n\t\t\t\trun: this.remove,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Subir Heap',\r\n\t\t\t\trun: () => this.setState({ show: true }),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Descargar Heap',\r\n\t\t\t\trun: () => { \r\n\t\t\t\t\tif(!this.props.animation) parseHeap(this.heapProcessor.heap._data)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\tinitialize() {\r\n\t\tlet edgeStyle = Styles.EDGE;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: [],\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: Styles.NODE,\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif (node.id().match('-popper')) {\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.cy.on('resize', () => this.refreshLayout(false));\r\n\t\tthis.layout = this.cy.elements().makeLayout({ ...layoutOptions, animate: false });\r\n\t\tthis.layout.run();\r\n\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tthis.initialize();\r\n\t\tthis.heapProcessor = new HeapProcessor(this.cy.width(), this.cy.height());\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\tclear: this.clearGraph,\r\n\t\t\t\tremove: null,\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tlayoutOptions.animationDuration = 500 / this.props.speed;\r\n\r\n\t\tif (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n\t\t\t\t\t\t\t\tthis.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n\t\t\t\t\t\t\t\tthis.props.dispatch({ type: actions.ANIMATION_END })\r\n\t\t\t\t\t\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif (this.undo.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\r\n\t\tlet state = this.undo.pop();\r\n\t\tif (state !== undefined) {\r\n\t\t\tthis.redo.push(currentElements);\r\n\t\t\tthis.loadGraph(state);\r\n\t\t\tthis.heapProcessor.loadGraph(state);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif (this.redo.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\r\n\t\tlet state = this.redo.pop();\r\n\t\tif (state !== undefined) {\r\n\t\t\tthis.undo.push(currentElements);\r\n\t\t\tthis.loadGraph(state);\r\n\t\t\tthis.heapProcessor.loadGraph(state);\r\n\t\t}\r\n\t}\r\n\r\n\tpushState() {\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push(this.exportGraph());\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\r\n\tloadGraph(elements: Array<Object>) {\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n\t\t\tconst position = node.data('position');\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\r\n\texportGraph() {\r\n\t\tconst elements: Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: {\r\n\t\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstyle: node.style(),\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tcreatePopper(nodeId: string, value: number) {\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id: nodeId + '-popper', value },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y + 30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\taddNode(node: string, value: number, position: { x: number, y: number } = { x: 0, y: 0 }) {\r\n\t\tthis.cy.add(\r\n\t\t\t{\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: { id: node.toString(), value },\r\n\t\t\t\tgrabbable: false,\r\n\t\t\t\tpannable: false,\r\n\t\t\t\tposition: { x: position.x, y: position.y },\r\n\t\t\t},\r\n\t\t)\r\n\t\tthis.createPopper(node, parseInt(node));\r\n\t}\r\n\tremoveNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n\t\tthis.cy.remove('node[id=\"' + node + '-popper\"]');\r\n\t}\r\n\r\n\tanimation() {\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst { elements, lines, duration } = this.buffer[this.step++];\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif (lines) this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines } });\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration) / (this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n\texecuteAnimation = () => {\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tif (!node.id().match('-popper')) {\r\n\t\t\t\tnode.style({\r\n\t\t\t\t\t'background-color': 'white',\r\n\t\t\t\t\t'color': 'black',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tnew Promise((resolve, reject) => {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_START,\r\n\t\t\t});\r\n\t\t\tresolve();\r\n\t\t}).then(() => {\r\n\t\t\tthis.step = 0;\r\n\t\t\tthis.animation();\r\n\t\t})\r\n\t}\r\n\r\n\trefreshLayout(animate: boolean = true) {\r\n\t\tthis.layoutProcessing();\r\n\t\tthis.layout.stop();\r\n\t\tthis.layout = this.cy.elements().makeLayout({ ...layoutOptions, animate });\r\n\t\tthis.layout.run();\r\n\t}\r\n\t\r\n\tclearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tif(nodes.length === 0) return;\r\n\t\tthis.pushState();\r\n\t\tthis.heapProcessor.loadGraph();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n\tlayoutProcessing() {\r\n\t\tconst getHeight = (node: CytoscapeElement) => {\r\n\t\t\tlet outgoers = node.outgoers('node');\r\n\t\t\tlet height = 0;\r\n\t\t\tfor (let i = 0; i < outgoers.length; i++) {\r\n\t\t\t\theight = Math.max(height, getHeight(outgoers[i]));\r\n\t\t\t}\r\n\t\t\treturn height + 1;\r\n\t\t}\r\n\t\tlet height = getHeight(this.cy.getElementById(\"1\"));\r\n\r\n\t\tlet sep = (1 << height) * 5;\r\n\r\n\t\tconst setSep = (node: CytoscapeElement, nx: number, ny: number, sep: number) => {\r\n\t\t\tlayoutOptions.positions[node.id()] = { x: nx, y: ny }\r\n\t\t\tnode.data('position', {x: nx, y: ny});\r\n\t\t\tconst popper = this.cy.getElementById(node.id() + '-popper');\r\n\t\t\tlayoutOptions.positions[popper.id()] = { x: nx, y: ny + 30 }\r\n\t\t\tpopper.data('position', {x: nx, y: ny+30});\r\n\t\t\tif (node.outgoers('node').length) setSep(node.outgoers('node')[0], nx - sep, ny + 50, sep / 2);\r\n\t\t\tif (node.outgoers('node').length === 2) setSep(node.outgoers('node')[1], nx + sep, ny + 50, sep / 2);\r\n\t\t}\r\n\t\tconst vw = this.cy.width(), vh = this.cy.height();\r\n\t\tsetSep(this.cy.getElementById(\"1\"), vw / 2, vh / 4, sep);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tinsert(val = 0) {\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: insert,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.buffer = this.heapProcessor.insert(val);\r\n\t\tconsole.log(this.buffer);\r\n\t\tthis.executeAnimation();\r\n\t}\r\n\r\n\tremove = () => {\r\n\t\tif (this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CHANGE_PSEUDO,\r\n\t\t\tpayload: {\r\n\t\t\t\tpseudo: remove,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.buffer = this.heapProcessor.remove();\r\n\t\tconsole.log(this.buffer);\r\n\t\tthis.executeAnimation();\r\n\t}\r\n\r\n\tchangeArray(values: Array<number>) {\r\n\t\tthis.pushState();\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t});\r\n\t\tthis.heapProcessor.heap.clear();\r\n\t\tfor(let i = 1; i < values.length; i++){\r\n\t\t\tthis.addNode(i.toString(), values[i]);\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i < values.length; i++){\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: i.toString() + '-' + (2*i).toString(),\r\n\t\t\t\t\tsource: i.toString(),\r\n\t\t\t\t\ttarget: (2*i).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfor(let i = 1; 2*i+1 < values.length; i++){\r\n\t\t\tthis.cy.add({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: i.toString() + '-' + (2*i+1).toString(),\r\n\t\t\t\t\tsource: i.toString(),\r\n\t\t\t\t\ttarget: (2*i+1).toString(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.refreshLayout();\r\n\t\tthis.heapProcessor.loadGraph(this.exportGraph());\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<InputHeapModal\r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tchangeArray={(values: Array<number>) => this.changeArray(values)}\r\n\t\t\t\t\thandleClose={() => this.setState({ show: false })}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputModal\r\n\t\t\t\t\tshow={this.state.showInsertModal}\r\n\t\t\t\t\thandleClose={() => this.setState({ showInsertModal: false })}\r\n\t\t\t\t\tcallback={(v: number) => this.insert(v)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct' />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Heap);","export function isLeaf(node){\r\n  return node.outgoers('node').length === 0;\r\n}\r\n\r\nexport function getChildren(node){\r\n  let left = null, right = null;\r\n  let outgoers = node.outgoers('node');\r\n\r\n  if (outgoers.length >= 1) left = outgoers[0];\r\n  if (outgoers.length === 2) right = outgoers[1];\r\n  if (left != null && right != null && left.data('value') > right.data('value')) {\r\n    [left, right] = [right, left];\r\n  }else if(left != null && left.data('value') > node.data('value')){\r\n    [left, right] = [right, left];\r\n  }else if(right != null && right.data('value') < node.data('value')){\r\n    [left, right] = [right,left];\r\n  }\r\n\r\n  return [left, right];\r\n}\r\n\r\n\r\nexport function lca(cy, x, y){\r\n  while(x.id() !== y.id()){\r\n    if(x.data('depth') < y.data('depth')) y = cy.getElementById(y.data('prev'));\r\n    else if(x.data('depth') > y.data('depth')) x = cy.getElementById(x.data('prev'));\r\n    else{\r\n      x = cy.getElementById(x.data('prev'));\r\n      y = cy.getElementById(y.data('prev'));\r\n    }\r\n  }\r\n  return x;\r\n}\r\nfunction leftmost(node){\r\n  while(true){\r\n    const left = getChildren(node)[0];\r\n    if(left == null) return node;\r\n    node = left;\r\n  }\r\n}\r\n\r\nexport function inorderSuccessor(node){\r\n  const right = getChildren(node)[1];\r\n  return leftmost(right);  \r\n}\r\n\r\nexport function getHeight(node){\r\n  if(!node) return 0;\r\n  return node.data('height');\r\n}\r\n\r\nexport function validateAVL(text, addNode, addEdge, clearGraph){\r\n  let pos = 0, n = text.length, id = 0;\r\n  const nodes = [], edges = [];\r\n  const recursion = (min, max, parent=-1) => {\r\n    if(text[pos] === '.'){\r\n      pos++;\r\n      return {correct: true, height: 0, balance: 0};\r\n    }\r\n    let sign = 1;\r\n    if(text[pos] === '-'){\r\n      sign = -1; pos++;\r\n    }\r\n    if(pos === n || text[pos] < '0' || text[pos] > '9'){\r\n      return {correct: false};\r\n    }\r\n    let value = 0;\r\n    while(pos < n && text[pos] >= '0' && text[pos] <= '9'){\r\n      value = (value*10) + parseInt(text[pos++]);\r\n    }\r\n    value = value*sign;\r\n    if(value <= min || value >= max) return {correct: false}\r\n    const current = id++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const left = recursion(min, value, current);\r\n    if(!left.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n    if(pos === n || text[pos] !== '(') return {correct: false}\r\n    pos++;\r\n    const right = recursion(value, max, current);\r\n    if(!right.correct || pos === n || text[pos] !== ')') return {correct: false}\r\n    pos++;\r\n\r\n    const height = Math.max(left.height, right.height) + 1;\r\n    const balance = right.height - left.height;\r\n\r\n    if(Math.abs(balance) > 1) return {correct: false};\r\n    nodes.push({id: current.toString(), value, height, balance});\r\n    if(parent !== -1){\r\n      edges.push({\r\n        source: parent.toString(),\r\n        target: current.toString(),\r\n      });\r\n    }\r\n    return {correct: true, height, balance};\r\n  }\r\n\r\n  const valid = recursion(-Infinity, Infinity);\r\n  if(!valid || pos !== n){\r\n    return false;\r\n  }\r\n\r\n  clearGraph();\r\n  nodes.forEach(node => {\r\n    addNode(node.id, node.value, node.height, node.balance);\r\n  });\r\n  edges.forEach(edge => {\r\n    addEdge(edge.source, edge.target);\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport function parseAVL(root){\r\n  let output = \"\";\r\n  if(root.length === 0) return output;\r\n  const recursion = node => {\r\n    if(!node){\r\n      output += \".\";\r\n      return;\r\n    }\r\n    output += node.data('value').toString();\r\n    const [left, right] = getChildren(node);\r\n    output += \"(\"; recursion(left); output += \")\";\r\n    output += \"(\"; recursion(right); output += \")\";\r\n  }\r\n\r\n  recursion(root);\r\n\r\n  let link = document.createElement('a');\r\n  link.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(output));\r\n  link.setAttribute('download', 'avl.txt');\r\n  link.setAttribute('target', '_blank');\r\n  link.style.display = 'none';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return output;\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport {validateAVL} from '../utils/avl-utils';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: (update?: boolean) => void,\r\n  addNode: (id: string, value: number) => void,\r\n  addEdge: (source: string, target: string) => void,\r\n  clearGraph: () => void,\r\n  dispatch: (action:Object) => void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputAVLModal extends React.Component<Props, State>{\r\n\r\n  state = {\r\n    text: '',\r\n  }\r\n\r\n  uploadGraph = () => {\r\n    const input = (document.getElementById('AVLUploadInput') as HTMLInputElement);\r\n    if(input.files){\r\n      const file = input.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        if(typeof reader.result === 'string'){\r\n          const text = reader.result;\r\n          this.validateArray(text);\r\n        }\r\n      }\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    const {addNode, addEdge, clearGraph} = this.props;\r\n    let regex = /^([^0-9().-]|([0-9]{4,})|([.]{2,}))/;\r\n    if (text && regex.test(text)) {\r\n      this.props.dispatch({type: actions.INVALID_AVL_ERROR})\r\n      return false;\r\n    } else {\r\n      if(validateAVL(text, addNode, addEdge, clearGraph)) this.props.handleClose(true);\r\n      else{\r\n        this.props.dispatch({type: actions.INVALID_AVL_ERROR})\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Seleccione un archivo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>El archivo debe contener un arbol AVL valido, previamente descargado</p>\r\n          <input type=\"file\" id=\"AVLUploadInput\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.uploadGraph}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputAVLModal);","export function edgeId(x, y){\r\n  return x + '-' + y;\r\n}","export const insert = [\r\n  {text: 'insertar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL', ind: 1},\r\n  {text: 'u = nuevo nodo(v)', ind: 2},\r\n  {text: 'Sino si v < u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino si v > u.valor:', ind: 1},\r\n  {text: 'insertar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const remove = [\r\n  { text: 'eliminar(nodo u):', ind: 0},\r\n  { text: 'Si es_hoja(u): borrar u', ind: 1},\r\n  { text: 'Sino: ', ind: 1},\r\n  { text: 'Si hijos(u) == 1:', ind: 2},\r\n  { text: 'eliminar(hijo(u))', ind: 3},\r\n  { text: 'Sino: ', ind: 2},\r\n  { text: 'nodo s = sucesor(u)', ind: 3},\r\n  { text: 'intercambiar(u.valor, s.valor)', ind: 3},\r\n  { text: 'borrar s', ind: 3},\r\n];\r\n\r\nexport const balance = [\r\n  { text: 'balancear(nodo u)', ind: 0},\r\n  { text: 'Caso 0: u esta balanceado', ind: 1},\r\n  { text: 'Caso 1: factor(u)==2 y factor(u.hijoDerecho)>=0', ind: 1},\r\n  { text: 'rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 2: factor(u)==-2 y factor(u.hijoIzquierdo)<=0', ind: 1},\r\n  { text: 'rotacionDerecha(u)', ind: 2},\r\n  { text: 'Caso 3: factor(u)==2 y factor(u.hijoIzquierdo)<0', ind: 1},\r\n  { text: 'rotacionDerecha(u.hijoDerecho), rotacionIzquierda(u)', ind: 2},\r\n  { text: 'Caso 4: factor(u)==-2 y factor(u.hijoDerecho)>0', ind: 1},\r\n  { text: 'rotacionIzquierda(u.hijoIzquiedo), rotacionDerecha(u)', ind: 2},\r\n];\r\n\r\nexport const search = [\r\n  {text: 'buscar(nodo u, entero v):', ind: 0},\r\n  {text: 'Si u == NULL: retornar Falso', ind: 1},\r\n  {text: 'Si v == u.valor: retornar Verdadero', ind: 1},\r\n  {text: 'Si v < u.valor:', ind: 1},\r\n  {text: 'buscar(u.hijoIzquierdo, v)', ind: 2},\r\n  {text: 'Sino:', ind: 1},\r\n  {text: 'buscar(u.hijoDerecho, v)', ind: 2},\r\n];\r\n\r\nexport const avl = [\r\n  { text: 'AVL{', ind: 0},\r\n  { text: 'Nodo raiz', ind: 1},\r\n  { text: 'insertar(nodo u, entero v)', ind: 1},\r\n  { text: 'eliminar(nodo u)', ind: 1},\r\n  { text: 'buscar(nodo u, entero v)', ind: 1},\r\n  { text: 'balancear(nodo u)', ind: 1},\r\n  { text: 'sucesor(nodo u)', ind: 1},\r\n  { text: '}', ind: 0},\r\n]","import { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { getChildren, lca, getHeight, isLeaf } from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport {insert, remove, balance, search} from '../resources/pseudocodes/avl';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  treeRoot: string,\r\n  refresh?: boolean,\r\n}\r\nclass AVLProcessor { \r\n\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  treeRoot:string=\"\";\r\n\r\n  buffer:Array<exportStep> = [];\r\n\r\n  pseudo:Array<Object> = [];\r\n  constructor(vw: number, vh: number){\r\n    this.vh = vh; this.vw = vw; \r\n  }\r\n\r\n  loadGraph(elements:Array<Object>, root: string){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')){\r\n        node.data('style', Styles.NODE);\r\n      }else{\r\n        node.data('style', Styles.NODE_POPPER);\r\n      }\r\n    });\r\n    this.treeRoot = root;\r\n  }\r\n  exportGraph(updateLayout=true){\r\n\t\tconst elements:Array<Object> = [];\r\n    if(updateLayout) this.layoutProcessing();\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n          position: node.data('position'),\r\n          style: node.data('style'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: prev,\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n\r\n  pushStep(lines:Array<number> = [], duration:number = 1000, refresh=true){\r\n    this.buffer.push({\r\n      elements: this.exportGraph(refresh),\r\n      lines,\r\n      duration,\r\n      treeRoot: this.treeRoot,\r\n      pseudo: this.pseudo,\r\n    })\r\n  }\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.data('position');\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {\r\n        id : nodeId+'-popper', \r\n        style: Styles.NODE_POPPER,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y+30,\r\n        },\r\n      },\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n        position: { x: position.x, y: position.y },\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', prevPosition);\r\n      node.data('position', { x: node.data('X')*24 + nx, y: ny });\r\n      const popper = this.cy.getElementById(node.id() + '-popper');\r\n      const prevPopPosition = popper.data('position');\r\n      popper.data('prevPosition', prevPopPosition);\r\n\t\t\tpopper.data('position', {x: node.data('X')*24 + nx, y: ny + 30});\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.vw, vh = this.vh;\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  addEdge = (source: string, target: string) => {\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n  }\r\n\r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  rotateLeft(x: CytoscapeElement){\r\n    const [y, C] = getChildren(x);\r\n    if(y == null) return;\r\n    const [A, B] = getChildren(y);\r\n    this.removeEdge(x.id(), y.id());\r\n    if(B){\r\n      this.removeEdge(y.id(), B.id());\r\n      this.addEdge(x.id(), B.id());\r\n      //B.data('prev', x.id());\r\n    }\r\n    const prev = x.data('prev');\r\n    this.addEdge(y.id(), x.id());\r\n\r\n    if(this.treeRoot !== x.id()){\r\n      this.removeEdge(prev, x.id());\r\n      this.addEdge(prev, y.id());\r\n      //y.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = y.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //x.data('prev', y.id());\r\n\r\n    x.data('height', Math.max(getHeight(B), getHeight(C))+1);\r\n    y.data('height', Math.max(getHeight(A), getHeight(x))+1);\r\n    x.data('balance', getHeight(C)-getHeight(B));\r\n    y.data('balance', getHeight(x) - getHeight(A));\r\n    this.pushStep([], 1000);\r\n  }\r\n\r\n rotateRight(y: CytoscapeElement){\r\n    const [A, x] = getChildren(y);\r\n    if(x == null) return;\r\n    const [B, C] = getChildren(x);\r\n    this.removeEdge(y.id(), x.id());\r\n    if(B){\r\n      this.removeEdge(x.id(), B.id());\r\n      this.addEdge(y.id(), B.id());\r\n      //B.data('prev', y.id());\r\n    }\r\n    const prev = y.data('prev');\r\n    this.addEdge(x.id(), y.id());\r\n    \r\n    if(this.treeRoot !== y.id()){\r\n      this.removeEdge(prev, y.id());\r\n      this.addEdge(prev, x.id());\r\n      //x.data('prev', prev);\r\n    }else{\r\n      this.treeRoot = x.id();\r\n      console.log(this.treeRoot);\r\n    }\r\n    //y.data('prev', x.id());\r\n\r\n    y.data('height', Math.max(getHeight(A), getHeight(B))+1);\r\n    x.data('height', Math.max(getHeight(y), getHeight(C))+1);\r\n    y.data('balance', getHeight(B) - getHeight(A));\r\n    x.data('balance', getHeight(C) - getHeight(y));\r\n    this.pushStep();\r\n  }\r\n  balance(start: CytoscapeElement){\r\n    let node = start;\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: balance,\r\n      }\r\n    });\r\n    */\r\n    //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: []}});\r\n    this.pseudo = balance;\r\n    this.pushStep();\r\n\r\n    const recursion = () => {\r\n      const [left, right] = getChildren(node);\r\n      const lh = getHeight(left), rh = getHeight(right);\r\n      node.data('height', Math.max(lh, rh)+1);\r\n      const bal = rh - lh;\r\n      node.data('balance', bal);\r\n      if(bal === 2){\r\n        if(right.data('balance') >= 0){\r\n          this.pushStep([2,3]);\r\n          //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [2, 3]}});\r\n          this.rotateRight(node);\r\n        }else{\r\n          this.pushStep([6,7]);\r\n          //this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines: [6, 7]}});\r\n          this.rotateLeft(right);\r\n          this.rotateRight(node);\r\n        }\r\n      }else if(bal === -2){\r\n        if(left.data('balance') <= 0){\r\n          this.pushStep([4,5]);\r\n          this.rotateLeft(node);\r\n        }else{\r\n          this.pushStep([8,9]);\r\n          this.rotateRight(left);\r\n          this.rotateLeft(node);\r\n        }\r\n      }else{\r\n        this.pushStep([1]);\r\n      }\r\n      if(node.id() !== this.treeRoot){\r\n        node.data('style', Styles.NODE);\r\n        node = this.cy.getElementById(node.data('prev'));\r\n        node.data('style', {\r\n          'background-color': 'red',\r\n          'color': 'black',\r\n        })\r\n        recursion();\r\n      }\r\n    }  \r\n    this.pushStep([1]);\r\n    //this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [1]}});\r\n    \r\n    node.data('style', {\r\n      'background-color': 'red',\r\n      'color': 'black',\r\n    })\r\n    \r\n    //setTimeout(recursion, 1000/this.props.speed);\r\n    recursion();\r\n  }\r\n\r\n  insert(value: number) {\r\n    this.buffer = [];\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let n = this.cy.nodes().length/2 + 1;\r\n    let newNode:(CytoscapeElement | null) = null;\r\n    this.pseudo = insert;\r\n    this.pushStep();\r\n\r\n    if(n > 1){\r\n      let insertion = (current: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n        console.log(current);\r\n        \r\n        if(prev) prev.data('style',{\r\n          'color': 'black',\r\n          'background-color': 'white',\r\n        });\r\n        \r\n        if(current){\r\n          \r\n          current.data('style', {\r\n            'color': 'white',\r\n            'background-color': 'black',\r\n          });\r\n          \r\n          let [left, right] = getChildren(current);\r\n          if (value < current.data('value')) {\r\n            this.pushStep([3, 4]);\r\n            //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [3, 4]}});\r\n            //setTimeout(insertion, 1000/this.props.speed, left, current);  \r\n            insertion(left, current);\r\n          } else {\r\n            this.pushStep([5, 6]);\r\n            //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [5, 6]}});\r\n            //setTimeout(insertion, 1000/this.props.speed, right, current);\r\n            insertion(right, current);\r\n          }\r\n        }else{\r\n          //this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines: [1, 2]}});\r\n          if(prev){\r\n            this.addNode(id.toString(), value, 0, 0, prev.data('position'));\r\n            newNode = this.cy.getElementById(id.toString());\r\n            if(newNode){\r\n              this.addEdge(prev.id(), newNode.id());\r\n              newNode.data(\r\n                'prev', prev.id(),\r\n              );\r\n            }\r\n          }\r\n          this.pushStep([1,2]);\r\n          //this.refreshLayout();\r\n          //setTimeout(resolve, 1000/this.props.speed, null);\r\n        } \r\n      }\r\n      insertion(this.cy.getElementById(this.treeRoot), null);\r\n    }else{\r\n      this.addNode(id.toString(), value);\r\n      newNode = this.cy.getElementById(id.toString());\r\n      this.treeRoot = id.toString();\r\n      this.pushStep([1,2]);\r\n    }\r\n    if(newNode) this.balance(newNode);\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n    })\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  search(value: number){\r\n    this.buffer = [];\r\n    this.pseudo = search;\r\n    this.pushStep();\r\n\r\n    let found = false;\r\n    const bsearch = (node: CytoscapeElement | null, prev: CytoscapeElement | null) => {\r\n      if(prev){\r\n        prev.data('style',{\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n      }\r\n      if(node){\r\n        node.data('style', {\r\n          'background-color': 'black',\r\n          'color': 'white',\r\n        });\r\n        const [left, right] = getChildren(node);\r\n        if(node.data('value') === value){\r\n          node.data('style',{\r\n            'background-color': 'lightgreen',\r\n            'color': 'black',\r\n          });\r\n          found = true;\r\n          this.pushStep([2]);\r\n\r\n          //setTimeout(bsearch, 1000/this.props.speed, null, node);\r\n          bsearch(null, node);\r\n        }else if(node.data('value') < value){\r\n          this.pushStep([5,6]);\r\n          bsearch(right, node);\r\n        }else{\r\n          this.pushStep([3,4]);\r\n          bsearch(left, node);\r\n        }\r\n      }\r\n    }\r\n    if(this.treeRoot === ''){\r\n      this.pushStep([1]);\r\n    }else{\r\n      bsearch(this.cy.getElementById(this.treeRoot), null);\r\n      this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n        if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n      });\r\n    }\r\n    this.pushStep();\r\n    return {found, buffer: this.buffer}\r\n  }\r\n\r\n  inorderSuccessor(node: CytoscapeElement){\r\n    this.pushStep();\r\n    let suc = node;\r\n    const getNext = (node: CytoscapeElement, prev: CytoscapeElement | null) => {\r\n      if(prev){\r\n        prev.data('style', {\r\n          'background-color': 'white',\r\n          'color': 'black',\r\n        });\r\n        suc = prev;\r\n      }\r\n      if(node){\r\n        node.data('style', {\r\n          'background-color': 'red',\r\n          'color' : 'black',\r\n        });\r\n        const left = getChildren(node)[0];\r\n        this.pushStep();\r\n        getNext(left, node);\r\n      }\r\n    }\r\n    let right = getChildren(node)[1];\r\n    node = right;\r\n    getNext(node, null);\r\n    return suc;\r\n  }\r\n  \r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  remove = (value: number) => {\r\n    this.buffer = [];\r\n    this.search(value);\r\n    this.pseudo = remove;\r\n    let node = this.cy.getElementById(this.treeRoot);\r\n    let found = false;\r\n    this.cy.nodes().forEach((ele:CytoscapeElement) => {\r\n      if(!ele.id().match('popper') && ele.data('value') === value){\r\n        node = ele;\r\n        found = true;\r\n      }\r\n    });\r\n    if(!found) return this.buffer;\r\n    let anc = '';\r\n\r\n    this.pushStep();\r\n\r\n    if(isLeaf(node)){\r\n      if(node.id() !== this.treeRoot) anc = node.data('prev');\r\n      this.removeNode(node);\r\n      this.pushStep([1]);\r\n      if(anc !== '') this.balance(this.cy.getElementById(anc));\r\n    }else if(node.outgoers('node').length === 1){\r\n      //this.props.dispatch({type: actions.CHANGE_LINE, payload: {lines: [3, 4]}});\r\n      if(node.id() === this.treeRoot){\r\n        this.treeRoot = node.outgoers('node')[0].id();\r\n        anc = this.treeRoot;\r\n        this.removeNode(node);\r\n        this.pushStep([3,4]);\r\n      }else{\r\n        let prev = '';\r\n        prev = node.data('prev');\r\n        const newChild = node.outgoers('node')[0];\r\n        newChild.data(prev);\r\n        this.removeNode(node);\r\n        this.addEdge(prev, newChild.id());\r\n        anc = newChild.id();\r\n        this.pushStep([3,4]);\r\n      }\r\n      this.balance(this.cy.getElementById(anc));\r\n    }else{\r\n      this.pushStep([6]);\r\n      const suc = this.inorderSuccessor(node);\r\n      console.log('NODE', node);\r\n      console.log('SUC', suc);\r\n      this.pushStep([7,8]);\r\n      node.data('value', suc.data('value'));\r\n      suc.data('value', value);\r\n      this.pushStep([7,8], 1000, false);\r\n\r\n      if(!isLeaf(suc)){\r\n        console.log(\"ERROR\");\r\n        console.log(getChildren(suc));\r\n        const right = getChildren(suc)[1];\r\n        right.data('prev', suc.data('prev'));\r\n        this.addEdge(suc.data('prev'), right.id());\r\n      }\r\n      anc = suc.data('prev');\r\n      this.removeNode(suc);\r\n      this.pushStep();\r\n      this.balance(this.cy.getElementById(anc))\r\n    }\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      if(!node.id().match('popper')) node.data('style', Styles.NODE);\r\n    });\r\n\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n}\r\n\r\nexport default AVLProcessor;","import React from 'react';\r\nimport actions from '../Actions/actions';\r\n\r\nimport downloadGif from '../utils/gifshot-utils'\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport TreeBar from './TreeBar';\r\nimport InputModal from './InputModal';\r\nimport InputAVLModal from './InputAVLModal';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport PriorityQueue from '../Algorithms/DS/PriorityQueue'\r\n\r\nimport HeapArray from './HeapArray';\r\nimport { number, string } from 'prop-types';\r\n\r\nimport {isLeaf, getChildren, getHeight, lca, parseAVL} from '../utils/avl-utils';\r\nimport {edgeId} from '../utils/cy-utils';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport {remove, insert, balance, search} from '../resources/pseudocodes/avl';\r\nimport AVLProcessor from '../Processing/avl-proccesing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\nconst popper = require('cytoscape-popper');\r\n\r\ncytoscape.warnings(false);\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  treeRoot: string,\r\n  refresh?: boolean,\r\n}\r\n\r\ntype storeState = {\r\n  animation: string,\r\n  selection: Object,\r\n  speed: number,\r\n  paused: boolean,\r\n}\r\n\r\ntype Element = {\r\n  value: number,\r\n  class: string,\r\n}\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showSearchModal: boolean,\r\n  showInsertModal: boolean,\r\n  showRemoveModal: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  root: string,\r\n  elements: Array<Object>,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n  }\r\n  paused: boolean,\r\n  dispatch: (action: Object) => Object,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n    paused: state.paused,\r\n  }\r\n}\r\n\r\nclass AVL extends React.Component<Props, State>{\r\n\r\n  _isMounted = false;\r\n  _mediaRecorder = new MediaRecorder();\r\n  layout = {\r\n    run: () => { },\r\n    stop: () => { },\r\n  };\r\n\r\n  treeRoot = \"\";\r\n\r\n  state = {\r\n    show: false,\r\n    showSearchModal: false,\r\n    showInsertModal: false,\r\n    showRemoveModal: false,\r\n  }\r\n\r\n  undo:Array<stackState>=[];\r\n  redo:Array<stackState>=[];\r\n\r\n  nodeStyle = Styles.NODE;\r\n  edgeStyle = Styles.EDGE;\r\n  AVLProcessor:any;\r\n  cy = cytoscape();\r\n\r\n  buffer:Array<exportStep> = [];\r\n  options: Array<{ name: string, run: () => void }>;\r\n\r\n  step = 0;\r\n  animationTimeout = 0;\r\n  constructor(props:Props){\r\n    super(props);\r\n    this._mediaRecorder = new MediaRecorder(props.dispatch);\r\n    this.options = [\r\n      {\r\n        name: 'Insertar',\r\n        run: () => this.setState({showInsertModal: true}),\r\n      },\r\n      {\r\n        name: 'Eliminar',\r\n        run: () => this.setState({showRemoveModal: true}),\r\n      },\r\n      {\r\n        name: 'Buscar',\r\n        run: () => this.setState({showSearchModal: true}),\r\n      },\r\n      {\r\n        name: 'Subir AVL',\r\n        run: () => this.setState({show: true}),\r\n      },\r\n      {\r\n        name: 'Descargar AVL',\r\n        run:  () => parseAVL(this.cy.getElementById(this.treeRoot)),\r\n      }\r\n    ];\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.initialize({ root: '', elements: []});\r\n    this.AVLProcessor = new AVLProcessor(this.cy.width(), this.cy.height());\r\n    this.props.dispatch({\r\n      type: this.props.action,\r\n      payload:{\r\n        photo: () => this._mediaRecorder.takePicture(this.cy),\r\n        gif: () => this._mediaRecorder.takeGif(this.cy),\r\n        undo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        options: this.options,\r\n        rewind: this.handleRewind,\r\n        forward: this.handleForward,\r\n        pause: this.handlePauseContinue,\r\n        repeat: this.handleRepeat,\r\n        remove: () => this.setState({showRemoveModal: true}),\r\n        clear: this.clearGraph,\r\n      }\r\n    })\r\n  }\r\n\r\n  initialize(state: stackState){\r\n    const {root, elements} = state;    \r\n\t\tlet edgeStyle = Styles.EDGE;\r\n    this.cy = cytoscape({\r\n\r\n      container: document.getElementById('canvas'), // container to render in\r\n\r\n      elements,\r\n\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: Styles.NODE,\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: edgeStyle,\r\n        }\r\n      ],\r\n\r\n      headless: false,\r\n      styleEnabled: true,\r\n      hideEdgesOnViewport: false,\r\n      hideLabelsOnViewport: false,\r\n      userPanningEnabled: false,\r\n      zoomingEnabled: false,\r\n      textureOnViewport: false,\r\n      motionBlur: false,\r\n      motionBlurOpacity: 0.2,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n\r\n    });\r\n    this.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tif(node.id().match('-popper')){\r\n\t\t\t\tnode.style(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'z-index': 0,\r\n\t\t\t\t\t\t'border-width': 0,\r\n\t\t\t\t\t\t'font-size': 15,\r\n\t\t\t\t\t\t'width': 10,\r\n\t\t\t\t\t\t'height': 10,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n    });\r\n    this.treeRoot = root;\r\n\t\t//this.cy.on('resize', () => { this.layoutProcessing(); this.refreshLayout(false)});\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate: false});\r\n\t\tthis.layout.run();\r\n\r\n    this.refreshLayout();\r\n  }\r\n  \r\n  handleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.undo.pop();\r\n\t\tif(state !== undefined){\r\n      this.redo.push({ root: this.treeRoot, elements: currentElements});\r\n      this.treeRoot = state.root;\r\n      this.loadGraph(state.elements);\r\n      this.AVLProcessor.loadGraph(state.elements, state.root);\r\n    }\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t  this.undo.push({ root: this.treeRoot, elements: currentElements});\r\n      this.treeRoot = state.root;\r\n      this.loadGraph(state.elements);\r\n      this.AVLProcessor.loadGraph(state.elements, state.root);\r\n    }\r\n\t}\r\n\r\n  loadGraph(elements: Array<Object>, keep=false) {\r\n    const nodes = this.cy.nodes();\r\n    const positions:{[id:string]:{x:number,y:number}} = {};\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n      if(keep) positions[node.id()] = JSON.parse(JSON.stringify(node.data('position')));\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(JSON.parse(JSON.stringify(elements[i])));\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n      const position = node.data('position');\r\n      if(keep && positions[node.id()]) node.position({x:positions[node.id()].x, y:positions[node.id()].y});\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n    this.refreshLayout();\r\n\t}\r\n\r\n\texportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          prev: node.data('prev'),\r\n          height: node.data('height'),\r\n          balance: node.data('balance'),\r\n          style: node.style(),\r\n          position: { x: node.position().x, y: node.position().y }\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n\tpushState(){\r\n    console.log('pushed');\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push({root: this.treeRoot, elements: this.exportGraph()});\r\n  }\r\n  \r\n  handleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = Math.max(this.step-1, 0);\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n    this.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = Math.min(this.step+1, this.buffer.length-1);\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n    this.step = 0;\r\n    const {treeRoot, elements, pseudo, lines} = this.buffer[this.step];\r\n    this.treeRoot = treeRoot;\r\n    this.loadGraph(elements, true);\r\n    if(pseudo) this.props.dispatch({type: actions.CHANGE_PSEUDO, payload: { pseudo }});\r\n    if(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    clearTimeout(this.animationTimeout);\r\n    this._isMounted = false;\r\n\r\n  }\r\n  componentDidUpdate(prevProps:Props){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\r\n    if (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n                clearTimeout(this.animationTimeout);\r\n                this.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n                this.treeRoot = this.buffer[this.buffer.length-1].treeRoot;\r\n                this.props.dispatch({ type: actions.ANIMATION_END });\r\n                console.log(getChildren(this.cy.getElementById(this.treeRoot)));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n  }\r\n\r\n  removeNodePopper(node: string) {\r\n    this.cy.remove(this.cy.getElementById(node + '-popper'));\r\n\t}\r\n\r\n  removeNode = (node: CytoscapeElement) => {\r\n    let id = node.id();\r\n    this.cy.remove(node);\r\n    this.removeNodePopper(id);\r\n  }\r\n  \r\n  removeEdge = (source: string, target: string) => {\r\n    this.cy.remove('edge[id=\"'+edgeId(source, target)+'\"]');\r\n  }\r\n\r\n  createPopper(nodeId: string){\r\n\t\tconst ele = this.cy.getElementById(nodeId);\r\n\t\tconst position = ele.position();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: {id : nodeId+'-popper', value: 0},\r\n\t\t\tposition: {\r\n\t\t\t\tx: position.x,\r\n\t\t\t\ty: position.y+30,\r\n\t\t\t},\r\n\t\t\tstyle: {\r\n\t\t\t\t'z-index': 0,\r\n\t\t\t\t'border-width': 0,\r\n\t\t\t\t'font-size': 15,\r\n\t\t\t\t'width': 10,\r\n\t\t\t\t'height': 10,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  \r\n  addNode = (id: string, value: number, height:number=0, balance:number=0, position:{x:number, y:number}={x:0,y:0}) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        height,\r\n        balance,\r\n      },\r\n      position: {\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    this.createPopper(id);\r\n  }\r\n  \r\n  addEdge = (source: string, target: string) => {\r\n    this.cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        id: edgeId(source, target), source, target,\r\n      }\r\n    });\r\n    this.cy.getElementById(target).data('prev', source);\r\n  }\r\n\r\n  isLeaf(node: CytoscapeElement){\r\n    return node.outgoers('node').length === 0;\r\n  }\r\n\r\n  getChildren(node: CytoscapeElement){\r\n    let left = null, right = null;\r\n    let outgoers = node.outgoers('node');\r\n\r\n    if (outgoers.length >= 1) left = outgoers[0];\r\n    if (outgoers.length === 2) right = outgoers[1];\r\n    if (left != null && right != null && left.data('value') > right.data('value')) {\r\n      [left, right] = [right, left];\r\n    }else if(left != null && left.data('value') > node.data('value')){\r\n      [left, right] = [right, left];\r\n    }else if(right != null && right.data('value') < node.data('value')){\r\n      [left, right] = [right,left];\r\n    }\r\n\r\n    return [left, right];\r\n  }\r\n  refreshLayout(animate:boolean = true) {\r\n    this.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n    this.layout.run();\r\n  }\r\n\r\n  propagate(node: CytoscapeElement | null, val: number){\r\n    if(node == null) return;\r\n    node.data('X', node.data('X') + val);\r\n    const [left, right] = getChildren(node);\r\n    if(left) this.propagate(left, val);\r\n    if(right) this.propagate(right, val);\r\n  }\r\n  layoutProcessing() {\r\n\r\n    if(this.treeRoot === '') return;\r\n    const levels:{[lvl: number]: Array<string>} = {};\r\n\r\n    const dfs = (node: CytoscapeElement, depth: number, x: number) => {\r\n      console.log(node.data('value'));\r\n      node.data('depth', depth);\r\n      node.data('X', x);\r\n      \r\n      if(levels[depth] === undefined) levels[depth] = Array();\r\n      levels[depth].push(node.id());\r\n\r\n      let [left, right] = getChildren(node);\r\n      let hleft = 0, hright = 0;\r\n      if(left) hleft = dfs(left, depth+1, x-1);\r\n      if(right) hright = dfs(right, depth+1, x+1);\r\n\r\n      let bal = hright - hleft;\r\n      let popper = this.cy.getElementById(node.id() + '-popper');\r\n      popper.data('value', bal);\r\n      return Math.max(hleft, hright)+1;\r\n    }\r\n\r\n    let height = dfs(this.cy.getElementById(this.treeRoot), 0, 0);\r\n    let iter = 0;\r\n    while(iter++ < 1000){\r\n      let correct = true;\r\n      for(let i = height-1; i >= 0; i--){\r\n        const current = levels[i];\r\n        for(let j = 0; j < current.length - 1; j++){\r\n          const a = this.cy.getElementById(current[j]);\r\n          const b = this.cy.getElementById(current[j+1]);\r\n          if(a.data('X') + 1 >= b.data('X')){\r\n            const anc = lca(this.cy, a, b);\r\n            const [left, right] = getChildren(anc);\r\n            const dif = Math.max(a.data('X') - b.data('X'), 1);\r\n            this.propagate(left, -dif);\r\n            this.propagate(right, dif);\r\n            correct = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(correct) break;\r\n    }\r\n    if(iter === 1001){\r\n      console.error('ALERT, INFINITE LOOP AVOIDED');\r\n    }\r\n\r\n    const setSep = (node: CytoscapeElement, nx: number, ny: number) => {\r\n      layoutOptions.positions[node.id()] = { x: node.data('X')*24 + nx, y: ny }\r\n      layoutOptions.positions[node.id()+'-popper'] =  { x: node.data('X')*24 + nx, y: ny + 30};\r\n      let [left, right] = getChildren(node);\r\n      if (left) setSep(left, nx, ny + 50);\r\n      if (right) setSep(right, nx, ny + 50);\r\n    }\r\n\r\n    const vw = this.cy.width(), vh = this.cy.height();\r\n    setSep(this.cy.getElementById(this.treeRoot), vw / 2, vh / 4);\r\n    return true;\r\n  }\r\n\r\n  animation(){\r\n\t\tlet step = () => {\r\n      if (!this.props.animation) return;\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_PAUSE,\r\n        })\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n      const { elements, lines, duration, pseudo, treeRoot, refresh} = this.buffer[this.step++];\r\n      if(this.props.paused) return;\r\n      this.loadGraph(elements, refresh);\r\n      if(pseudo) this.props.dispatch({ type: actions.CHANGE_PSEUDO, payload: { pseudo}});\r\n      if (lines) this.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines } });\r\n      if(treeRoot != null) this.treeRoot = treeRoot;\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration) / (this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n  }\r\n\r\n  insert(value=0){\r\n    const nodes = this.cy.nodes();\r\n    for(let i = 0; i < nodes.length; i++){\r\n      if(nodes[i].id().match('popper')) continue;\r\n      if(nodes[i].data('value') === value){\r\n        this.props.dispatch({\r\n          type: actions.AVL_ELEMENT_ALREADY_INFO,\r\n        })\r\n        return;\r\n      }\r\n    }\r\n    this.pushState();\r\n    this.buffer = this.AVLProcessor.insert(value);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  search(value=0){\r\n    let {found, buffer} = this.AVLProcessor.search(value);\r\n    this.buffer = buffer;\r\n    console.log(buffer);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  remove(value=0){ \r\n    this.pushState();\r\n    this.buffer = this.AVLProcessor.remove(value);\r\n    console.log(this.buffer);\r\n    this.step = 0;\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({type: actions.ANIMATION_START});\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  handleClose = (update: boolean = false) => {\r\n    this.setState({show: false});\r\n    if(update){\r\n      this.treeRoot = \"0\";\r\n      this.layoutProcessing();\r\n      this.refreshLayout();\r\n      this.AVLProcessor.loadGraph(this.exportGraph(), \"0\");\r\n    }\r\n  }\r\n\r\n  clearGraph = () => {\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n    const nodes = this.cy.nodes();\r\n    if(nodes.length === 0) return;\r\n    this.pushState();\r\n    nodes.forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    this.AVLProcessor.loadGraph([], '');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputModal \r\n          show={this.state.showInsertModal} \r\n          handleClose={() => this.setState({showInsertModal: false})}\r\n          callback={(v:number) => this.insert(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showSearchModal} \r\n          handleClose={() => this.setState({showSearchModal: false})}\r\n          callback={(v:number) => this.search(v)}\r\n        />\r\n        <InputModal\r\n          show={this.state.showRemoveModal}\r\n          handleClose={() => this.setState({showRemoveModal: false})}\r\n          callback={(v:number) => this.remove(v)}\r\n        />\r\n        <InputAVLModal \r\n          show={this.state.show} \r\n          handleClose={this.handleClose} \r\n          addNode={this.addNode} \r\n          addEdge={this.addEdge} \r\n          clearGraph={this.clearGraph}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AVL);","class Queue {\r\n    _data = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    isEmpty(){\r\n        return this._data.length === 0;\r\n    }   \r\n\r\n    front(){\r\n        if(this.isEmpty()){\r\n            return null;\r\n        }\r\n        return this._data[0];\r\n    }\r\n\r\n    push(ele){\r\n        this._data.push(ele);\r\n    }\r\n\r\n    pop(){\r\n        if(!this.isEmpty()){\r\n            this._data.shift();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Queue;","import Queue from './DS/Queue'\r\nconst Styles = require('../Styles/Styles');\r\nconst BFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet color = {}, level = {};\r\n\tlet q = new Queue();\r\n\r\n\tlet commands = [{lines: [1,2], duration: 1000}];\r\n\tq.push(source);\r\n\tlevel[source] = 0;\r\n\tcommands.push(\r\n\t\t{\r\n\t\t\teles: [source],\r\n\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\tinst: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tid: source,\r\n\t\t\t\t\t\tvalue: 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlines: [3,4],\r\n\t\t}\r\n\t)\r\n\t\r\n\twhile (!q.isEmpty()) {\r\n\t\tcommands.push({ lines: [5]});\r\n\t\tlet current = cy.getElementById(q.front()); q.pop();\r\n\t\tif (color[current] === 'black') continue;\r\n\t\tcolor[current.id()] = 'black';\r\n\t\tcommands.push(\r\n\t\t\t{\r\n\t\t\t\teles: [current.id()],\r\n\t\t\t\tstyle: [Styles.NODE_BLACK],\r\n\t\t\t\tlines: [6,7],\r\n\t\t\t\tinst: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'shift',\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t);\r\n\t\tcurrent.outgoers('edge').forEach(\r\n\t\t\tedge => {\r\n\t\t\t\tlet next = edge.target();\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_TRAVERSE \r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tlines: [8],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ lines: [9]}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (color[next.id()] === undefined) {\r\n\t\t\t\t\tcolor[next.id()] = 'gray';\r\n\t\t\t\t\tlevel[next.id()] = level[current.id()]+1;\r\n\t\t\t\t\tcommands.push(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [next.id()],\r\n\t\t\t\t\t\t\tstyle: [Styles.NODE_GRAY],\r\n\t\t\t\t\t\t\tinst: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'update_level',\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tid: next.id(),\r\n\t\t\t\t\t\t\t\t\t\tvalue: level[next.id()],\r\n\t\t\t\t\t\t\t\t\t\tclass: 'heap-default',\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tlines: [10,11]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tq.push(next.id());\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcommands.push({\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\tStyles.EDGE_VISITED,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\treturn commands;\r\n}\r\n\r\nexport default BFS;\r\n","const Styles = require('../Styles/Styles');\r\nconst dfs = (cy, source, depth, commands, visited) => {\r\n\r\n\tvisited[source.id()] = true;\r\n\t\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_GRAY],\r\n\t\tinst: [\r\n\t\t\t{\r\n\t\t\t\tname: 'update_level',\r\n\t\t\t\tdata: {id: source.id(), value: depth}\r\n\t\t\t}\r\n\t\t],\r\n\t\tlines: [1],\r\n\t});\r\n\tsource.outgoers('edge').forEach(\r\n\t\tedge => {\r\n\t\t\tlet next = edge.target();\r\n\t\t\tcommands.push(\r\n\t\t\t\t{\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_TRAVERSE],\r\n\t\t\t\t\tlines: [2],\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (visited[next.id()] === undefined) {\r\n\t\t\t\tcommands.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlines: [3,4],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\t\tduration: 10,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tdfs(cy, next, depth+1, commands, visited);\r\n\t\t\t}else{\r\n\t\t\t\tcommands.push({\r\n\t\t\t\t\teles: [edge.id()],\r\n\t\t\t\t\tstyle: [Styles.EDGE_VISITED],\r\n\t\t\t\t\tduration: 10,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tcommands.push({\r\n\t\teles: [source.id()],\r\n\t\tstyle: [Styles.NODE_BLACK],\r\n\t\tinst: [{name: 'pop'}],\r\n\t\tlines: [5],\r\n\t})\r\n}\r\nconst DFS = param => {\r\n\tconst { cy, selection } = param;\r\n\tconst source = selection.id;\r\n\r\n\tlet commands = [\r\n\t\t{lines: [8,9,10]},\r\n\t];\r\n\tlet visited = {};\r\n\tdfs(cy, cy.getElementById(source), 0, commands, visited);\r\n\treturn commands;\r\n}\r\n\r\nexport default DFS;","import PriorityQueue from './DS/PriorityQueue';\r\nconst Styles = require('../Styles/Styles');\r\nconst Dijkstra = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n  let comp = (x, y) => {\r\n    return x.distance < y.distance;\r\n  }\r\n  let eq = (x, y) => {\r\n    return x.distance === y.distance;\r\n  }\r\n  let pq = new PriorityQueue(comp, eq);\r\n  let dist = {};\r\n  let visited = {};\r\n  const commands = [];\r\n  commands.push({lines: [1,2]});\r\n  dist[source] = 0;\r\n  pq.push({\r\n    distance: 0,\r\n    id: source,\r\n  });\r\n\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      inst: [{\r\n        name: 'fill',\r\n        data: {\r\n          value: '\\u221E',\r\n          class: 'heap-default',\r\n        }\r\n      }],\r\n      lines: [3],\r\n    }\r\n  )\r\n\r\n  while (!pq.isEmpty()) {\r\n    commands.push({lines: [4]});\r\n    let { id, distance } = pq.top(); pq.pop();\r\n    if (visited[id]) continue;\r\n    visited[id] = true;\r\n    let current = cy.getElementById(id);\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_RED],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n        lines: [5],\r\n      }\r\n    )\r\n    current.outgoers('edge').forEach(\r\n      edge => {\r\n        let next = edge.target(), weight = edge.data('weight');\r\n        let nextId = next.id();\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_TRAVERSE],\r\n            lines: [6],\r\n            duration: 1000,\r\n          }\r\n        )\r\n        let prevDistance = dist[nextId];\r\n        if (prevDistance === undefined) prevDistance = 'inf';\r\n        if (dist[nextId] === undefined || distance + weight < dist[nextId]) {\r\n          dist[nextId] = distance + weight;\r\n          commands.push({\r\n            lines: [7],\r\n            eles: [nextId],\r\n            style: [Styles.NODE_GRAY],\r\n          });\r\n          pq.push({\r\n            distance: distance + weight,\r\n            id: nextId,\r\n          })\r\n          if (prevDistance !== 'inf') {\r\n            commands.push(\r\n              {\r\n                eles: [nextId],\r\n                distance: [(distance + weight) + '\\u2264' + prevDistance],\r\n                duration: 1000,\r\n              }\r\n            );\r\n          }\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [distance + weight],\r\n              duration: 1000,\r\n              lines: [8,9],\r\n              inst: [{\r\n                name: 'change_element',\r\n                position: parseInt(next.data('value'), 10)-1,\r\n                data: {\r\n                  value: (distance + weight).toString(),\r\n                  class: 'heap-default',\r\n                },\r\n              }]\r\n            }\r\n          )\r\n        } else {\r\n          commands.push(\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance + '\\u2264' + (distance + weight)],\r\n              duration: 1000,\r\n              lines: [8],\r\n            },\r\n            {\r\n              eles: [nextId],\r\n              distance: [prevDistance],\r\n              duration: 1000,\r\n            }\r\n          )\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [edge.id()],\r\n            style: [Styles.EDGE_VISITED],\r\n            duration: 10,\r\n          }\r\n        )\r\n      }\r\n    )\r\n    commands.push(\r\n      {\r\n        eles: [id],\r\n        distance: [distance.toString()],\r\n        style: [Styles.NODE_BLACK],\r\n        duration: 1000,\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: distance.toString(),\r\n            class: 'heap-default',\r\n          }\r\n        }]\r\n      }\r\n    )\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Dijkstra;","const Styles = require('../Styles/Styles');\r\n\r\nconst BellmanFord = (param) => {\r\n  const { cy, selection } = param;\r\n  const source = selection.id;\r\n\r\n  let dist = {};\r\n  let pre = {};\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: cy.nodes().map(x => x.id()),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  )\r\n\r\n  dist[source] = 0;\r\n  commands.push(\r\n    {\r\n      eles: [source],\r\n      distance: [0],\r\n      lines: [3],\r\n    }\r\n  );\r\n    \r\n  const n = cy.nodes().length/2;\r\n  const edges = cy.edges();\r\n  for(let i = 0; i < n - 1; i++){\r\n    for(let j = 1; j <= n; j++){\r\n      const currentId = 'node-'+j;\r\n      const current = cy.getElementById(currentId);\r\n      current.outgoers('edge').forEach(edge => {\r\n        const u = edge.data('source'),\r\n              v = edge.data('target'),\r\n              w = edge.data('weight');\r\n        const edgeId = edge.id();\r\n        commands.push(\r\n          {\r\n            eles: [u, v, edgeId],\r\n            style: [Styles.NODE_BLACK, Styles.NODE_BLACK, Styles.EDGE_SELECTED],\r\n            lines: [5],\r\n          });\r\n        if(dist[u] != null){\r\n          const prev = (dist[v] == null) ? '\\u221E' : dist[v].toString();\r\n          if(dist[v] == null || dist[u] + w < dist[v]){\r\n            commands.push({ eles: [v], distance: [(dist[u]+w).toString()+'\\u003C'+prev], lines: [6,7]});\r\n            dist[v] = dist[u] + w;\r\n            pre[v] = {id: edgeId, u, v};\r\n            commands.push({ eles: [v], distance: [dist[u] + w]});\r\n          }else{\r\n            commands.push({ eles: [v], distance: [prev + '\\u2264' + (dist[u]+w).toString()]});\r\n            commands.push({ eles: [v], distance: [prev]});\r\n          }\r\n        }\r\n        commands.push(\r\n          {\r\n            eles: [u, v, edgeId],\r\n            style: [Styles.NODE, Styles.NODE, Styles.EDGE_DIRECTED],\r\n          });\r\n      });\r\n    };\r\n  }\r\n\r\n  let negativeCycle = false;\r\n  for(let j = 1; j <= n && !negativeCycle; j++){\r\n    const currentId = 'node-'+j;\r\n    const current = cy.getElementById(currentId);\r\n    current.outgoers('edge').forEach(edge => {\r\n      if(negativeCycle) return;\r\n      let   u = edge.data('source'),\r\n            v = edge.data('target'),\r\n            w = edge.data('weight');\r\n      const edgeId = edge.id();\r\n      commands.push(\r\n        {\r\n          eles: [u, v, edgeId],\r\n          style: [Styles.NODE_BLACK, Styles.NODE_BLACK, Styles.EDGE_SELECTED],\r\n          lines: [9],\r\n        });\r\n      if(dist[u] != null){\r\n        if(dist[u] + w < dist[v]){\r\n          const eles = [], style = [];\r\n          const visited = {};\r\n          while(true){\r\n            visited[v] = true;\r\n            const prev = pre[v];\r\n            eles.push(prev.id, prev.u, prev.v);\r\n            style.push(Styles.EDGE_SELECTED, Styles.NODE_RED, Styles.NODE_RED);\r\n            v = prev.u;\r\n            if(visited[v]) break;\r\n          }\r\n          commands.push(\r\n            {\r\n              eles, \r\n              style,\r\n              inst: [{name:'negative_cycle'}],\r\n              lines: [10,11],\r\n            }\r\n          );\r\n          negativeCycle = true;\r\n          return;\r\n        }\r\n      }\r\n      commands.push(\r\n        {\r\n          eles: [u, v, edgeId],\r\n          style: [Styles.NODE, Styles.NODE, Styles.EDGE_DIRECTED],\r\n        });\r\n    });\r\n  };\r\n\r\n  return commands;\r\n}\r\n\r\nexport default BellmanFord;","import PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Prim = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n  const dist = {};\r\n  const part_of_tree = {};\r\n  const pq = new PriorityQueue((x, y) => x.weight <= y.weight);\r\n  const commands = [];\r\n  commands.push(\r\n    {\r\n      eles: nodes.map(x => x.data('id')),\r\n      distance: Array(cy.nodes().length).fill('\\u221E'),\r\n      lines: [1,2,3,4,5],\r\n    },\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2,3,4,5],\r\n    }\r\n  );\r\n  \r\n  nodes.forEach(node => {\r\n    if(node.id().match('-popper')) return;\r\n    pq.push({target: node.id(), edgeId: 'NONE', weight: Infinity})\r\n  })\r\n  let mst = 0;\r\n  while(!pq.isEmpty()){\r\n    const edge = pq.top(); pq.pop() ;\r\n    const{target, edgeId, weight} = edge;\r\n    if(part_of_tree[target]) continue;\r\n    if(weight === Infinity) dist[target] = 0;\r\n    commands.push({lines: [6], duration: 1000});\r\n\r\n    part_of_tree[target] = true;\r\n\r\n    const current = cy.getElementById(target);\r\n    commands.push(\r\n      {\r\n        eles: [target],\r\n        style: [\r\n          Styles.NODE_RED,\r\n        ],\r\n        duration: 1000,\r\n        lines: [7,8],\r\n        inst: [{\r\n          name: 'change_element',\r\n          position: parseInt(current.data('value'), 10) - 1,\r\n          data: {\r\n            value: dist[target].toString(),\r\n            class: 'heap-wrong',\r\n          }\r\n        }],\r\n      },\r\n    );\r\n\r\n    if(edgeId !== 'NONE'){\r\n      commands.push({\r\n        eles: [edgeId],\r\n        style: [Styles.EDGE_MST],\r\n        lines: [9, 10],\r\n      });\r\n      part_of_tree[edgeId] = true;\r\n    }\r\n\r\n    mst += weight;\r\n    const neighborhood = cy.getElementById(target).connectedEdges();\r\n\r\n    neighborhood.forEach(edge => {\r\n      if(part_of_tree[edge.id()]) return;\r\n\r\n      let t = edge.target().id();\r\n      if(t === target) t = edge.source().id();\r\n      if(part_of_tree[t]) return;\r\n      let w = edge.data('weight');\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_TRAVERSE],\r\n        lines: [11],\r\n      });\r\n      commands.push({lines: [12]});\r\n      if(dist[t] === undefined || dist[t] > w){\r\n        commands.push({\r\n          lines: [13,14],\r\n          eles: [t],\r\n          style: [Styles.NODE_GRAY],\r\n          distance: [w],\r\n          inst: [{\r\n            name: 'change_element',\r\n            position: parseInt(cy.getElementById(t).data('value'), 10) - 1,\r\n            data: {\r\n              value: w.toString(),\r\n              class: 'heap-default',\r\n            }\r\n          }],\r\n        });\r\n        dist[t] = w;\r\n        pq.push({\r\n          target: t,\r\n          edgeId: edge.id(),\r\n          weight: w,\r\n        })\r\n      }\r\n      let nextStyle;\r\n      if(part_of_tree[edge.id()]) nextStyle=Styles.EDGE_MST;\r\n      else nextStyle=Styles.EDGE_NO_MST;\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [nextStyle],\r\n        duration: 10,\r\n      });\r\n    });\r\n    commands.push({\r\n      inst: [{\r\n        name: 'change_element',\r\n        position: parseInt(current.data('value'), 10) - 1,\r\n        data: {\r\n          value: (dist[target]===undefined ? '0' : (dist[target]).toString()),\r\n          class: 'heap-default',\r\n        }\r\n      }], \r\n    });\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default Prim;","export default class DisjointSet {\r\n  _parent = {}\r\n  constructor(nodes){\r\n    nodes.forEach(node => this._parent[node.id()] = node.id());\r\n  }\r\n\r\n  find(node){\r\n    if(this._parent[node] === node) return node;\r\n    this._parent[node] = this.find(this._parent[node]);\r\n    return this._parent[node];\r\n  }\r\n\r\n  join(nodeX, nodeY){\r\n    this._parent[this.find(nodeX)] = this.find(nodeY);\r\n  }\r\n\r\n  connected(nodeX, nodeY){\r\n    return this.find(nodeX) === this.find(nodeY);\r\n  }\r\n}\r\n\r\n","import DisjointSet from './DS/DisjointSet';\r\nimport PriorityQueue from './DS/PriorityQueue';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst Kruskal = param => {\r\n  const {cy} = param;\r\n\r\n  const nodes = cy.nodes();\r\n  const edges = cy.edges();\r\n\r\n\r\n  const sorted = new PriorityQueue((x, y) => { return x.data('weight') <= y.data('weight')});\r\n  edges.forEach(edge => sorted.push(edge));\r\n\r\n  const commands = [\r\n    {\r\n      eles: edges.map(x => x.data('id')),\r\n      style: Array(cy.edges().length).fill(Styles.EDGE_NO_MST),\r\n      duration: 1000,\r\n      lines: [1,2],\r\n    }\r\n  ];\r\n\r\n  const ds = new DisjointSet(nodes);\r\n  let weight = 0;\r\n  let edges_used = 0;\r\n  \r\n  while(!sorted.isEmpty()){\r\n    const edge = sorted.top(); sorted.pop();\r\n    const x = edge.source().id(), y = edge.target().id();\r\n    commands.push({\r\n      eles: [edge.id()],\r\n      style: [Styles.EDGE_TRAVERSE],\r\n      duration: 1000,\r\n      lines: [3],\r\n    })\r\n    if(!ds.connected(x, y)){\r\n      ds.join(x, y);\r\n      weight += edge.data('weight');\r\n      const source = edge.source(), target = edge.target();\r\n      commands.push(\r\n        {\r\n          eles: [edge.id(), source.id(), target.id()],\r\n          style: [\r\n            Styles.EDGE_MST,\r\n            Styles.NODE_RED,\r\n            Styles.NODE_RED,\r\n          ],\r\n          duration: 1000,\r\n          lines: [4,5],\r\n        }\r\n      );\r\n      edges_used++;\r\n    }else{\r\n      commands.push({\r\n        eles: [edge.id()],\r\n        style: [Styles.EDGE_NO_MST],\r\n        duration: 1000,\r\n        lines: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  return commands;\r\n}\r\n\r\nexport default Kruskal;","const singlyLinkedList = [\r\n  { text: 'ListaEnlazada{', ind: 0},\r\n  { text: 'Nodo* inicio', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n];\r\n\r\nconst doublyLinkedList = [\r\n  { text: 'ListaDoblementeEnlazada{', ind: 0},\r\n  { text: 'Nodo *primero, *ultimo', ind: 1},\r\n  { text: 'ExtraerPrimero()', ind: 1},\r\n  { text: 'ExtraerUltimo()', ind: 1},\r\n  { text: 'InsertarPrimero(Entero v)', ind: 1},\r\n  { text: 'InsertarUltimo(Entero v)', ind: 1},\r\n  { text: 'Eliminar(Nodo* p)', ind: 1},\r\n  { text: 'InsertarAntesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: 'InsertarDespuesDe(Nodo* p, Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *ant, *sig', ind: 1},\r\n  { text: '}', ind: 0},\r\n]\r\n\r\nconst queue = [\r\n  { text: 'Cola{', ind: 0},\r\n  { text: 'Nodo *frente, *final', ind: 1},\r\n  { text: 'Encolar(Entero v)', ind: 1},\r\n  { text: 'Desencolar()', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst queuePush = [\r\n  { text: 'Encolar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si frente==NULL:', ind: 1},\r\n  { text: 'frente=final=aux', ind : 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'final->sig=aux', ind: 2},\r\n  { text: 'final=aux', ind: 2},\r\n];\r\n\r\nconst queuePop = [\r\n  { text: 'Desencolar():', ind: 0},\r\n  { text: 'Si frente==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux = frente->sig'},\r\n  { text: 'Si frente==NULL: ', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'frente=frente->sig', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst stack = [\r\n  { text: 'Pila{', ind: 0},\r\n  { text: 'Nodo *tope', ind: 1},\r\n  { text: 'Apilar(Entero v)', ind: 1},\r\n  { text: 'Desapilar(Entero v)', ind: 1},\r\n  { text: '}', ind: 0},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'Nodo{', ind: 0},\r\n  { text: 'Entero v', ind: 1},\r\n  { text: 'Nodo *sig', ind: 1},\r\n  { text: '}', ind: 0}\r\n];\r\n\r\nconst stackPush = [\r\n  { text: 'Apilar(Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si tope==NULL:', ind : 1},\r\n  { text: 'tope=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'aux->sig=tope', ind: 2},\r\n  { text: 'tope=aux', ind: 2},\r\n];\r\n\r\nconst stackPop = [\r\n  { text: 'Desapilar():', ind: 0},\r\n  { text: 'Si tope==NULL: retornar', ind: 1},\r\n  { text: 'Nodo *aux=tope', ind: 1},\r\n  { text: 'tope=tope->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n]\r\nconst singlyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=inicio', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 1},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst doublyPopFront = [\r\n  { text: 'ExtraerFrente():', ind: 0},\r\n  { text: 'Si primero == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=primero', ind: 1},\r\n  { text: 'primero=primero->sig', ind: 1},\r\n  { text: 'Si primero==NULL:', ind: 1},\r\n  { text: 'ultimo=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'primero->ant=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'Si inicio->sig == NULL:', ind: 1},\r\n  { text: 'Nodo* aux = inicio', ind: 2},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 2},\r\n  { text: 'nodo *actual = inicio, *anterior', ind: 1},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 1},\r\n  { text: 'anterior=actual', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 2},\r\n  { text: 'anterior->sig=NULL', ind: 1},\r\n  { text: 'retornar actual', ind: 1}\r\n];\r\n\r\nconst doublyPopBack = [\r\n  { text: 'ExtraerUltimo():', ind: 0},\r\n  { text: 'Si inicio == NULL: retornar', ind: 1},\r\n  { text: 'nodo* aux=ultimo', ind: 1},\r\n  { text: 'ultimo=ultimo->ant', ind: 1},\r\n  { text: 'Si ultimo==NULL:', ind: 1},\r\n  { text: 'inicio=NULL', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=NULL', ind: 2},\r\n  { text: 'retornar aux', ind: 1},\r\n];\r\n\r\nconst singlyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=inicio', ind: 2},\r\n  { text: 'inicio=p', ind: 2},\r\n];\r\n\r\nconst doublyPushFront = [\r\n  { text: 'InsertarPrimero(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'p->sig=primero', ind: 2},\r\n  { text: 'primero->ant=p', ind: 2},\r\n  { text: 'primero=p', ind: 2},\r\n];\r\n\r\nconst singlyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==NULL', ind: 1},\r\n  { text: 'inicio=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'nodo *actual = inicio', ind: 2},\r\n  { text: 'Mientras(actual->sig != NULL):', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyPushBack = [\r\n  { text: 'InsertarUltimo(Entero v):', ind: 0},\r\n  { text: 'Nodo *p = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si primero==NULL', ind: 1},\r\n  { text: 'primero=ultimo=p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ultimo->sig=p', ind: 2},\r\n  { text: 'p->ant=ultimo', ind: 2},\r\n  { text: 'ultimo=p', ind: 2},\r\n];\r\n\r\nconst singlyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Si inicio==p:', ind: 1},\r\n  { text: 'inicio=inicio->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'Nodo *actual=incio, *anterior=NULL', ind: 2},\r\n  { text: 'Mientras actual != p:', ind: 2},\r\n  { text: 'anterior=actual', ind: 3},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'anterior->sig=p->sig', ind: 2},\r\n  { text: 'borrar p', ind: 2},\r\n];\r\n\r\nconst doublyRemove = [\r\n  { text: 'Eliminar(Nodo *p):', ind: 0},\r\n  { text: 'Nodo *ant=p->ant, *sig=p->sig', ind: 1},\r\n  { text: 'Caso 1: ant==NULL y sig==NULL:', ind: 1},\r\n  { text: 'primero=ultimo=NULL', ind: 2},\r\n  { text: 'Caso 2: ant==NULL y sig!=NULL', ind: 1},\r\n  { text: 'primero=sig', ind: 2},\r\n  { text: 'Caso 3: ant!=NULL y sig==NULL:', ind: 1},\r\n  { text: 'ultimo=ant', ind: 2},\r\n  { text: 'Caso 4: ant!=NULL y sig!=NULL', ind : 1},\r\n  { text: 'ant->sig=sig, sig->ant=ant', ind: 2},\r\n  { text: 'borrar p', ind: 1},\r\n];\r\n\r\nconst singlyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Si inicio==p', ind: 1},\r\n  { text: 'aux->sig=inicio', ind: 2},\r\n  { text: 'inicio=aux', ind: 2},\r\n  { text: 'sino:', ind: 1},\r\n  { text: 'Nodo *actual=inicio', ind: 2},\r\n  { text: 'Mientras actual->sig != p:', ind: 2},\r\n  { text: 'actual=actual->sig', ind: 3},\r\n  { text: 'actual->sig=aux', ind: 2},\r\n  { text: 'aux->sig=p', ind: 2},\r\n];\r\n\r\nconst doublyInsertBefore = [\r\n  { text: 'InsertarAntesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *ant = p->ant', ind: 1},\r\n  { text: 'aux->sig=p, aux->ant=ant', ind: 1},\r\n  { text: 'p->ant=aux', ind: 1},\r\n  { text: 'Si ant == NULL:', ind: 1},\r\n  { text: 'primero=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'ant->sig=aux', ind: 2},\r\n];\r\n\r\nconst singlyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *s = p->sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'aux->sig=s', ind: 1},\r\n];\r\n\r\nconst doublyInsertAfter = [\r\n  { text: 'InsertarDespuesDe(Nodo *p, Entero v):', ind: 0},\r\n  { text: 'Nodo *aux = nuevo Nodo(v)', ind: 1},\r\n  { text: 'Nodo *sig = p->sig', ind: 1},\r\n  { text: 'aux->ant=p, aux->sig=sig', ind: 1},\r\n  { text: 'p->sig=aux', ind: 1},\r\n  { text: 'Si sig == NULL:', ind: 1},\r\n  { text: 'ultimo=aux', ind: 2},\r\n  { text: 'Sino:', ind: 1},\r\n  { text: 'sig->ant=aux', ind: 2},\r\n];\r\n\r\n\r\nconst singlySet = {\r\n  main: singlyLinkedList,\r\n  pushFront: singlyPushFront,\r\n  pushBack: singlyPushBack,\r\n  popFront: singlyPopFront,\r\n  popBack: singlyPopBack,\r\n  insertBefore: singlyInsertBefore,\r\n  insertAfter: singlyInsertAfter,\r\n  remove: singlyRemove,\r\n}\r\n\r\nconst doublySet = {\r\n  main: doublyLinkedList,\r\n  pushFront: doublyPushFront,\r\n  pushBack: doublyPushBack,\r\n  popFront: doublyPopFront,\r\n  popBack: doublyPopBack,\r\n  insertBefore: doublyInsertBefore,\r\n  insertAfter: doublyInsertAfter,\r\n  remove: doublyRemove,\r\n}\r\n\r\nconst queueSet = {\r\n  main: queue,\r\n  pushFront: [],\r\n  pushBack: queuePush,\r\n  popFront: queuePop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nconst stackSet = {\r\n  main: stack,\r\n  pushFront: stackPush,\r\n  pushBack: [],\r\n  popFront: stackPop,\r\n  popBack: [],\r\n  insertBefore: [],\r\n  insertAfter: [],\r\n  remove: [],\r\n}\r\n\r\nexport default {\r\n  singlySet, doublySet, queueSet, stackSet,\r\n};","import BFS from './Algorithms/BFS';\r\nimport DFS from './Algorithms/DFS';\r\nimport Dijkstra from './Algorithms/Dijkstra';\r\nimport BellmanFord from './Algorithms/BellmanFord';\r\nimport Prim from './Algorithms/Prim';\r\nimport Kruskal from './Algorithms/Kruskal';\r\n\r\nimport pseudocodes from './resources/pseudocodes/list';\r\nimport actions from './Actions/actions';\r\nconst properties = {\r\n  BFS: {\r\n    execute: BFS,\r\n    directed: true,\r\n    action: actions.SELECT_BFS,\r\n  },\r\n  DFS: {\r\n    execute: DFS,\r\n    directed: true,\r\n    action: actions.SELECT_DFS,\r\n  },\r\n  Dijkstra: {\r\n    execute: Dijkstra,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_DIJKSTRA,\r\n  },\r\n  BellmanFord: {\r\n    execute: BellmanFord,\r\n    directed: true,\r\n    weighted: true,\r\n    action: actions.SELECT_BELLMAN_FORD,\r\n  },\r\n  Prim: {\r\n    execute: Prim,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_PRIM,\r\n  },\r\n  Kruskal: {\r\n    execute: Kruskal,\r\n    directed: false,\r\n    weighted: true,\r\n    action: actions.SELECT_KRUSKAL,\r\n  },\r\n  Heap: {\r\n    action: actions.SELECT_HEAP,\r\n  },\r\n  AVL: {\r\n    action: actions.SELECT_AVL,\r\n  },\r\n  BubbleSort: {\r\n    action: actions.SELECT_BUBBLESORT,\r\n  },\r\n  MergeSort: {\r\n    action: actions.SELECT_MERGESORT,\r\n  },\r\n  BinarySearch: {\r\n    action: actions.SELECT_BINARY_SEARCH,\r\n  },\r\n  SingleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_SINGLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.singlySet,\r\n  },\r\n  DoubleLinkedList: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_DOUBLE_LINKED_LIST,\r\n    pseudoset: pseudocodes.doublySet,\r\n  },\r\n  Stack: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_STACK,\r\n    pseudoset: pseudocodes.stackSet,\r\n  },\r\n  Queue: {\r\n    action: actions.SELECT_LINKED_LIST,\r\n    type: actions.SELECT_QUEUE,\r\n    pseudoset: pseudocodes.queueSet,\r\n  },\r\n\r\n}\r\n\r\nexport default properties;","const BubbleSort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n\r\n  const commands = [];\r\n  for(let j = 0; j < n; j++){\r\n    commands.push({eles: [], style: [], lines: [1,2]});\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      let bcolor, swap=false;\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; swap=true;\r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n        bcolor = 'LightCoral';\r\n      }else bcolor = 'Chartreuse';\r\n\r\n      commands.push(\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': bcolor},\r\n            {'background-color': bcolor},\r\n          ], \r\n          duration: 1000,\r\n          lines: [4],\r\n        },\r\n        {\r\n          eles: [i.toString(), (i+1).toString()],\r\n          style: [\r\n            {'background-color': 'white'},\r\n            {'background-color': 'white'},\r\n          ],\r\n          data: [\r\n            {'value': values[i]},\r\n            {'value': values[i+1]},\r\n          ],\r\n          duration: 1000,\r\n          lines: (swap ? [5,6] : [3])\r\n        },\r\n      );\r\n      if(swap) commands.push({eles: [], style: [], lines: [3]});\r\n    }\r\n    if(sorted){\r\n      commands.push({\r\n        eles: [],\r\n        style: [],\r\n        lines:[7],\r\n      });\r\n      break;\r\n    }\r\n  }\r\n  return commands;\r\n}\r\n\r\nexport default BubbleSort;","import React, { ReactElement } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, FormControl } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n//5(3(1(.)(.))(4(.)(.)))(9(7(6(.)(.))(8(.)(.)))(15(11(.)(.))(.)))\r\ntype Props = {\r\n  show: boolean,\r\n  handleClose: () => void,\r\n  changeArray: (values: Array<number>) => void,\r\n  currentValues: Array<number>,\r\n  dispatch: (action:Object)=>void,\r\n}\r\ntype State = {\r\n  text: string,\r\n}\r\nclass InputArrayModal extends React.Component<Props, State>{\r\n  input:HTMLInputElement | null;\r\n  setStepInputRef:(element:HTMLInputElement)=>void;\r\n\r\n  constructor(props:Props){\r\n    super(props);\r\n    this.input = null;\r\n    this.state = {\r\n      text: this.props.currentValues.toString(),\r\n    }\r\n    this.setStepInputRef = element => {\r\n      this.input = element;\r\n    };\r\n  }\r\n\r\n  validateArray(text: string) {\r\n    let regex = /^(([-]?([0-9]{1,3})([,][ ]*)){0,15})([-]?([0-9]{1,3}))$/;\r\n    if (text && regex.test(text)) {\r\n      return true;\r\n    } else {\r\n      this.props.dispatch({type: actions.INVALID_ARRAY_ERROR})\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleAccept = () => {\r\n    if(this.input && this.validateArray(this.input.value)){\r\n      const text = this.input.value;\r\n      const values = text.split(',').map(x => parseInt(x));\r\n      console.log(values);\r\n      this.props.changeArray(values);\r\n      this.props.handleClose();\r\n    }\r\n  }\r\n\r\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({text: e.currentTarget.value});\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({text: this.props.currentValues.toString()});\r\n    this.props.handleClose();\r\n  }\r\n  render(){\r\n    const {show, handleClose} = this.props;\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header className='modal-header' closeButton>\r\n          <Modal.Title>Introduzca un arreglo de enteros</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Debe estar representado por maximo 16 numeros separados por coma</p>\r\n          <p>Cada numero debe estar entre -999 y 999</p>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.setStepInputRef} \r\n            value={this.state.text}\r\n            size={60}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleAccept}>\r\n            Aceptar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(InputArrayModal);","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport processCommands from '../Processing/graph-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\n\r\nclass BubbleSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tundo:Array<stackState> =[];\r\n\tredo:Array<stackState> =[];\r\n\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\tvalues: [1,4,8,1,4,3,6,9,10,-1],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tbuffer:Array<{elements:Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n\t\tclearTimeout(this.animationTimeout);\r\n    this._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tinitialize(elements: Array<Object>){\r\n    this.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tconsole.log('UNDO');\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\t\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t})\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n  \r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BUBBLESORT_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n\trunButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: () => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = Bubblesort(this.state.values);\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);     \r\n\t\t\tresolve();\r\n    }).then(()=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed);\r\n    })\r\n\t}\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BubbleSort);","const mergeSortAnimation = (input, width, height) => {\r\n  const commands = [];\r\n\r\n  const mergeSort = (param, start, l, r, h) => {\r\n    const values = [...param];\r\n    const n = values.length;\r\n    const nodes = [], focus = [], nofocus = [], positions = [];\r\n    const shadows = [], rshadows = [];\r\n    let cmd = {\r\n      nodes: [],\r\n      duration: 1000,\r\n      style: [],\r\n    }\r\n    const p = (l + r)/2;\r\n    values.forEach((value, index) => {\r\n      nodes.push({\r\n        id: (start + index).toString(),\r\n      });\r\n      positions.push({\r\n        x: p - (n-1)*(35/2) + 35*(index),\r\n        y: h,\r\n      });\r\n      focus.push({\r\n        'border-width': '3',\r\n      });\r\n      nofocus.push({\r\n        'border-width': '1',\r\n      })\r\n      shadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '+',\r\n        position: {x: p - (n-1)*(35/2) + 35*(index), y: h }\r\n      });\r\n      rshadows.push({\r\n        id: (start+index).toString() + '-' + h.toString(),\r\n        value: '-',\r\n      });\r\n    });\r\n    commands.push({nodes, style: focus, positions});\r\n    commands.push({shadows, duration: 10});\r\n    if(n === 1){\r\n      commands.push({nodes: [], lines: [1,2], shadows: [{id:start+'-'+h, value: '-'}]});\r\n      return values;\r\n    }\r\n    const mid = Math.floor((n+1)/2);\r\n    commands.push({nodes: [], lines:[3]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const left = mergeSort(values.slice(0, mid), start, l, (l+r)/2, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    commands.push({nodes: [], lines:[4]});\r\n    commands.push({nodes, style: nofocus, duration: 10});\r\n    const right = mergeSort(values.slice(mid), start + mid, (l+r)/2, r, h + 50);\r\n    commands.push({nodes, style: focus, duration: 10});\r\n    let li = 0, ri = 0;\r\n    commands.push({nodes: [], lines: [5]}, {nodes: [], lines: [8,9]});\r\n    for(let i = 0; i < n; i++){  \r\n      const pos = p - (n-1)*(35/2) + 35*i;\r\n      cmd = {\r\n        nodes: [],\r\n        duration: 1000,\r\n      };\r\n      if(ri == right.length || (li < left.length && left[li].value<=right[ri].value)){\r\n        cmd.nodes = [{id: left[li].id}];\r\n        cmd.lines = [11,12];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = left[li++];\r\n      }else{\r\n        cmd.nodes = [{id: right[ri].id}];\r\n        cmd.positions = [{x: pos, y: h}];\r\n        values[i] = right[ri++];\r\n        cmd.lines=[13, 14];\r\n      }\r\n      commands.push(cmd);\r\n    }\r\n    commands.push({nodes: [], lines: [15]});\r\n    commands.push({nodes: [], lines: [5]});\r\n    commands.push({nodes, style: nofocus, shadows: rshadows});\r\n    return values;\r\n  }\r\n\r\n  input = input.map((value, index) => {\r\n    return {\r\n      value, id: index.toString(),\r\n    }\r\n  });\r\n  const mid = width/2;\r\n  mergeSort(input, 0, mid - 35*input.length, mid + 35*input.length, height/4);\r\n  return commands;\r\n}\r\n\r\nexport default mergeSortAnimation;","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\n\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\nconst exportGraph = (cy: any) => {\r\n  const elements:Array<Object> = [];\r\n  cy.nodes().forEach((node:CytoscapeElement) => {\r\n    let prev = node.data('prevPosition');\r\n    if(!prev) prev = node.data('position');\r\n    elements.push({\r\n      group: 'nodes',\r\n      data: {\r\n        id: node.id(),\r\n        value: node.data('value'),\r\n        style: node.data('style'),\r\n        position: node.data('position'),\r\n      },\r\n      position: prev,\r\n    })\r\n    node.data('prevPosition', node.data('position'));\r\n  });\r\n  cy.edges().forEach((edge:CytoscapeElement) => {\r\n    elements.push({\r\n      group: 'edges',\r\n      data: {\r\n        id: edge.id(),\r\n        source: edge.source().id(), target: edge.target().id(),\r\n        weight: edge.data('weight'),\r\n        style: edge.data('style'),\r\n        /*\r\n        style: {\r\n          lineColor: edge.style('line-color'),\r\n          targetArrowShape: edge.style('target-arrow-shape'),\r\n          targetArrowColor: edge.style('target-arrow-color'),\r\n          lineStyle: edge.style('line-style'),\r\n        }\r\n        */\r\n      }\r\n    })\r\n  });\r\n  console.log(JSON.parse(JSON.stringify(elements)));\r\n  return JSON.parse(JSON.stringify(elements));\r\n}\r\n\r\n\r\nconst addShadow = (cy: any, id: string, position: {x: number, y: number}) => {\r\n  console.log('adding shadow');\r\n  cy.add({\r\n    group: 'nodes',\r\n    data: { \r\n      id,\r\n      style: {\r\n        zIndex: 1\r\n      },\r\n      position: {x: position.x, y: position.y}\r\n    },\r\n    position: {x: position.x, y: position.y}\r\n  });\r\n  console.log('shadow added', cy.nodes());\r\n}\r\n\r\nconst processCommands = (elements: Array<Object>, commands:Array<AnimationStep>) => {\r\n  \r\n  const cy = cytoscape({\r\n    elements: JSON.parse(JSON.stringify(elements)),\r\n    headless: true,\r\n  });\r\n\r\n  const steps:Array<{elements:Array<Object>, lines: Array<number>, duration: number}>=[];\r\n\r\n  let lastLines:Array<number> = [];\r\n  let lastDuration = 0;\r\n  for(let pos = 0; pos < commands.length; pos++){\r\n    let {nodes, duration, lines, style, positions, shadows} = commands[pos];\r\n    if(duration == null) duration = 1000;\r\n    if(lines == null) lines = [];\r\n\r\n    steps.push({elements: exportGraph(cy), lines: lastLines, duration: lastDuration});\r\n    lastLines = lines;\r\n    lastDuration = duration;\r\n    if(nodes){\r\n      nodes.forEach((node, index) => {\r\n        let ele = cy.getElementById(node.id);\r\n        ele.data('prevPosition', ele.data('position'));\r\n        let prevStyle = ele.data('style');\r\n        if(style) ele.data('style', {...prevStyle, ...style[index]});\r\n        if(positions){\r\n          ele.data('position', positions[index]);\r\n        }\r\n      })\r\n    }\r\n    if(shadows){\r\n      //console.log(shadows);\r\n      shadows.forEach(shadow => {\r\n        if(shadow.value === '+') addShadow(cy, shadow.id, shadow.position);\r\n        else cy.remove('node[id=\"'+shadow.id+'\"]');\r\n      });\r\n    }\r\n  }\r\n  steps.push({elements: exportGraph(cy), lines: lastLines, duration: 0});\r\n  return steps;\r\n}\r\n\r\nexport default processCommands;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport Mergesort from '../Algorithms/MergeSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport processCommands from '../Processing/mergesort-processing';\r\nimport { node } from 'prop-types';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\ntype State = {\r\n\tshow: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n  action: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\nclass MergeSort extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t_mediaRecorder = new MediaRecorder();\r\n  cy = cytoscape();\r\n\r\n  state = {\r\n\t\tshow: false,\r\n\t\tvalues: [4, 8, 12, 16, 10, 4, 45, 17],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = {...Styles.NODE, shape: 'square', zIndex: 2};\r\n\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\r\n\tbuffer:Array<{elements:Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\r\n\tundo:Array<stackState> = [];\r\n\tredo:Array<stackState> = [];\r\n\r\n\tstep = 0;\r\n\tanimationTimeout = 0;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Ordenar',\r\n\t\t\t\trun: this.runButton,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload: {\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t}\r\n    })\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps:Props, prevState:State){\r\n\t\tlayoutOptions.animationDuration = 500/this.props.speed;\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n  }\r\n\t\r\n\tinitialize(elements: Array<Object>){\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements: JSON.parse(JSON.stringify(elements)),\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: this.nodeStyle,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\t\tlayoutOptions.positions = {};\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n\t\t//this.refreshLayout();\r\n\t}\r\n\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\t\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t\tconst position = node.data('position');\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif(position != null){\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t\t\r\n\t\tthis.refreshLayout();\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tzIndex: node.style('z-index'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({...layoutOptions, animate: true});\r\n    this.layout.run();\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = {\r\n\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\ty: this.cy.height()/4,\r\n\t\t}\r\n  }\r\n\t\r\n\taddShadow = (id: string, position: {x: number, y: number}) => {\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'nodes',\r\n\t\t\tdata: { id },\r\n\t\t\tstyle: {'z-index': 1},\r\n\t\t\tposition,\r\n\t\t});\r\n\t\tlayoutOptions.positions[id] = position;\r\n\t}\r\n\r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tconsole.log(this.props.paused);\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ARRAY_SORTED_SUCCESS,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tconsole.log(duration);\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BUBBLESORT_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n\t\t}\r\n\t\tthis.refreshLayout();\r\n\r\n\t}\r\n\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n\trunButton = () => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: () => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = Mergesort(this.state.values, this.cy.width(), this.cy.height());\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);     \r\n\t\t\tresolve();\r\n    }).then(()=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed);\r\n    })\r\n\t}\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n\t\tthis.setState({values});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MergeSort);","const Sort = (param) => {\r\n  const values = [];\r\n  for(let i = 0; i < param.length; i++) values.push(param[i]);\r\n  const n = values.length;\r\n  for(let j = 0; j < n; j++){\r\n    let sorted = true;\r\n    for(let i = 0; i < n-1; i++){\r\n      if(values[i] > values[i+1]){\r\n        sorted = false; \r\n        [values[i], values[i+1]] = [values[i+1], values[i]];\r\n      }\r\n    }\r\n    if(sorted) break;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport default Sort;","import Sort from './BubbleSort-util';\r\nconst BinarySearch = (param, value) => {\r\n  const values = Sort(param);\r\n  const n = values.length;\r\n  const positions = Array(n).fill().map((value, index) => index.toString());\r\n  const defaultStyle = Array(n).fill({'border-width': 1, 'z-index': 0});\r\n  const commands = [];\r\n\r\n  let lo = 0, hi = n - 1;\r\n  let found = false;\r\n  while(lo <= hi){\r\n    commands.push({\r\n      eles: positions,\r\n      style: defaultStyle,\r\n      duration: 0,\r\n    });\r\n    const cmd = {eles: [], style: []};\r\n    for(let i = lo; i <= hi; i++){\r\n      cmd.eles.push(i.toString());\r\n      cmd.style.push({'border-width': 3, 'z-index': 1});\r\n    }\r\n    commands.push(cmd);\r\n    const mid = Math.floor((lo + hi)/2);\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'gray', 'z-index': 2}],\r\n      lines: [3],\r\n    });\r\n    commands.push({\r\n      lines: (value < values[mid] ? [6, 7] : (values[mid] < value ? [8, 9] : [4, 5])),\r\n    });\r\n    if(values[mid] === value){\r\n      commands.push({\r\n        eles: [mid.toString()],\r\n        style: [{'background-color': 'lightgreen'}],\r\n        lines: [4, 5],\r\n      });\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    commands.push({\r\n      eles: [mid.toString()],\r\n      style: [{'background-color': 'white', 'z-index': 1}],\r\n      duration: 10,\r\n    });\r\n    if(values[mid] < value) lo = mid + 1;\r\n    else hi = mid - 1;\r\n  }\r\n  if(!found) commands.push({eles: [], style: [], lines: [10]});\r\n  return commands;\r\n}\r\n\r\nexport default BinarySearch;","import React from 'react';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport ControlBar from './ControlBar';\r\nimport Bubblesort from '../Algorithms/BubbleSort';\r\nimport actions from '../Actions/actions';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport InputArrayModal from './InputArrayModal';\r\nimport InputModal from './InputModal';\r\nimport BinarySearchAlgo from '../Algorithms/BinarySearch';\r\nimport Sort from '../Algorithms/BubbleSort-util';\r\nimport processCommands from '../Processing/graph-processing';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype storeState = {\r\n\tanimation: string,\r\n\tspeed: number,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype Props = {\r\n\taction: string,\r\n  animation: boolean,\r\n  speed: number,\r\n\tdispatch: (action: Object) => Object,\r\n\tpaused: boolean,\r\n}\r\n\r\ntype stackState = Array<number>;\r\n\r\ntype State = {\r\n  show: boolean,\r\n  showInputModal: boolean,\r\n\tvalues: Array<number>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n\t\tspeed: state.speed,\r\n\t\tpaused: state.paused,\r\n  }\r\n}\r\n\r\nclass BinarySearch extends React.Component<Props, State> {\r\n\t_isMounted = false;\r\n\t\r\n\t_mediaRecorder = new MediaRecorder();\r\n\r\n  cy = cytoscape();\r\n\r\n\tundo:Array<stackState> = [];\r\n\tredo:Array<stackState> = [];\r\n\r\n\tstate = {\r\n    show: false,\r\n    showInputModal: false,\r\n\t\tvalues: [1,2,3,4,5,6,7,8],\r\n\t}\r\n\r\n\tlayout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n\t};\r\n\r\n\tnodeStyle = Styles.NODE;\r\n\toptions:Array<{name: string, run: () => void}>;\r\n\tbuffer: Array<{elements: Array<Object>, lines: Array<number>, duration: number}> = [];\r\n\tanimationTimeout = 0;\r\n\tstep = 0;\r\n\tconstructor(props:Props){\r\n    super(props);\r\n\t\tthis._mediaRecorder = new MediaRecorder(props.dispatch);\r\n\t\tthis.options = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Buscar',\r\n\t\t\t\trun: () => this.setState({showInputModal: true}),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cambiar arreglo',\r\n\t\t\t\trun: () => this.setState({show: true}),\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t\r\n  componentDidMount() {\r\n\r\n\t\tthis._isMounted = true;\r\n\t\t\r\n    \r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\toptions: this.options,\r\n\t\t\t\tundo: this.handleUndo,\r\n\t\t\t\tredo: this.handleRedo,\r\n\t\t\t\trewind: this.handleRewind,\r\n\t\t\t\tforward: this.handleForward,\r\n\t\t\t\tpause: this.handlePauseContinue,\r\n\t\t\t\trepeat: this.handleRepeat,\r\n\t\t\t}\r\n    })\r\n\t\t\r\n\t\tthis.initialize([]);\r\n\t\tthis.valuesToGraph();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps: Props, prevState: State){\r\n\t\tif(prevState.values !== this.state.values){\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t}\r\n\r\n\t\tif(prevProps.animation && !this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options}\r\n\t\t\t});\r\n\t\t}else if(!prevProps.animation && this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: [{name: 'Volver a edicion', run: this.runButton}]}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentWillUnmount(){\r\n    this.props.dispatch({\r\n      type: actions.ANIMATION_END,\r\n    });\r\n    \r\n\t\tthis._isMounted = false;\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tlet id = node.id();\r\n\t\t\tlet popper = document.getElementById(id + 'popper');\r\n\t\t\tif (popper) {\r\n\t\t\t\tdocument.body.removeChild(popper);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.undo.pop();\r\n\t\tthis.redo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0) return;\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t})\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst prevValues = this.redo.pop();\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t\tif(prevValues) this.changeArray(prevValues);\r\n\t}\r\n\r\n\thandleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n\tpushState(){\r\n\t\tthis.redo = [];\r\n\t\tthis.undo.push([...this.state.values]);\r\n\t}\r\n\r\n\tloadGraph(elements:Array<Object>){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node:CytoscapeElement) => {\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor(let i = 0; i < elements.length; i++){\r\n\t\t\tthis.cy.add(elements[i]);\r\n\t\t}\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif(style != null) node.style(style);\r\n\t\t})\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif(style != null) edge.style(style);\r\n\t\t})\r\n\t}\r\n\t\r\n\texportGraph(withStyle:boolean=false){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n\t\t\t\t\tvalue: node.data('value'),\r\n\t\t\t\t\tposition: node.position(),\r\n\t\t\t\t\tstyle: (withStyle? {\r\n\t\t\t\t\t\tcolor: node.style('color'),\r\n\t\t\t\t\t\tbackgroundColor: node.style('background-color'),\r\n\t\t\t\t\t\tborderWidth: node.style('border-width'),\r\n\t\t\t\t\t\twidth: node.style('width'),\r\n\t\t\t\t\t\theight: node.style('height'),\r\n\t\t\t\t\t\tvisibility: node.style('visibility'),\r\n\t\t\t\t\t} : {}),\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n\t}\r\n\r\n  refreshLayout() {\r\n\t\tthis.layout.stop();\r\n    this.layout = this.cy.elements().makeLayout({ name: 'preset' });\r\n    this.layout.run();\r\n\r\n\t}\r\n  \r\n  addNode = (id: string, value: number | string) => {\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n\t\t\t},\r\n\t\t\tposition: {\r\n\t\t\t\tx: this.cy.width()/2 - (this.state.values.length-1)*(35/2) + 35*(parseInt(id)),\r\n\t\t\t\ty: this.cy.height()/4,\r\n\t\t\t},\r\n\t\t});\r\n  }\r\n\t\r\n\tanimation(found=false){\r\n\t\tlet step = () => {\r\n\t\t\tif(!this.props.animation){\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.step === this.buffer.length) {\r\n\t\t\t\t\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: found ? actions.BINARY_SEARCH_FOUND_SUCCESS : actions.BINARY_SEARCH_NOT_FOUND_INFO,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.props.paused) return;\r\n\t\t\tconst {elements, lines, duration} = this.buffer[this.step++];\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\tthis.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n\t}\r\n  executeAnimation = (commands: Array<AnimationStep>, found?:boolean) => {\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n\t\t});\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.STARTING_BINARY_SEARCH_INFO,\r\n\t\t});\r\n\t\tthis.step = 0;\r\n\t\tthis.animation();\r\n  }\r\n\r\n\tvaluesToGraph(){\r\n\t\tconst {values} = this.state;\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => this.cy.remove(node));\r\n    for(let i = 0; i < values.length; i++){\r\n      this.addNode(i.toString(), values[i]);\r\n      this.refreshLayout();\r\n    }\r\n\t}\r\n\tinitialize(elements: Array<Object>){\r\n    this.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n\t\t\tpixelRatio: '1.0',\r\n\t\t\tautoungrabify: true,\r\n\t\t});\r\n\r\n\t\tthis.cy.autopanOnDrag({ enabled: true, speed: 0.01 });\r\n\t\tthis.layout = this.cy.elements().makeLayout({\r\n\t\t\tname: 'preset',\r\n    });\r\n    this.layout.run();\r\n\t}\r\n\tclearGraph(){\r\n\t\tconst nodes = this.cy.nodes();\r\n\t\tfor(let i = 0; i < nodes.length; i++){\r\n\t\t\tthis.cy.remove('node[id=\"'+nodes[i].id()+'\"]');\r\n\t\t}\r\n\t}\r\n  runButton = (value:number) => {\r\n    if(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t});\r\n\t\t\tthis.clearGraph();\r\n\t\t\tthis.valuesToGraph();\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\treturn;\r\n\t\t}\r\n    new Promise((resolve: (found:boolean) => void, reject) => { \r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      })\r\n\t\t\tconst commands = BinarySearchAlgo(this.state.values, value);\r\n\t\t\tthis.buffer = processCommands(this.exportGraph(), commands);\r\n\t\t\tconst found = this.cy.nodes('[value = '+value+']').length > 0;\r\n      resolve(found);\r\n    }).then((found:boolean)=> {\r\n      setTimeout(this.executeAnimation, 1000/this.props.speed, found);\r\n    })\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({show: false});\r\n\t}\r\n\t\r\n\r\n\tchangeArray = (values: Array<number>) => {\r\n    const sorted = Sort(values);\r\n\t\tthis.setState({values: sorted});\r\n\t}\r\n\r\n  render(){\r\n    return (\r\n\t\t\t<>\r\n        <InputModal\r\n          show={this.state.showInputModal}\r\n          handleClose={()=>this.setState({showInputModal: false})}\r\n          callback={(v:number)=>this.runButton(v)}\r\n          currentValue={0}\r\n        />\r\n\t\t\t\t<InputArrayModal \r\n\t\t\t\t\tshow={this.state.show} \r\n\t\t\t\t\thandleClose={this.handleClose} \r\n\t\t\t\t\tchangeArray={(v:Array<number>) => {this.pushState(); this.changeArray(v)}}\r\n\t\t\t\t\tcurrentValues={this.state.values}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"canvas\" className='standard-struct'/>\r\n\t\t\t</>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BinarySearch);","import actions from \"../../Actions/actions\";\r\n\r\n// Simple array used to create commands for Linked List Animation\r\n\r\nclass LinkedListSimulator {\r\n  _data = [];\r\n\r\n  constructor(data = [], type = 'none'){\r\n    this._data = [...data];\r\n    this.type = type;\r\n  }\r\n  length(){\r\n    return this._data.length;\r\n  }\r\n\r\n  push_back(element, slow){\r\n    const {id, value} = element;\r\n    let source = undefined;\r\n    const commands = [];\r\n    let lines;\r\n    if(this.length() === 0){\r\n      commands.push({lines: [2,3]});\r\n    }else{\r\n      if(this.type === actions.SELECT_QUEUE){\r\n        lines = [4, 5, 6];\r\n      }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n        lines = [4, 5, 6, 7];\r\n      }\r\n    }\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines: [6, 7]},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    if(this.length()){\r\n      source = this._data[this.length()-1].id;\r\n    }\r\n\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [8];\r\n    commands.push({\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_back',\r\n        data: {\r\n          id, value, source,\r\n        }\r\n      }],\r\n      lines,\r\n    });\r\n    console.log(commands);\r\n    return commands;\r\n  }\r\n\r\n  pop_back(slow){\r\n    if(this.length() === 0) return [];\r\n    const commands = [];\r\n    if(slow){\r\n      for(let i = 0; i < this.length(); i++){\r\n        const {id} = this._data[i];\r\n        let lines;\r\n        if(this.length() === 1) lines = [2, 3, 4, 5];\r\n        else lines = [7, 8, 9];\r\n        commands.push(\r\n          { eles: [id], style: [{'background-color': 'black', 'color': 'white'}], lines},\r\n          { eles: [id], style: [{'background-color': 'white', 'color': 'black'}], duration: 10 },\r\n        )\r\n      }\r\n    }\r\n    const {id} = this._data[this.length()-1];\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST && this.length() > 1) lines = [10, 11];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], \r\n        style: [{'background-color': 'black', 'color':'white'}], \r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6,7];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_back',\r\n          data: { id, value: this.length()-1},\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    return commands;\r\n  }\r\n\r\n  push_front(element){\r\n    const {id, value} = element;\r\n    let target = undefined;\r\n    if(this.length()) target = this._data[0].id;\r\n    let lines;\r\n    if(this.length() === 0){\r\n      lines = [2,3];\r\n    }else{\r\n      if(this.type === actions.SELECT_SINGLE_LINKED_LIST) lines = [4,5,6];\r\n      else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST) lines = [4,5,6,7];\r\n      else if(this.type === actions.SELECT_STACK) lines = [4,5,6];\r\n    }\r\n    const commands = [{\r\n      eles: [], style: [],\r\n      inst: [{\r\n        name: 'push_front',\r\n        data: {\r\n          id, value, target,\r\n        }\r\n      }],\r\n      lines,\r\n    }]\r\n    return commands;\r\n  }\r\n\r\n  pop_front(){\r\n    if(this.length() === 0) return [{eles: [], style: []}];\r\n    const {id} = this._data[0];\r\n    let lines;\r\n    const commands = [];\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST || this.type === actions.SELECT_STACK) lines = [2,3,4];\r\n    else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      commands.push({\r\n        eles: [id], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: [2, 3],\r\n      });\r\n      if(this.length() === 1) lines = [4, 5];\r\n      else lines = [6, 7];\r\n    }else{\r\n      if(this.length() === 1) lines = [3,4];\r\n      else lines = [5,6];\r\n    }\r\n    commands.push(\r\n      {\r\n        eles: [], style: [],\r\n        inst: [{\r\n          name: 'pop_front',\r\n          data: { id },\r\n        }],\r\n        lines,\r\n      }\r\n    );\r\n    //this._data.shift();\r\n    return commands;\r\n  }\r\n\r\n  search(value){\r\n    const n = this.length();\r\n    const commands = [];\r\n    for(let i = 0; i < n; i++){\r\n      //Animations steps here\r\n      const id = this._data[i].id;\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{ 'background-color': 'black', 'color': 'white'}],\r\n      });\r\n\r\n      if(this._data[i].value === value){\r\n        commands.push({\r\n          eles: [id],\r\n          style: [{'background-color': 'lightgreen', 'color': 'black'}],\r\n        })\r\n        return true;\r\n      }\r\n      commands.push({\r\n        eles: [id],\r\n        style: [{'background-color': 'white', 'color': 'black'}],\r\n        duration: 10,\r\n      })\r\n    }\r\n    return commands;\r\n  }\r\n\r\n  insert_before(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(nodeId === id) break;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            lines: [7, 8],\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      \r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let prev = '', next = nodeId;\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [2, 3, 4];\r\n      else lines = [9, 10];\r\n    }else{\r\n      if(pos === 0) lines = [5, 6];\r\n      else lines = [7, 8];\r\n    }\r\n    if(pos - 1 >= 0){\r\n      prev = this._data[pos-1].id;\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next}\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : undefined),\r\n        duration: 500,\r\n      });\r\n    }\r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node_before',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n  insert_after(nodeId, newId, value, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 500,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n\r\n    const pos = i;\r\n    let prev = nodeId, next = '';\r\n    if(pos + 1 < this.length()) next = this._data[pos+1].id;\r\n    if(pos + 1 < this.length()){\r\n      commands.push({\r\n        inst: [\r\n          {\r\n            name: 'remove_edge',\r\n            data: {source: prev, target: next},\r\n            duration: 500,\r\n          }\r\n        ],\r\n        lines: (this.type === actions.SELECT_DOUBLE_LINKED_LIST ? [2, 3, 4] : [2, 3]),\r\n      });\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      lines = (pos === this.length() - 1 ? [5, 6] : [7, 8]);\r\n    }else lines = [4];\r\n    \r\n    commands.push({\r\n      inst: [\r\n        {\r\n          name: 'add_node',\r\n          data: {id: newId, value, pos},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: prev, target: newId},\r\n        },\r\n        {\r\n          name: 'add_edge',\r\n          data: {source: newId, target: next},\r\n        },\r\n      ],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n  delete_position(nodeId, slow = false){\r\n    const n = this.length();\r\n    const commands = [];\r\n    let i;\r\n    for(i = 0; i < n; i++){\r\n      const id = this._data[i].id;\r\n      if(slow){\r\n        let lines;\r\n        if(nodeId === id && i === 0) lines = [1, 2];\r\n        else lines = [6, 7, 8];\r\n        commands.push(\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'black', 'color': 'white'}],\r\n            duration: 1000,\r\n            lines,\r\n          },\r\n          {\r\n            eles: [id],\r\n            style: [{ 'background-color': 'white', 'color': 'black'}],\r\n            duration: 10,\r\n          }\r\n        );\r\n      }\r\n      if(nodeId === id) break;\r\n    }\r\n    if(i === n) return commands;\r\n    const pos = i;\r\n    let source, target;\r\n    if(pos > 0 && pos + 1 < this.length()){\r\n      source = this._data[pos-1].id;\r\n      target = this._data[pos+1].id;\r\n    }\r\n    let lines;\r\n    if(this.type === actions.SELECT_SINGLE_LINKED_LIST){\r\n      if(pos === 0) lines = [3];\r\n      else lines = [9, 10];\r\n    }else if(this.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      let caseLines;\r\n      if(this.length() === 1) caseLines = [2, 3];\r\n      else if(pos === 0) caseLines = [4, 5];\r\n      else if(pos === this.length() - 1) caseLines = [6, 7];\r\n      else caseLines = [8, 9];\r\n      commands.push({\r\n        eles: [nodeId], style: [{'background-color': 'black', 'color': 'white'}],\r\n        lines: caseLines,\r\n      });\r\n\r\n      lines = [10];\r\n    }\r\n\r\n    commands.push({\r\n      inst: [{\r\n        name: 'remove',\r\n        data: {id: nodeId, value: pos, source, target}\r\n      }],\r\n      lines,\r\n      duration: 500,\r\n    });\r\n    return commands;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default LinkedListSimulator;","import actions from '../Actions/actions';\r\nimport { CytoscapeElement, CytoEvent, AnimationStep } from '../Types/types';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nconst Styles = require('../Styles/Styles');\r\nconst cytoscape = require('cytoscape');\r\nconst { connect } = require('react-redux');\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n  pseudo?: Array<Object>,\r\n  list?: Array<Object>,\r\n}\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\nclass ListProcessor{\r\n  cy = cytoscape();\r\n  vh:number;\r\n  vw:number;\r\n  list = new LinkedListSimulator();\r\n  buffer:Array<exportStep> = [];\r\n  doublyLinked:boolean;\r\n  constructor(vw: number, vh: number, doubly:boolean, type: string){\r\n    this.vh = vh; this.vw = vw; \r\n    this.doublyLinked = doubly;\r\n    this.list = new LinkedListSimulator([], type);\r\n  }\r\n\r\n  loadGraph(elements:Array<Object>=[], list:Array<Object>=[]){\r\n    this.cy = cytoscape({\r\n      elements: JSON.parse(JSON.stringify(elements)),\r\n    });\r\n    this.list._data = [...list];\r\n  }\r\n  \r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n      let prev = node.data('prevPosition');\r\n      if(!prev) prev = node.data('position');\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          position: node.data('position'),\r\n          style: node.data('style'),\r\n\t\t\t\t},\r\n\t\t\t\tposition: prev,\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n          weight: edge.data('weight'),\r\n          style: edge.data('style'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n\r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.vw/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      const node = this.cy.getElementById(id);\r\n      const prevPosition = node.data('position');\r\n      node.data('prevPosition', {x: prevPosition.x, y: prevPosition.y});\r\n      node.data('position', { x: mid - (n-1)*(35) + 70*i, y: this.vh/4 });\r\n    }\r\n  }\r\n\r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n        position: {\r\n          x: position.x,\r\n          y: position.y,\r\n        }\r\n      },\r\n    });\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushStep(lines: Array<number> = [], duration: number = 0){\r\n    this.buffer.push({\r\n      elements: this.exportGraph(),\r\n      lines,\r\n      duration,\r\n      list: this.list._data,\r\n    });\r\n  }\r\n  processCommands(commands: Array<AnimationStep>){\r\n\t\tthis.cy.nodes().style({\r\n\t\t\t'background-color': 'white',\r\n\t\t\t'color': 'black',\r\n    });\r\n    this.buffer = [];\r\n    let lastLines:Array<number> = [];\r\n    let lastDuration = 0;\r\n    this.pushStep([], 0);\r\n    console.log(commands);\r\n    for(let pos = 0; pos < commands.length; pos++){\r\n      let { eles, style, duration, inst, lines} = commands[pos];\r\n      if(duration == null) duration = 1000;\r\n      if(lines == null) lines = lastLines;\r\n      this.layoutProcessing();\r\n      this.pushStep(lastLines, lastDuration);\r\n      lastLines = lines;\r\n      lastDuration = duration;\r\n\r\n      if (eles) {\r\n        eles.forEach((ele, index) => {\r\n          if(style) this.cy.getElementById(ele).data('style', style[index]);\r\n        });\r\n      }\r\n      \r\n      if(inst){\r\n        inst.forEach(ele => {\r\n          if(ele.data == null) return;\r\n          const {id, value, source, target} = ele.data;\r\n\r\n          if(ele.name === 'remove'){\r\n            if(id !== undefined) this.removeNode(id);\r\n            if(source != null && target != null) this.addEdge(source, target);\r\n            if(value !== undefined) this.list._data.splice(value, 1);\r\n          }else if(ele.name === 'add'){\r\n            if(id !== undefined && value !== undefined){\r\n              this.addNode(id, value);\r\n              this.list._data.push({id, value});\r\n              if(source !== undefined) this.addEdge(source, id);\r\n              if(target !== undefined) this.addEdge(id, target);\r\n            }\r\n          }else if(ele.name === 'push_back'){\r\n            if(id != null && value != null){\r\n              const n = this.list.length();\r\n              this.addNode(id, value, {x: this.vw/2 + n*35, y: this.vh/4 - 70});\r\n              this.list._data.push({id, value});\r\n              if(source != null) this.addEdge(source, id);\r\n            }\r\n          }else if(ele.name === 'push_front'){\r\n            if(id != null && value != null){\r\n              this.addNode(id, value, {x: this.vw/2 - this.list.length()*35, y: this.vh/4 - 70});\r\n              this.list._data.unshift({id, value});\r\n              if(target != null) this.addEdge(id, target);\r\n            }\r\n          }else if(ele.name === 'pop_front'){\r\n            if(id != null){\r\n              this.removeNode(id);\r\n              this.list._data.shift();\r\n            }\r\n          }else if(ele.name === 'pop_back'){\r\n            if(id != null){\r\n              this.removeNode(id);\r\n              this.list._data.pop();\r\n            }\r\n          }else if(ele.name === 'add_node_before'){\r\n            let {id, value, pos} = ele.data;\r\n            if(id != null && value != null && pos != null){\r\n              const x = this.vw/2 - (this.list.length()-1)*(35) + 70*pos;\r\n              this.addNode(id, value, {x, y: this.vh/4 - 70});\r\n              if(pos === 0) this.list._data.unshift({id, value});\r\n              else{\r\n\r\n                let rest = this.list._data.splice(pos);\r\n                this.list._data.push({id, value});\r\n                this.list._data = this.list._data.concat(...rest);\r\n              }\r\n            }\r\n          }else if(ele.name === 'add_node'){\r\n            let {id, value, pos} = ele.data;\r\n            if(id != null && value != null && pos != null){\r\n              const x = this.vw/2 - (this.list.length()-1)*(35) + 70*pos;\r\n              this.addNode(id, value, {x, y: this.vh/4 - 70});\r\n              pos++;\r\n              if(pos === this.list.length()) this.list._data.push({id, value});\r\n              else{\r\n                let rest = this.list._data.splice(pos);\r\n                this.list._data.push({id, value});\r\n                this.list._data = this.list._data.concat(...rest);\r\n              }\r\n            }\r\n          }else if(ele.name === 'add_edge'){\r\n            let {source, target} = ele.data;\r\n            if(source && target){\r\n              console.log('ADD', source, target);\r\n              this.addEdge(source, target);\r\n            }\r\n          }else if(ele.name === 'remove_edge'){\r\n            let {source, target} = ele.data;\r\n            if(source && target){\r\n              this.removeEdge(source+'-'+target);\r\n              if(this.doublyLinked) this.removeEdge(target+'-'+source);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.layoutProcessing();\r\n    this.pushStep(lastLines, lastDuration);\r\n  }\r\n\r\n  pushFront(value: number = 0){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    const commands = this.list.push_front({id: id.toString(), value});\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    //console.log(this.buffer);\r\n    return this.buffer;\r\n  }\r\n\r\n\r\n  pushBack(value: number = 0, slow:boolean = false){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    const commands = this.list.push_back({id: id.toString(), value}, slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  popFront(){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.pop_front();\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.pop_back(slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false, nodeId: string){\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n    */\r\n    let id = 0;\r\n    while(this.cy.getElementById(id.toString()).length > 0) id++;\r\n    let commands;\r\n    console.log(nodeId);\r\n    console.log(this.list._data);\r\n    if(where === 'before') commands = this.list.insert_before(nodeId, id.toString(), value, slow);\r\n    else commands = this.list.insert_after(nodeId, id.toString(), value, slow);\r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n\r\n  remove(slow = false, nodeId: string){\r\n\r\n    /*\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n    */\r\n    const commands = this.list.delete_position(nodeId, slow);  \r\n    this.processCommands(commands);\r\n    this.layoutProcessing();\r\n    this.pushStep();\r\n    return this.buffer;\r\n  }\r\n}\r\n\r\nexport default ListProcessor;","import React from 'react';\r\nimport MediaRecorder from '../utils/MediaRecorder';\r\nimport LinkedListSimulator from '../Algorithms/DS/LinkedListSimulator';\r\nimport ListProcessor from '../Processing/list-processing';\r\nimport actions from '../Actions/actions';\r\nimport { AnimationStep, CytoscapeElement, CytoEvent } from '../Types/types';\r\nimport InputModal from './InputModal';\r\n\r\nconst cytoscape = require('cytoscape');\r\nconst Styles = require('../Styles/Styles');\r\nconst { connect } = require('react-redux');\r\n\r\ntype pseudoSet = {\r\n  main: Array<{text: string, ind: number}>,\r\n  pushFront: Array<{text: string, ind: number}>,\r\n  pushBack: Array<{text: string, ind: number}>,\r\n  popFront: Array<{text: string, ind: number}>,\r\n  popBack: Array<{text: string, ind: number}>,\r\n  insertBefore: Array<{text: string, ind: number}>,\r\n  insertAfter: Array<{text: string, ind: number}>,\r\n  remove: Array<{text: string, ind: number}>,\r\n}\r\n\r\ntype exportStep = {\r\n  elements: Array<Object>\r\n  lines: Array<number>,\r\n  duration: number,\r\n}\r\n\r\ntype options = {\r\n  name: string,\r\n  positions: { [id: string]: { x: number, y: number } },\r\n  padding: number,\r\n  animate: boolean,\r\n  animationDuration: number,\r\n}\r\n\r\nlet layoutOptions: options = {\r\n  name: 'preset',\r\n  positions: {}, // map of (node id) => (position obj); or function(node){ return somPos; }\r\n  padding: 30, // padding on fit\r\n  animate: true, // whether to transition the node positions\r\n  animationDuration: 500, // duration of animation in ms if enabled\r\n};\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n\r\n  action: string,\r\n  type: string,\r\n\talgorithm: string,\r\n\r\n\tanimation: Boolean,\r\n\tselection: {\r\n\t\ttype: string,\r\n\t\tid: string,\r\n\t\tweight: string,\r\n\t}\r\n\tspeed: number,\r\n\r\n  options: Array<{name: string, run: () => void}>,\r\n\tloadingGraph: Boolean,\r\n  data: string,\r\n  \r\n  pseudoset: pseudoSet,\r\n  paused: boolean,\r\n}\r\n\r\ntype State = {\r\n  showPushFrontModal: boolean,\r\n  showPushBackModal: boolean,\r\n  showPushAfterModal: boolean,\r\n  showPushBeforeModal: boolean,\r\n  showDeleteModal: boolean,\r\n}\r\ntype storeState = {\r\n  animation: boolean,\r\n  speed: number,\r\n  selection: Object,\r\n  paused: boolean,\r\n}\r\n\r\ntype stackState = {\r\n  list: Array<Object>,\r\n  elements: Array<Object>,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    animation: state.animation,\r\n    speed: state.speed,\r\n    selection: state.selection,\r\n    paused: state.paused,\r\n  }\r\n}\r\nclass LinkedList extends React.Component<Props, State>{\r\n  _mediaRecorder = new MediaRecorder(this.props.dispatch);\r\n  _isMounted = false;\r\n\r\n  list = new LinkedListSimulator();\r\n  undo: Array<stackState> = [];\r\n  redo: Array<stackState> = [];\r\n\r\n  ListProcessor:any;\r\n  layout = {\r\n\t\trun: () => { },\r\n\t\tstop: () => { },\r\n  };\r\n  \r\n  doublyLinked = false;\r\n\r\n  state = {\r\n    showDeleteModal: false,\r\n    showPushBeforeModal: false,\r\n    showPushBackModal: false,\r\n    showPushFrontModal: false,\r\n    showPushAfterModal: false,\r\n  }\r\n\r\n  cy = cytoscape();\r\n\r\n  nodeStyle = {...Styles.NODE, shape: 'square'};  \r\n  edgeStyle = {};\r\n  buffer:Array<exportStep> =[];\r\n  options:Array<{name: string, run: () => void}> = [];\r\n\r\n  step = 0;\r\n  animationTimeout = 0;\r\n  constructor(props:Props){\r\n    super(props);\r\n    if(this.props.type === actions.SELECT_SINGLE_LINKED_LIST || this.props.type === actions.SELECT_DOUBLE_LINKED_LIST){\r\n      this.options = [\r\n        {\r\n          name: 'Insertar al frente',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Insertar al final',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Extraer frente',\r\n          run: () => this.popFront(),\r\n        },\r\n        {\r\n          name: 'Extraer final',\r\n          run: () => this.popBack(!this.doublyLinked),\r\n        },\r\n        {\r\n          name: 'Insertar antes de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushBeforeModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Insertar despues de',\r\n          run: () => \r\n            this.props.selection  \r\n            ? this.setState({showPushAfterModal: true})\r\n            : this.props.dispatch({type: actions.NO_NODE_SELECTED_ERROR})\r\n        },\r\n        {\r\n          name: 'Eliminar nodo',\r\n          run: () => this.remove(!this.doublyLinked),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_STACK){\r\n      this.options = [\r\n        {\r\n          name: 'Apilar',\r\n          run: () => \r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR})\r\n              : this.setState({showPushFrontModal: true}),\r\n        },\r\n        {\r\n          name: 'Desapilar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }else if(this.props.type === actions.SELECT_QUEUE){\r\n      this.options = [\r\n        {\r\n          name: 'Encolar',\r\n          run: () =>\r\n              this.props.animation\r\n              ? this.props.dispatch({type: actions.ANIMATION_RUNNING_ERROR}) \r\n              : this.setState({showPushBackModal: true}),\r\n        },\r\n        {\r\n          name: 'Desencolar',\r\n          run: () => this.popFront(),\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  initialize(state: stackState){\r\n\r\n    this.edgeStyle = {...Styles.EDGE, ...Styles.EDGE_DIRECTED};\r\n\r\n    if(this.doublyLinked) this.edgeStyle = {...this.edgeStyle, ...Styles.EDGE_DOUBLE}\r\n    const {list, elements} = state;\r\n\t\tthis.cy = cytoscape({\r\n\r\n\t\t\tcontainer: document.getElementById('canvas'), // container to render in\r\n\r\n\t\t\telements,\r\n\r\n\t\t\tstyle: [ // the stylesheet for the graph\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'node',\r\n\t\t\t\t\tstyle: {\r\n            ...Styles.NODE,\r\n            shape: 'square',\r\n          }\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tselector: 'edge',\r\n\t\t\t\t\tstyle: this.edgeStyle,\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tname: 'preset',\r\n\t\t\t},\r\n\t\t\theadless: false,\r\n\t\t\tstyleEnabled: true,\r\n\t\t\thideEdgesOnViewport: false,\r\n\t\t\thideLabelsOnViewport: false,\r\n\t\t\tuserPanningEnabled: false,\r\n\t\t\tzoomingEnabled: false,\r\n\t\t\ttextureOnViewport: false,\r\n\t\t\tmotionBlur: false,\r\n\t\t\tmotionBlurOpacity: 0.2,\r\n      pixelRatio: '1.0',\r\n      autoungrabify: true,\r\n    });\r\n\r\n    this.list._data = list;\r\n    this.cy.on('click', 'node', (event: CytoEvent) => this.handleClickOnNode(event.target));\r\n    this.cy.on('resize', () => this.refreshLayout(false))\r\n    this.layout = this.cy.elements().makeLayout(layoutOptions);\r\n    this.layout.run();\r\n    this.refreshLayout(false);\r\n  }  \r\n\r\n  componentDidUpdate(prevProps:Props){\r\n    layoutOptions.animationDuration = 500/this.props.speed;\r\n\r\n    if (prevProps.animation && !this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: { options: this.options }\r\n\t\t\t});\r\n\t\t} else if (!prevProps.animation && this.props.animation) {\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.CHANGE_OPTIONS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'Volver a edicion',\r\n\t\t\t\t\t\t\trun: () => {\r\n                clearTimeout(this.animationTimeout);\r\n\t\t\t\t\t\t\t\tthis.loadGraph(this.buffer[this.buffer.length-1].elements);\r\n\t\t\t\t\t\t\t\tthis.props.dispatch({ type: actions.ANIMATION_END })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n  }\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.doublyLinked = this.props.type === actions.SELECT_DOUBLE_LINKED_LIST;\r\n\r\n    this.list.type = this.props.type;\r\n    this.initialize({list: [], elements: []});\r\n\r\n    this.ListProcessor = new ListProcessor(this.cy.width(), this.cy.height(), this.doublyLinked, this.props.type);\r\n\r\n    \r\n    this.props.dispatch({\r\n\t\t\ttype: this.props.action,\r\n\t\t\tpayload:{\r\n\t\t\t\tphoto: () => this._mediaRecorder.takePicture(this.cy),\r\n\t\t\t\tgif: () => this._mediaRecorder.takeGif(this.cy),\r\n\t\t\t\tundo: this.handleUndo,\r\n        redo: this.handleRedo,\r\n        rewind: this.handleRewind,\r\n        forward: this.handleForward,\r\n        repeat: this.handleRepeat,\r\n        pause: this.handlePauseContinue,\r\n        remove: () => this.remove(!this.doublyLinked),\r\n        clear: this.clearGraph,\r\n        options: this.options,\r\n        type: this.props.type,\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.ANIMATION_END,\r\n\t\t});\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis._isMounted = false;\r\n\t\tlet nodes = this.cy.nodes();\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n\t\t\tthis.removeNode(node.id());\r\n\t\t});\r\n  }\r\n  \r\n  layoutProcessing(){\r\n    const n = this.list.length();\r\n    if(n === 0) return;\r\n    const mid = this.cy.width()/2;\r\n    for(let i = 0; i < n; i++){\r\n      const {id} = this.list._data[i];\r\n      layoutOptions.positions[id] = {\r\n        x: mid - (n-1)*(35) + 70*i,\r\n        y: this.cy.height()/4,\r\n      }\r\n    }\r\n  }\r\n  refreshLayout(animate:boolean=true) {\r\n    this.layout.stop();\r\n    //this.layoutProcessing();\r\n\t\tthis.layout = this.cy.elements().makeLayout({...layoutOptions, animate});\r\n\t\tthis.layout.run();\r\n  }\r\n  \r\n  clearGraph = () => {\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.CLEAR_GRAPH,\r\n\t\t});\r\n\t\tlet nodes = this.cy.nodes();\r\n    if(nodes.length === 0) return;\r\n    this.pushState();\r\n    this.ListProcessor.loadGraph();\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tthis.removeNode(nodes[i].id());\r\n\t\t}\r\n\t}\r\n\r\n  handleClickOnNode = (node: CytoscapeElement) => {\r\n\t\tif (this.props.animation === true) return;\r\n    let nodeId = node.id();\r\n    let { selection } = this.props;\r\n    if(selection && selection.type === 'node'){\r\n      const prev = this.cy.getElementById(selection.id);\r\n      prev.style(this.nodeStyle);\r\n      if(selection.id === nodeId){\r\n        this.props.dispatch({\r\n          type: actions.NO_SELECTION,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    node.style(Styles.NODE_SELECTED);\r\n    this.props.dispatch({\r\n      type: actions.SELECTION,\r\n      payload: {\r\n        selection: {\r\n          id: nodeId, type: 'node'\r\n        }\r\n      }\r\n    });\r\n\t}\r\n\r\n \t\r\n\thandleUndo = () => {\r\n\t\tif(this.undo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n    let state = this.undo.pop();\r\n\r\n    if(state !== undefined){\r\n\t\t\tthis.redo.push({list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)), elements: currentElements});\r\n      this.loadGraph(state.elements);\r\n      this.ListProcessor.loadGraph(state.elements, state.list);\r\n\t\t}\r\n\t}\r\n\r\n\thandleRedo = () => {\r\n\t\tif(this.redo.length === 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(this.props.animation){\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_RUNNING_ERROR,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.dispatch({\r\n\t\t\ttype: actions.NO_SELECTION,\r\n\t\t});\r\n\r\n\t\tconst currentElements = this.exportGraph();\r\n\t\t\r\n\t\tlet state = this.redo.pop();\r\n\t\tif(state !== undefined){\r\n\t\t\tthis.undo.push({list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)), elements: currentElements});\r\n\t\t\tthis.loadGraph(state.elements);\r\n      this.ListProcessor.loadGraph(state.elements, state.list);\r\n\t\t}\r\n\t}\r\n\r\n  pushState(){\r\n    this.redo = [];\r\n    this.undo.push({\r\n      list: JSON.parse(JSON.stringify(this.ListProcessor.list._data)),\r\n      elements: this.exportGraph(),\r\n    });\r\n  }\r\n  \r\n  handleRewind = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.max(this.step-1, 0);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleForward = () => { \r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = Math.min(this.step+1, this.buffer.length-1);\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandleRepeat = () => {\r\n\t\tclearTimeout(this.animationTimeout);\r\n\t\tthis.props.dispatch({type: actions.ANIMATION_PAUSE});\r\n\t\tthis.step = 0;\r\n\t\tconst {elements, lines} = this.buffer[this.step];\r\n\t\tthis.loadGraph(elements);\r\n\t\tthis.props.dispatch({ type: actions.CHANGE_LINE, payload: { lines }});\r\n\t}\r\n\r\n\thandlePauseContinue = () => {\r\n\t\tif(!this.props.paused){\r\n\t\t\tclearTimeout(this.animationTimeout);\r\n\t\t\tthis.props.dispatch({\r\n\t\t\t\ttype: actions.ANIMATION_PAUSE,\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tnew Promise(resolve => {\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_CONTINUE\r\n\t\t\t\t})\r\n\t\t\t\tresolve();\r\n\t\t\t}).then(() => this.animation());\r\n\t\t}\r\n\t}\r\n\t\r\n  loadGraph(elements: Array<Object>, keep=false) {\r\n    const nodes = this.cy.nodes();\r\n    const positions:{[id:string]:{x:number,y:number}} = {};\r\n\t\tnodes.forEach((node: CytoscapeElement) => {\r\n      if(keep) positions[node.id()] = JSON.parse(JSON.stringify(node.data('position')));\r\n\t\t\tthis.cy.remove(node);\r\n\t\t})\r\n\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tthis.cy.add(JSON.parse(JSON.stringify(elements[i])));\r\n\t\t}\r\n\r\n\t\tthis.cy.nodes().forEach((node: CytoscapeElement) => {\r\n\t\t\tconst style = node.data('style');\r\n\t\t\tif (style != null) node.style(style);\r\n      const position = node.data('position');\r\n      if(keep && positions[node.id()]) node.position({x:positions[node.id()].x, y:positions[node.id()].y});\r\n\t\t\t//console.log(\"PREV\", node.position());\r\n\t\t\t//console.log(\"NEXT\", position);\r\n\t\t\tif (position != null) {\r\n\t\t\t\tlayoutOptions.positions[node.id()] = JSON.parse(JSON.stringify(position));\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.cy.edges().forEach((edge: CytoscapeElement) => {\r\n\t\t\tconst style = edge.data('style');\r\n\t\t\tif (style != null) edge.style(style);\r\n\t\t})\r\n\r\n    this.refreshLayout();\r\n\t}\r\n  exportGraph(){\r\n\t\tconst elements:Array<Object> = [];\r\n\t\tthis.cy.nodes().forEach((node:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'nodes',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: node.id(),\r\n          value: node.data('value'),\r\n          position: {\r\n            x: node.position().x,\r\n            y: node.position().y,\r\n          }\r\n\t\t\t\t},\r\n\t\t\t\tposition: {\r\n\t\t\t\t\tx: node.position().x,\r\n\t\t\t\t\ty: node.position().y,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.cy.edges().forEach((edge:CytoscapeElement) => {\r\n\t\t\telements.push({\r\n\t\t\t\tgroup: 'edges',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: edge.id(),\r\n\t\t\t\t\tsource: edge.source().id(), target: edge.target().id(),\r\n\t\t\t\t\tweight: edge.data('weight'),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t\treturn elements;\r\n  }\r\n  \r\n  animation(){\r\n\t\tlet step = () => {\r\n\t\t\tif(!this._isMounted) return;\r\n\t\t\tif(this.step === this.buffer.length){\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.FINISHED_ALGORITHM_SUCCESS,\r\n        });\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_PAUSE,\r\n        });\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!this.props.animation) {\r\n\t\t\t\tthis.cy.nodes().style(this.nodeStyle);\r\n\t\t\t\tthis.cy.edges().style(this.edgeStyle);\r\n\t\t\t\tthis.props.dispatch({\r\n\t\t\t\t\ttype: actions.ANIMATION_END,\r\n\t\t\t\t});\r\n\t\t\t\tthis.cy.autolock(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n      const {elements, lines, duration} = this.buffer[this.step++];\r\n      if(this.props.paused) return;\r\n\t\t\tthis.loadGraph(elements);\r\n\t\t\tif(lines) this.props.dispatch({type: actions.CHANGE_LINE, payload: { lines }});\r\n\t\t\t//this.refreshLayout();\r\n\t\t\tthis.animationTimeout = window.setTimeout(step, ((duration === undefined) ? 1000 : duration)/(this.props.speed));\r\n\t\t}\r\n\t\tstep();\r\n  }\r\n  \r\n  removeNode = (node: string) => {\r\n\t\tthis.cy.remove('node[id=\"' + node + '\"]');\r\n  }\r\n  \r\n  removeEdge = (edge: string) => {\r\n\t\tthis.cy.remove('edge[id=\"' + edge + '\"]');\r\n  }\r\n  \r\n  addNode(id: string, value: number, position: {x: number, y: number} = {x: 0, y: 0}){\r\n    this.cy.add({\r\n      group: 'nodes',\r\n      data: {\r\n        id,\r\n        value,\r\n      },\r\n      position:{\r\n        x: position.x,\r\n        y: position.y,\r\n      }\r\n    });\r\n    layoutOptions.positions[id] = position;\r\n  }\r\n  \r\n  addEdge(x: string, y: string) {\r\n    //this.pushState();\r\n\t\tthis.cy.add({\r\n\t\t\tgroup: 'edges',\r\n\t\t\tdata: {\r\n\t\t\t\tid: x + '-' + y,\r\n\t\t\t\tsource: x,\r\n        target: y,\r\n        weight: 'sig',\r\n      },\r\n    });\r\n  }\r\n  \r\n  pushFront(value: number = 0){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushFront,\r\n      }\r\n    });\r\n    this.buffer = this.ListProcessor.pushFront(value);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n\r\n  pushBack(value: number = 0, slow:boolean = false){\r\n\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.pushBack,\r\n      }\r\n    });\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n    this.buffer = this.ListProcessor.pushBack(value, slow);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  \r\n  popFront(){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popFront,\r\n      }\r\n    });\r\n\r\n    if(this.ListProcessor.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.CHANGE_LINE,\r\n        payload: { lines: [1] }\r\n      });\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.buffer = this.ListProcessor.popFront();\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  popBack(slow:boolean=false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.popBack,\r\n      }\r\n    });\r\n\r\n    if(this.ListProcessor.list.length() === 0){\r\n      this.props.dispatch({\r\n        type: actions.EMPTY_LIST_WARNING,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    this.buffer = this.ListProcessor.popBack(slow);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n\r\n  remove(slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    \r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: this.props.pseudoset.remove,\r\n      }\r\n    });\r\n    \r\n    this.step = 0;\r\n    this.pushState();\r\n\r\n    const nodeId = selection.id;\r\n\r\n    this.buffer = this.ListProcessor.remove(slow, nodeId);\r\n    new Promise((resolve, reject) => {\r\n        this.props.dispatch({\r\n          type: actions.ANIMATION_START,\r\n        });\r\n        resolve();\r\n      }).then(() => this.animation());\r\n  }\r\n\r\n  insert(value:number = 0, where:string, slow = false){\r\n    if(this.props.animation){\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_RUNNING_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const {selection} = this.props;\r\n    if(!selection) {\r\n      this.props.dispatch({\r\n        type: actions.NO_NODE_SELECTED_ERROR,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch({\r\n      type: actions.CHANGE_PSEUDO,\r\n      payload: {\r\n        pseudo: (where === 'before' ? this.props.pseudoset.insertBefore : this.props.pseudoset.insertAfter),\r\n      }\r\n    });\r\n\r\n    this.step = 0;\r\n    this.pushState();\r\n    const nodeId = selection.id;\r\n\r\n    this.buffer = this.ListProcessor.insert(value, where, slow, nodeId);\r\n    new Promise((resolve, reject) => {\r\n      this.props.dispatch({\r\n        type: actions.ANIMATION_START,\r\n      });\r\n      resolve();\r\n    }).then(() => this.animation());\r\n  }\r\n  render(){\r\n    return(\r\n      <>\r\n        <InputModal \r\n          show={this.state.showPushFrontModal}\r\n          handleClose={() => this.setState({showPushFrontModal: false})}\r\n          callback={(v:number) => this.pushFront(v)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBackModal}\r\n          handleClose={() => this.setState({showPushBackModal: false})}\r\n          callback={(v:number) => this.pushBack(v, this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushBeforeModal}\r\n          handleClose={() => this.setState({showPushBeforeModal: false})}\r\n          callback={(v:number) => this.insert(v, 'before', this.props.type === actions.SELECT_SINGLE_LINKED_LIST)}\r\n        />\r\n        <InputModal \r\n          show={this.state.showPushAfterModal}\r\n          handleClose={() => this.setState({showPushAfterModal: false})}\r\n          callback={(v:number) => this.insert(v, 'after')}\r\n        />\r\n        <div id=\"canvas\" className='standard-struct'/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LinkedList);","const algorithmRoutes = {\r\n  BFS: '/bfs',\r\n  DFS: '/dfs',\r\n  Dijkstra: '/dijkstra',\r\n  BellmanFord: '/bellman-ford',\r\n  Kruskal: '/kruskal',\r\n  Prim: '/prim',\r\n  BubbleSort: '/bubblesort',\r\n  MergeSort: '/mergesort',\r\n  BinarySearch: '/busqueda-binaria',\r\n  SingleLinkedList: '/lista-enlazada',\r\n  DoubleLinkedList: '/lista-doblemente-enlazada',\r\n  Queue: '/cola',\r\n  Stack: '/pila',\r\n  MinHeap: '/minheap',\r\n  AVL: '/avl',\r\n};\r\n\r\nexport default algorithmRoutes;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Graph from './Components/Graph';\r\nimport Heap from './Components/Heap';\r\nimport AVL from './Components/AVL'\r\nimport properties from './algorithm-properties';\r\nimport BubbleSort from './Components/BubbleSort';\r\nimport MergeSort from './Components/MergeSort';\r\nimport BinarySearch from './Components/BinarySearch';\r\nimport LinkedList from './Components/LinkedList';\r\n\r\nimport routes from './resources/names_and_routes/algorithm_routes';\r\nconst { HashRouter, Route, Switch} = require('react-router-dom');\r\nclass Editor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Route path={routes.BFS} render={() => <Graph {...properties.BFS} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.DFS} render={() => <Graph {...properties.DFS} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Dijkstra} render={() => <Graph {...properties.Dijkstra} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.BellmanFord} render={() => <Graph {...properties.BellmanFord} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Prim} render={() => <Graph {...properties.Prim} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.Kruskal} render={() => <Graph {...properties.Kruskal} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.MinHeap} render={() => <Heap {...properties.Heap} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.AVL} render={() => <AVL {...properties.AVL} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.BubbleSort} render={() => <BubbleSort {...properties.BubbleSort} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.MergeSort} render={() => <MergeSort {...properties.MergeSort} />} />\r\n\t\t\t\t\t\t\t<Route path={routes.BinarySearch} render={() => <BinarySearch {...properties.BinarySearch}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.SingleLinkedList} render={() => <LinkedList {...properties.SingleLinkedList}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.DoubleLinkedList} render={() => <LinkedList {...properties.DoubleLinkedList}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.Queue} render={() => <LinkedList {...properties.Queue}/>}/>\r\n\t\t\t\t\t\t\t<Route path={routes.Stack} render={() => <LinkedList {...properties.Stack}/>}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</HashRouter>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\nconst {connect}  = require('react-redux');\r\n\r\ntype Props = {\r\n\tdispatch: (action: Object) => Object,\r\n\talgorithm: string,\r\n}\r\n\r\ntype State = {\r\n\talgorithm: string,\r\n}\r\nconst mapStateToProps = (state:State) => {\r\n\treturn {\r\n\t\talgorithm: state.algorithm,\r\n\t}\r\n}\r\nconst Sidebar = (props:Props) => {\r\n\tconst items = [\r\n\t\t{name: 'BFS'},\r\n\t\t{name: 'DFS'},\r\n\t\t{name: 'Dijkstra'},\r\n\t\t{name: 'Prim'},\r\n\t\t{name: 'Kruskal'},\r\n\t\t{name: 'Heap'},\r\n\t\t{name: 'AVL'},\r\n\t\t{name: 'BubbleSort'},\r\n\t\t{name: 'MergeSort'},\r\n\t];\r\n\r\n\tconst list = [];\r\n\r\n\tfor(let i = 0; i < items.length; i++){\r\n\t\tlist.push(\r\n\t\t\t<NavLink to={\"/\"+items[i].name}>\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName={items[i].name === props.algorithm ? \"active\" : \"normal\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t{items[i].name}\r\n\t\t\t\t</li>\r\n\t\t\t</NavLink>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<ul>\r\n\t\t\t\t{list}\r\n\t\t\t</ul>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","const BFS = [\r\n  { text: 'BFS(Grafo G(V,E), nodo inicio):', ind: 0 },\r\n  { text: 'Para cada nodo u \\u2208 V:', ind: 1 },\r\n  { text: 'color[u]=Blanco', ind: 2 },\r\n  { text: 'color[inicio]=Gris:', ind: 1 },\r\n  { text: 'encolar(cola, inicio)', ind: 1 },\r\n  { text: 'Mientras no vacio(cola):', ind: 1},\r\n  { text: 'u=extraer(cola)', ind:2},\r\n  { text: 'color[u]=Negro', ind:2},\r\n  { text: 'Para cada v adyacente a u:', ind:2},\r\n  { text: 'Si color[v] es Blanco:', ind: 3},\r\n  { text: 'color[v]=Gris', ind: 4},\r\n  { text: 'encolar(cola, v)', ind: 4}\r\n];\r\n\r\nexport default BFS;","import React from 'react';\r\ntype Props = {\r\n  op: Array<{name: string, run: () => void}>,\r\n}\r\nconst OptionsMenu = (props:Props) => {\r\n  const {op} = props;\r\n  const links = Array();\r\n  op.forEach((option:{name:string, run: () => void}) => {\r\n    const {name, run} = option;\r\n    links.push(\r\n      <button onClick={run}>{name}</button>\r\n    );\r\n  });\r\n  return  (\r\n    <>\r\n      {links}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OptionsMenu;","import { Row, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst { connect } = require('react-redux');\r\n\r\ntype Props = {\r\n  dispatch: (action: Object) => Object,\r\n  speed: number,\r\n}\r\n\r\nconst mapStateToProps = (state: Props) => {\r\n  return {\r\n    speed: state.speed,\r\n  }\r\n}\r\n\r\nconst SpeedBar = (props: Props) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.dispatch({\r\n      type: actions.CHANGE_SPEED,\r\n      payload: {\r\n        speed: e.currentTarget.value,\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <div className=\"slidecontainer\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0.25\"\r\n            max=\"5\"\r\n            value={props.speed}\r\n            id=\"myRange\"\r\n            step=\"0.05\"\r\n            onChange={handleChange}\r\n            className=\"slider\"\r\n          >\r\n          </input>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(SpeedBar);","import {Row, Col} from 'react-bootstrap';\r\nimport React, { FunctionComponent } from 'react';\r\nimport OptionsMenu from './OptionsMenu';\r\nimport SpeedBar from './SpeedBar';\r\nimport GIFControl from './GIFControl';\r\nimport PhotoControl from './PhotoControl';\r\nimport actions from '../Actions/actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause, faUndo, faRedo, faBackward, faForward, faTimes, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nconst { connect } = require('react-redux');\r\n\r\n\r\nconst algoDict:({[name: string]: string})= {\r\n  'BFS': 'BFS',\r\n  'DFS': 'DFS',\r\n  'Dijkstra': 'Dijkstra',\r\n  'BellmanFord': 'Bellman-Ford',\r\n  'Prim': 'Prim',\r\n  'Kruskal': 'Kruskal',\r\n  'Heap': 'Min Heap',\r\n  'AVL': 'Arbol AVL',\r\n  'BubbleSort': 'Bubble Sort',\r\n  'MergeSort': 'Merge Sort',\r\n  'BinarySearch': 'Busqueda Binaria',\r\n  'SingleLinkedList': 'Lista enlazada',\r\n  'DoubleLinkedList': 'Lista doble',\r\n  'Queue': 'Cola',\r\n  'Stack': 'Pila',\r\n}\r\n\r\ntype Props = {\r\n  algorithm: string,\r\n  animation: boolean,\r\n  run: () => void,\r\n  options: Array<{name: string, run: () => void}>,\r\n  dispatch: (action: Object) => void,\r\n  undo: () => void,\r\n  redo: () => void,\r\n  rewind: () => void,\r\n  forward: () => void,\r\n  pause: () => void,\r\n  repeat: () => void,\r\n  remove: () => void,\r\n  clear: () => void,\r\n  paused: boolean,\r\n}\r\n\r\ntype ButtonProps = {\r\n  title: string,\r\n  callback: () => void,\r\n  delay: number,\r\n}\r\n\r\ntype State = {\r\n  showActions: boolean,\r\n}\r\nconst mapStateToProps = (state:Props) => {\r\n  return {...state}\r\n}\r\n\r\nlet interval = 0;\r\nconst ControlButton:FunctionComponent<ButtonProps> = ({title, callback, delay, children}) => {\r\n  return <button title={title} className='dropdown-button'\r\n          onMouseDown={()=>{callback(); interval=window.setInterval(() => callback(), delay); console.log('STARTED', interval)}}\r\n          onMouseUp={() => {console.log('STOP', interval); clearInterval(interval)}}>\r\n            {children}\r\n          </button>\r\n}\r\n\r\nclass Footer extends React.Component<Props, State>{\r\n  state = {\r\n    showActions: true,\r\n  }\r\n  interval = 0;\r\n  render(){\r\n    console.log(this.props.algorithm);\r\n    const {animation, paused} = this.props;\r\n    let control;\r\n    if(!animation){ \r\n      control = \r\n        [\r\n          <Col md={1}>\r\n            <ControlButton title=\"Deshacer\" callback={this.props.undo} delay={500}>\r\n              <FontAwesomeIcon icon={faUndo} size = \"lg\"/>\r\n            </ControlButton>\r\n          </Col>,\r\n          <Col md={1}>\r\n            <ControlButton title=\"Rehacer\" callback={this.props.redo} delay={500}>\r\n              <FontAwesomeIcon icon={faRedo} size = \"lg\"/>\r\n            </ControlButton>\r\n          </Col>,\r\n        ];\r\n        if(this.props.remove){\r\n          control.push(\r\n            <Col md={1}>\r\n            <button title=\"Eliminar elemento\" className='dropdown-button' onClick={this.props.remove}>\r\n              <FontAwesomeIcon icon={faTimes} size = \"lg\"/>\r\n            </button>\r\n          </Col>,\r\n          );\r\n        }\r\n        if(this.props.clear){\r\n          control.push(\r\n            <Col md={1}>\r\n            <button title=\"Limpiar canvas\" className='dropdown-button' onClick={this.props.clear}>\r\n              <FontAwesomeIcon icon={faTrash} size = \"lg\"/>\r\n            </button>\r\n          </Col>,\r\n          );\r\n        }\r\n        \r\n    }else{\r\n      control = \r\n        [\r\n          <Col md={1}>\r\n            <button title={paused ? 'Continuar' : 'Pausa'} className='dropdown-button' onClick={this.props.pause}>\r\n              <FontAwesomeIcon icon={paused ? faPlay : faPause} size = \"lg\"/>\r\n            </button>\r\n          </Col>,\r\n          <Col md={1} >\r\n            <button title='Repetir' className='dropdown-button'  onClick={this.props.repeat}>\r\n              <FontAwesomeIcon icon={faRedo} size = \"lg\"/>\r\n            </button>\r\n          </Col>,\r\n          <Col md={1}>\r\n            <ControlButton title=\"Retroceder\" callback={this.props.rewind} delay={200}>\r\n              <FontAwesomeIcon icon={faBackward} size = \"lg\"/>\r\n            </ControlButton>\r\n          </Col>,\r\n          <Col md={1}>\r\n            <ControlButton title=\"Avanzar\" callback={this.props.forward} delay={200}>\r\n              <FontAwesomeIcon icon={faForward} size = \"lg\"/>\r\n            </ControlButton>\r\n          </Col>,\r\n        ]\r\n    }\r\n    \r\n    return(\r\n      <div className='footer'>\r\n        {this.props.algorithm !== 'none' && \r\n          <Row>\r\n            <Col md={2}>\r\n              <div className=\"dropup\">\r\n                <button className='dropdown-button' onClick={() => this.setState({showActions: !this.state.showActions})}>{algoDict[this.props.algorithm]}</button>\r\n                { \r\n                  this.state.showActions && \r\n                  <div className='actions-menu'>\r\n                    <OptionsMenu op={this.props.options}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </Col>\r\n            <Col md={1}>\r\n              <span>Velocidad</span>\r\n              <SpeedBar/>\r\n            </Col>\r\n            <>{control}</>\r\n            <Col md={{span: 2, offset:7-control.length}}>\r\n            <button className='dropdown-button' onClick={() => this.props.dispatch({type: actions.TOGGLE_PSEUDO})}>Pseudocodigo</button>\r\n          </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport actions from '../Actions/actions'\r\nconst {connect} = require('react-redux');\r\ntype Props = {\r\n  callback: () => void,\r\n  dispatch: (action: Object) => void,\r\n};\r\n\r\nclass PhotoControl extends React.Component<Props>{\r\n  handleClick = () => {\r\n    this.props.dispatch({\r\n      type: actions.PHOTO_SUCCESS,\r\n    });\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    return (\r\n      <button className='dropdown-button' onClick={this.handleClick}>Foto</button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(PhotoControl);","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport actions from '../Actions/actions';\r\n\r\nconst {connect} = require('react-redux');\r\n\r\ntype Props = {\r\n  callback: () => void,\r\n  algorithm: string,\r\n  dispatch: (action: Object) => Object,\r\n  timeEllapsed: number,\r\n};\r\n\r\ntype storeState = {\r\n  gifLength: number,\r\n}\r\n\r\nconst mapStateToProps = (state: storeState) => {\r\n  return {\r\n    timeEllapsed: state.gifLength,\r\n  }\r\n}\r\n\r\nclass  GIFControl extends React.Component<Props>{\r\n  handleClick(){\r\n    this.props.callback();\r\n  }\r\n  render(){\r\n    const {timeEllapsed} = this.props;\r\n    let ss = Math.floor(timeEllapsed/10).toString();\r\n    let ms = (timeEllapsed%10).toString();\r\n    if(ss.length === 1) ss = '0'+ss;\r\n    return (\r\n      <button className='dropdown-button' onClick={() => this.handleClick()}>GIF 0:{ss}:{ms}</button>\r\n    )\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GIFControl);","import {Row, Col} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport PhotoControl from './PhotoControl';\r\nimport GIFControl from './GIFControl';\r\n\r\nimport routes from '../resources/names_and_routes/algorithm_routes';\r\nconst {connect} = require('react-redux');\r\nconst {\r\n\tNavLink,\r\n\tHashRouter\r\n} = require('react-router-dom');\r\n\r\ntype Props = {\r\n  photo: () => void,\r\n  gif: () => void,\r\n}\r\n\r\nconst mapStateToProps = (state:Props) => {\r\n  return { ...state };\r\n}\r\n\r\nclass MenuBar extends React.Component<Props>{\r\n  render(){\r\n    const searchAlgorithms = [\r\n      <NavLink to={routes.BFS}><button className='dropdown-button'>BFS</button></NavLink>,\r\n      <NavLink to={routes.DFS}><button className='dropdown-button'>DFS</button></NavLink>,\r\n      <NavLink to={routes.Dijkstra}><button className='dropdown-button'>Dijkstra</button></NavLink>,\r\n      <NavLink to={routes.BellmanFord}><button className='dropdown-button'>Bellman-Ford</button></NavLink>\r\n    ];\r\n    const mstAlgorithms = [\r\n      <NavLink to={routes.Kruskal}><button className='dropdown-button'>Kruskal</button></NavLink>,\r\n      <NavLink to={routes.Prim}><button className='dropdown-button'>Prim</button></NavLink>,\r\n    ];\r\n    const arrays = [\r\n      <NavLink to={routes.BubbleSort}><button className='dropdown-button'>Bubble Sort</button></NavLink>,\r\n      <NavLink to={routes.MergeSort}><button className='dropdown-button'>Merge Sort</button></NavLink>,\r\n      <NavLink to={routes.BinarySearch}><button className='dropdown-button'>Busqueda Binaria</button></NavLink>\r\n    ];\r\n    const dataStructures = [\r\n      <NavLink to={routes.SingleLinkedList}><button className='dropdown-button'>Lista enlazada</button></NavLink>,\r\n      <NavLink to={routes.Queue}><button className='dropdown-button'>Cola</button></NavLink>,\r\n      <NavLink to={routes.Stack}><button className='dropdown-button'>Pila</button></NavLink>,\r\n      <NavLink to={routes.DoubleLinkedList}><button className='dropdown-button'>Lista doble</button></NavLink>,\r\n      <NavLink to={routes.MinHeap}><button className='dropdown-button'>Min Heap</button></NavLink>,\r\n      <NavLink to={routes.AVL}><button className='dropdown-button'>Arbol AVL</button></NavLink>,\r\n    ];\r\n    return (\r\n      <div className='top-bar'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <div className='dropdown'>\r\n              <button className='dropdown-button'>Algoritmos</button>\r\n              <HashRouter>\r\n                <div className='dropdown-menu'>\r\n                  <div className='dropright'>\r\n                    <button className='dropdown-button'>Algoritmos de Busqueda</button>\r\n                    <div className='right-menu'>\r\n                      {searchAlgorithms}\r\n                    </div>  \r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arbol Recubridor Minimo</button>\r\n                    <div className='right-menu'>\r\n                      {mstAlgorithms}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Arreglos</button>\r\n                    <div className='right-menu'>\r\n                      {arrays}\r\n                    </div>\r\n                  </div>\r\n                  <div className='dropright'>\r\n                  <button className='dropdown-button'>Estructuras de Datos</button>\r\n                    <div className='right-menu'>\r\n                      {dataStructures}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </HashRouter>\r\n            </div>\r\n          </Col>\r\n          <Col md={1}>\r\n            <PhotoControl callback={this.props.photo}/>\r\n          </Col>\r\n          <Col md={1}>\r\n            <GIFControl callback={this.props.gif}/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(MenuBar);","// @flow\r\nimport React from 'react';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport './views/css/App.css';\r\nimport './views/css/codeblock.css';\r\nimport './views/css/slider.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport AlgorithmInfo from './Components/AlgorithmInfo'\r\nimport Editor from './Editor';\r\nimport Sidebar from './Components/Sidebar';\r\nimport CodeBlock from './Components/CodeBlock';\r\nimport BFS from './resources/pseudocodes/BFS';\r\nimport BFS_table from './resources/value_tables/BFS_table';\r\n\r\nimport Footer from './Components/Footer';\r\nimport MenuBar from './Components/MenuBar';\r\n\r\nclass App extends React.Component{\r\n  \r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Container>\r\n            <ReactNotification/>\r\n            <CodeBlock/>\r\n            <MenuBar/>\r\n            <Row>\r\n              <Col>\r\n                <Editor algorithm={this.props.algorithm} />\r\n              </Col>\r\n              {/*\r\n                <Col xs={3}>\r\n                  <AlgorithmInfo algorithm={this.props.algorithm} />\r\n                </Col>\r\n              */}\r\n            </Row>\r\n            <Footer/>\r\n          </Container>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const DFS = [\r\n  { text: 'DFS_visitar(nodo u):', ind: 0},\r\n  { text: 'color[u]=Gris', ind: 1},\r\n  { text: 'Para cada v adyacente a u:', ind: 1},\r\n  { text: 'Si color[v] es blanco:', ind: 2},\r\n  { text: 'DFS_visitar(v)', ind: 3},\r\n  { text: 'color[u]=Negro', ind: 1},\r\n  { text: '\\u2063', ind: 0},\r\n  { text: 'DFS(Grafo G(V,E), Nodo inicio):', ind: 0},\r\n  { text: 'Para cada u \\u2208 V', ind: 1 },\r\n  { text: 'color[u]=blanco:', ind: 2 },\r\n  { text: 'DFS_visitar(u)', ind: 1 },\r\n]\r\nexport default DFS;","const dijkstra = [\r\n  {text: 'Dijkstra(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'encolar(cola, <inicio,0>)', ind:1},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si distancia[u]+peso(u,v)<distancia[v]:', ind:3},\r\n  {text: 'distancia[v]=distancia[u]+peso(u,v)', ind:  4},\r\n  {text: 'actualizar(cola, <v,distancia[v]>)', ind: 4},\r\n];\r\n\r\nexport default dijkstra;","const kruskal = [\r\n  {text: 'Kruskal(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'ordenar_por_peso(E)', ind: 1},\r\n  {text: 'Para cada arista (u, v) \\u2208 E:', ind: 1},\r\n  {text: 'Si no_camino(u,v):', ind: 2},\r\n  {text: 'Añadir (u, v) a F', ind: 3},\r\n  {text: 'Retornar F', ind: 1},\r\n]\r\n\r\nexport default kruskal;","const bellmanFord = [\r\n  {text: 'BellmanFord(Grafo G(V,E), nodo inicio):', ind: 0},\r\n  {text: 'Para cada u \\u2208 V:', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'distancia[inicio]=0', ind: 1},\r\n  {text: 'Para i=0 hasta |G|-1:', ind: 1},\r\n  {text: 'Para cada arista (u, v) con peso w \\u2208 E:', ind: 2},\r\n  {text: 'Si distancia[u]+w<distancia[v]', ind: 3},\r\n  {text: 'distancia[v]=distancia[u]+w', ind: 4},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'Para cada arista (u, v) con peso w \\u2208 E:', ind: 1},\r\n  {text: 'Si distancia[u]+w<distancia[v]', ind: 2},\r\n  {text: 'Alertar existencia de ciclo negativo', ind: 3},\r\n];\r\n\r\nexport default bellmanFord;","const bubblesort = [\r\n  {text: 'OrdenamientoBurbuja(Arreglo A):', ind: 0},\r\n  {text: 'Repetir:', ind: 1},\r\n  {text: 'Ordenado=Verdad', ind: 2},\r\n  {text: 'Para i=1 hasta longitud(A)-1:', ind: 2},\r\n  {text: 'Si A[i-1] > A[i]:', ind: 3},\r\n  {text: 'Intercambiar(A[i-1], A[i])', ind: 4},\r\n  {text: 'Ordenado=Falso', ind: 4},\r\n  {text: 'Hasta Ordenado', ind: 1},\r\n];\r\n\r\nexport default bubblesort;","const mergesort = [\r\n  {text: 'mergeSort(Arreglo A[n]):', ind: 0},\r\n  {text: 'Si n==1:', ind: 1},\r\n  {text: 'Retornar A', ind: 2},\r\n  {text: 'Arreglo L=mergeSort(A[0..n/2))', ind:1},\r\n  {text: 'Arreglo R=mergeSort(A[n/2..n))', ind:1},\r\n  {text: 'retornar merge(L,R)', ind: 1},\r\n  {text: '\\u2063', ind: 0},\r\n  {text: 'merge(Arreglo L[n], Arreglo R[m]):', ind: 0},\r\n  {text: 'Arreglo M[n+m]', ind: 1},\r\n  {text: 'p=0, i=0, j=0', ind: 1},\r\n  {text: 'Mientras i<n o j<m :', ind: 1},\r\n  {text: 'Si j==m o (i<n y L[i]'+'\\u2264'+'R[j]):', ind: 2},\r\n  {text: 'M[p]=L[i], p=p+1, i=i+1', ind: 3},\r\n  {text: 'Sino:', ind:2},\r\n  {text: 'M[p]=R[j], p=p+1, j=j+1', ind: 3},\r\n  {text: 'Retornar M', ind: 1}\r\n];\r\n\r\nexport default mergesort;","const prim = [\r\n  {text: 'Prim(Grafo G(V,E)):', ind: 0},\r\n  {text: 'F=Vacio', ind: 1},\r\n  {text: 'Para cada u \\u2208 V', ind: 1},\r\n  {text: 'distancia[u]=\\u221E', ind: 2},\r\n  {text: 'padre[u]=u', ind: 2},\r\n  {text: 'encolar(cola,<u,\\u221E>)', ind: 2},\r\n  {text: 'Mientras no vacio(cola):', ind: 1},\r\n  {text: 'u=extraer_minimo(cola)', ind: 2},\r\n  {text: 'Añadir u a F', ind: 2},\r\n  {text: 'Si padre[u]!=u:', ind: 2},\r\n  {text: 'Añadir (padre[u], u) a F', ind: 3},\r\n  {text: 'Para cada v adyacente a u:', ind: 2},\r\n  {text: 'Si v \\u2209 F y peso(u,v)<distancia[v]:', ind: 3},\r\n  {text: 'Actualizar(cola,<v,peso(u,v)>)', ind: 4},\r\n  {text: 'distancia[v]=peso(u,v)', ind: 4},\r\n  {text: 'retornar F', ind: 1}\r\n];\r\n\r\nexport default prim;","const binarySearch = [\r\n  { text: 'BusquedaBinaria(Arreglo A[0..n), entero v):', ind: 0},\r\n  { text: 'inf=0, sup=n-1', ind: 1},\r\n  { text: 'Mientras inf \\u2264 sup:', ind: 1},\r\n  { text: 'medio=(inf+sup)/2', ind: 2},\r\n  { text: 'Si v == A[medio]:', ind: 2},\r\n  { text: 'Retornar Verdadero', ind: 3},\r\n  { text: 'Si v \\u003c A[medio]:', ind: 2},\r\n  { text: 'sup=medio-1', ind: 3},\r\n  { text: 'Sino', ind: 2},\r\n  { text: 'inf=medio+1', ind: 3},\r\n  { text: 'Retornar falso', ind: 1},\r\n];\r\nexport default binarySearch;","import BFS from '../resources/pseudocodes/BFS';\r\nimport DFS from '../resources/pseudocodes/DFS';\r\nimport dijkstra from '../resources/pseudocodes/dijkstra';\r\nimport kruskal from '../resources/pseudocodes/kruskal';\r\nimport bellmanFord from '../resources/pseudocodes/bellmanFord';\r\nimport bubblesort from '../resources/pseudocodes/bubblesort';\r\nimport mergesort from '../resources/pseudocodes/mergesort';\r\nimport prim from '../resources/pseudocodes/prim';\r\nimport {heap} from '../resources/pseudocodes/heap';\r\nimport {avl} from '../resources/pseudocodes/avl';\r\nimport binarySearch from '../resources/pseudocodes/binarySearch';\r\n\r\nimport listPseudo from '../resources/pseudocodes/list';\r\nimport actions from '../Actions/actions'\r\nconst algorithmReducer = (state = {}, action) => {\r\n  const control = (action.payload ? \r\n    {\r\n      options: action.payload.options,\r\n      photo: action.payload.photo,\r\n      gif: action.payload.gif,\r\n      undo: action.payload.undo,\r\n      redo: action.payload.redo,\r\n      rewind: action.payload.rewind,\r\n      forward: action.payload.forward,\r\n      pause: action.payload.pause,\r\n      repeat: action.payload.repeat,\r\n      remove: action.payload.remove || null,\r\n      clear: action.payload.clear || null,\r\n      selection: null,\r\n    } : {});\r\n\r\n  switch (action.type) {\r\n    case actions.SELECT_BFS:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BFS',\r\n        selection: null,\r\n        pseudo: BFS,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_DFS:\r\n      \r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'DFS',\r\n        pseudo: DFS,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_DIJKSTRA:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Dijkstra',\r\n        pseudo: dijkstra,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_BELLMAN_FORD:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BellmanFord',\r\n        pseudo: bellmanFord,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_KRUSKAL:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Kruskal',\r\n        pseudo: kruskal,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_PRIM:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Prim',\r\n        pseudo: prim,\r\n        run: action.payload.run,\r\n      }\r\n\r\n    case actions.SELECT_HEAP:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'Heap',\r\n        pseudo: heap,\r\n      }\r\n\r\n    case actions.SELECT_AVL:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'AVL',\r\n        pseudo: avl,\r\n      }\r\n\r\n    case actions.SELECT_BUBBLESORT:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BubbleSort',\r\n        pseudo: bubblesort,\r\n      }\r\n\r\n    case actions.SELECT_MERGESORT:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'MergeSort',\r\n        pseudo: mergesort,\r\n      }\r\n\r\n    case actions.SELECT_BINARY_SEARCH:\r\n      return {\r\n        ...state,\r\n        ...control,\r\n        algorithm: 'BinarySearch',\r\n        pseudo: binarySearch,\r\n      }\r\n\r\n    case actions.SELECT_LINKED_LIST:\r\n      const nextState = {\r\n        ...state,\r\n        ...control,\r\n      }\r\n      switch(action.payload.type){\r\n        case actions.SELECT_SINGLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'SingleLinkedList',\r\n            pseudo: listPseudo.singlySet.main,\r\n          }\r\n        case actions.SELECT_DOUBLE_LINKED_LIST:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'DoubleLinkedList',\r\n            pseudo: listPseudo.doublySet.main,\r\n          }\r\n        case actions.SELECT_QUEUE:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Queue',\r\n            pseudo: listPseudo.queueSet.main,\r\n          }\r\n        case actions.SELECT_STACK:\r\n          return {\r\n            ...nextState,\r\n            algorithm: 'Stack',\r\n            pseudo: listPseudo.stackSet.main,\r\n          }\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default algorithmReducer;","import actions from '../Actions/actions'\r\n\r\nconst animationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.ANIMATION_START:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n        animation: true,\r\n      }\r\n\r\n    case actions.ANIMATION_PAUSE:\r\n      return {\r\n        ...state,\r\n        paused: true,\r\n      }\r\n\r\n    case actions.ANIMATION_CONTINUE:\r\n      return {\r\n        ...state,\r\n        paused: false,\r\n      }\r\n\r\n    case actions.ANIMATION_END:\r\n      return {\r\n        ...state,\r\n        animation: false,\r\n        paused: false,\r\n        lines: null,\r\n      }\r\n\r\n    case actions.DEC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.min(state.speed + 0.10, 2),\r\n      }\r\n\r\n    case actions.INC_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: Math.max(state.speed - 0.10, 0),\r\n      }\r\n\r\n    case actions.CHANGE_SPEED:\r\n      return {\r\n        ...state,\r\n        speed: action.payload.speed,\r\n      }\r\n\r\n    case actions.CHANGE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        pseudo: action.payload.pseudo,\r\n      }\r\n    \r\n    case actions.SHOW_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: true,\r\n      }\r\n    \r\n    case actions.TOGGLE_PSEUDO:\r\n      return {\r\n        ...state,\r\n        showPseudo: !state.showPseudo,\r\n      }\r\n      \r\n    case actions.CHANGE_LINE:\r\n      return {\r\n        ...state,\r\n        lines: action.payload.lines,\r\n      }\r\n\r\n    case actions.CHANGE_OPTIONS:\r\n      return {\r\n        ...state,\r\n        options: action.payload.options,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default animationReducer;","import actions from '../Actions/actions'\r\n\r\nconst canvasReducer = (state = {}, action) => {\r\n  switch(action.type){\r\n    case actions.CLEAR_GRAPH:\r\n        return {\r\n          ...state,\r\n          selection: null,\r\n          animation: false,\r\n        }\r\n  \r\n    case actions.LOAD_GRAPH:\r\n      return {\r\n        ...state,\r\n        loadingGraph: true,\r\n        animation: false,\r\n        data: action.payload.data,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.FINISHED_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingGraph: false,\r\n        data: null,\r\n      }\r\n    \r\n    case actions.INC_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: state.gifLength + 1,\r\n      }\r\n\r\n    case actions.RESET_GIF_LENGTH:\r\n      return {\r\n        ...state,\r\n        gifLength: 0,\r\n      }\r\n  \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default canvasReducer;","import actions from '../Actions/actions'\r\n\r\nconst selectionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case actions.NO_SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: null,\r\n      }\r\n\r\n    case actions.SELECTION:\r\n      return {\r\n        ...state,\r\n        selection: action.payload.selection,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default selectionReducer;","import actions from '../Actions/actions';\r\nimport { store } from 'react-notifications-component';\r\nimport React from 'react';\r\nconst createNotification = (title, message, type) => {\r\n  store.addNotification({\r\n    title,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n      onscreen: true,\r\n      showIcon: true,\r\n    },\r\n  });\r\n}\r\n\r\nconst notificationsReducer = action => {\r\n  switch(action.type){\r\n    case actions.NO_NODE_SELECTED_ERROR:\r\n      createNotification('Error', \r\n      'Seleccione un nodo para ejecutar el algoritmo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_EDGE_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Seleccione una arista para cambiar su peso',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.NO_ELEMENT_SELECTED_ERROR:\r\n      createNotification('Error',\r\n      'Debe seleccionar un elemento para eliminarlo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_INTEGER_ERROR: \r\n      createNotification('Error',\r\n      'Debe ingresar un numero entero entre -999 y 999',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_ARRAY_ERROR:\r\n      createNotification('Arreglo invalido',\r\n      'Verifique que el arreglo cumpla con los requerimientos',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_GRAPH_ERROR:\r\n      createNotification('Error en el archivo',\r\n      'El archivo no representa un grafo valido',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.INVALID_HEAP_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un Heap valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n\r\n    case actions.INVALID_AVL_ERROR:\r\n      createNotification('Error',\r\n      'El archivo proporcionado no representa un AVL valido. Intente con otro archivo',\r\n      'danger');\r\n      break;\r\n    \r\n    case actions.ANIMATION_RUNNING_ERROR:\r\n      createNotification('Error',\r\n      'No se pueden hacer modificaciones mientras se ejecuta el algoritmo',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.EMPTY_LIST_WARNING:\r\n      createNotification('La lista se encuentra vacia',\r\n      'No se pudo realizar la accion',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.EMPTY_HEAP_WARNING:\r\n      createNotification('Heap vacio',\r\n      'No se puede extraer el minimo elemento de un heap vacio',\r\n      'warning');\r\n      break;\r\n    \r\n    case actions.DIJKSTRA_NEGATIVE_WEIGHT_WARNING:\r\n      createNotification('Cuidado con las aristas con peso negativo',\r\n      'El algoritmo de Dijkstra puede no obtener el camino minimo si hay aristas negativas',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.NEGATIVE_CYCLE_FOUND:\r\n      createNotification('El algoritmo ha encontrado un ciclo negativo',\r\n      'Los nodos pertenecientes al ciclo estan marcados en rojo',\r\n      'warning');\r\n      break;\r\n\r\n    case actions.AVL_NOT_FOUND_INFO:\r\n      createNotification('El elemento no fue encontrado en el arbol AVL',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.AVL_ELEMENT_ALREADY_INFO:\r\n      createNotification('Elemento en el arbol',\r\n      'El elemento ya se encuentra en el arbol AVL',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BFS_INFO:\r\n      createNotification('',\r\n      'Realizando BFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_DFS_INFO:\r\n      createNotification('',\r\n      'Realizando DFS desde el nodo seleccionado',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_DIJKSTRA_INFO:\r\n      createNotification('',\r\n      'Calculando caminos de peso minimo desde el nodo seleccionado mediante Dijkstra',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_BELLMAN_FORD_INFO:\r\n      createNotification('',\r\n      'Calculando caminos de peso minimo desde el nodo seleccionado mediante Bellman-Ford',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_KRUSKAL_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Kruskal',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_PRIM_INFO:\r\n      createNotification('',\r\n      'Obteniendo arbol recubridor minimo mediante el algoritmo de Prim',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.STARTING_BUBBLESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento burbuja',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_MERGESORT_INFO:\r\n      createNotification('',\r\n      'Ordenando el arreglo mediante ordenamiento por mezcla',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_BINARYSEARCH_INFO:\r\n      createNotification('',\r\n      'Realizando busqueda binaria sobre el arreglo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.STARTING_GIF_RECORDING_INFO:\r\n      createNotification('Creacion de GIF iniciada',\r\n      'La grabacion tendra una duracion maxima de 30 segundos',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.FINISHED_GIF_RECORDING_INFO:\r\n      createNotification('Grabacion de GIF terminada',\r\n      'Procesando GIF para descargar',\r\n      'info');\r\n      break;\r\n\r\n    case actions.SORTING_BINARY_SEARCH_INFO:\r\n      createNotification('Solo arreglos ordenados',\r\n      'Los arreglos se ordenaran para realizar la busqueda binaria',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.BINARY_SEARCH_NOT_FOUND_INFO:\r\n      createNotification('El elemento no se encuentra en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'info');\r\n      break;\r\n    \r\n    case actions.NO_FILE_SELECTED_INFO:\r\n      createNotification('Ningun archivo seleccionado',\r\n      'Debe seleccionar un archivo para subirlo',\r\n      'info');\r\n      break;\r\n\r\n    case actions.FINISHED_GIF_SUCCESS:\r\n      createNotification('Creacion de GIF terminada',\r\n      'El archivo GIF sera descargado a su dispositivo',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.LOAD_GRAPH_SUCCESS:\r\n      createNotification('Grafo cargado con exito',\r\n      ' ',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.PHOTO_SUCCESS:\r\n      createNotification('Captura realizada','La captura sera descargada a su dispositivo','success');\r\n      break;\r\n    \r\n    case actions.FINISHED_ALGORITHM_SUCCESS:\r\n      createNotification('Ejecucion terminada exitosamente',\r\n      'Debe volver a la edicion para modificar el grafo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.AVL_FOUND_SUCCESS:\r\n      createNotification('Busqueda terminada',\r\n      'El elemento fue encontrado en el arbol AVL',\r\n      'success');\r\n      break;\r\n    \r\n    case actions.ARRAY_SORTED_SUCCESS:\r\n      createNotification('El arreglo fue ordenado exitosamente',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n\r\n    case actions.BINARY_SEARCH_FOUND_SUCCESS:\r\n      createNotification('El elemento fue encontrado en el arreglo',\r\n      'Debe volver a la edicion para modificar el arreglo',\r\n      'success');\r\n      break;\r\n  }\r\n}\r\n\r\nexport default notificationsReducer;","import algorithmReducer from './algorithmReducer';\r\nimport animationReducer from './animationReducer';\r\nimport canvasReducer from './canvasReducer';\r\nimport selectionReducer from './selectionReducer';\r\nimport notificationsReducer from './notificationsReducer';\r\nconst initialState = {\r\n  algorithm: 'none',\r\n  selection: null,\r\n  animation: false,\r\n  speed: 0.75,\r\n  loadingGraph: false,\r\n  data: null,\r\n  pseudo: null,\r\n  lines: null,\r\n  run: () => { },\r\n  options: [],\r\n  photo: () => { },\r\n  gif: () => {},\r\n  gifLength: 0,\r\n  showPseudo: true,\r\n  paused: false,\r\n\r\n  remove: null,\r\n  clear: null,\r\n  undo: () => {},\r\n  redo: () => {},\r\n  rewind: () => {},\r\n  forward: () => {},\r\n  repeat: () => {},\r\n  pause: () => {},\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let finalState = state;\r\n\r\n  finalState = algorithmReducer(finalState, action);\r\n  finalState = animationReducer(finalState, action);\r\n  finalState = canvasReducer(finalState, action);\r\n  finalState = selectionReducer(finalState, action);\r\n  \r\n  notificationsReducer(action);\r\n  return finalState;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Reducers/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NODE = {\r\n\t'background-color': 'white',\r\n\t'color': 'black',\r\n\t'border-style': 'solid',\r\n\t'width': '35',\r\n\t'height': '35',\r\n\t'border-width': '1',\r\n\t'border-opacity': '1',\r\n\t'border-color': 'black',\r\n\t'label': 'data(value)',\r\n\t'text-valign': 'center',\r\n\t'text-halign': 'center',\r\n\t'z-index': 3,\r\n};\r\n\r\nexport const NODE_GRAY = {\r\n\t'background-color': 'gray',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_RED = {\r\n\t'background-color': 'red',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_BLACK = {\r\n\t'background-color': 'black',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const NODE_CORRECT = {\r\n\t'background-color': 'Chartreuse',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_WRONG = {\r\n\t'background-color': '#FF9494',\r\n\t'color': 'black',\r\n}\r\n\r\nexport const NODE_SELECTED = {\r\n\t'background-color': '#2B3B6B',\r\n\t'color': 'white',\r\n}\r\n\r\nexport const EDGE = {\r\n  'width': 2,\r\n  'line-color': '#ccc',\r\n\t'curve-style': 'bezier',\r\n\t'line-style': 'solid',\r\n}\r\n\r\nexport const EDGE_VISITED = {\r\n\t'line-color': '#2B3B6B',\r\n\t'target-arrow-color': '#2B3B6B',\r\n}\r\n\r\nexport const EDGE_TRAVERSE = {\r\n\t'line-color': 'green',\r\n\t'target-arrow-color': 'green',\r\n}\r\n\r\nexport const EDGE_NO_MST = {\r\n\t'line-style': 'dashed', \r\n\t'line-color': '#eee'\r\n}\r\n\r\nexport const EDGE_MST = {\r\n\t'line-style': 'solid', \r\n\t'line-color': 'black'\r\n}\r\n\r\nexport const EDGE_DIRECTED = {\r\n\t'target-arrow-color': '#ccc',\r\n\t'line-color': '#ccc',\r\n  'target-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_DOUBLE = {\r\n\t'source-arrow-color': '#ccc',\r\n\t'source-arrow-shape': 'triangle',\r\n}\r\n\r\nexport const EDGE_WEIGHTED = {\r\n\t'label': 'data(weight)',\r\n\t'text-margin-y': '-10.0',\r\n\t'text-rotation': 'autorotate',\r\n}\r\nexport const EDGE_SELECTED = {\r\n  'line-color': 'black',\r\n  'target-arrow-color': 'black',\r\n}\r\n\r\nexport const LINE_STD = {\r\n\t//'background-color': '#1E1E1E',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const LINE_FOCUS = {\r\n\t'background-color': '#4C5090',\r\n\t'color': '#CECFE6',\r\n}\r\n\r\nexport const NODE_POPPER = {\r\n\t'z-index': 0,\r\n\t'border-width': 0,\r\n\t'font-size': 15,\r\n\t'width': 10,\r\n\t'height': 10,\r\n\t'visibility': 'visible',\r\n}"],"sourceRoot":""}